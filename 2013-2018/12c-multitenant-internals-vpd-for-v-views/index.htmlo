This was first published on <a href=https://blog.dbi-services.com/12c-multitenant-internals-vpd-for-v-views>https://blog.dbi-services.com/12c-multitenant-internals-vpd-for-v-views</a> (2017-06-27)
								<h1 class="entry-title">12c Multitenant Internals: VPD for V$ views</h1>
		<div class="content-inner">
			
						
						
		   
			<p>I described in an <a href="https://blog.dbi-services.com/12c-multitenant-internals-awr-tables-and-views/" target="_blank">earlier post</a> on AWR views how the dictionary views were using metadata and object links to show information from other containers. But this mechanism cannot work for fixed views (aka V$) because they don&#8217;t have their definition in the dictionary.
<span id="more-17225"></span>
The big difference is that most of V$ views are available long before the dictionary is opened or even created. Just start an instance in NOMOUNT and you can query the V$ views. Even in multitenant, you can switch to different containers in MOUNT, and query V$ views, when no dictionary is opened.</p>
<p><pre>SQL&gt; alter database mount;
Database altered.

SQL&gt; show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       MOUNTED
         3 PDB1                           MOUNTED

SQL&gt; alter session set container=pdb1;
Session altered.

SQL&gt; show pdbs;

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         3 PDB1                           MOUNTED</pre></p>
<p>V$ views query information from the instance and this information pertain to one container:</p>
<ul>
<li>CON_ID=0 for the CDB itself</li>
<li>CON_ID=1 for CDB$ROOT</li>
<li>CON_ID=2 for PDB$SEED</li>
<li>CON_ID=3 for the first PDB you have created</li>
</ul>
<p>When you are in root, the V$ views are queried as normal and show all information &#8211; from all containers &#8211; with their related CON_ID</p>
<p>When you are in a PDB, you must see the objects that belong to your PDB, but not those that belong to other PDBS. But this is not sufficient. For example, you may query the version, and the version is related to the CDB itself, with CON_ID=0:</p>
<p><pre>SQL&gt; alter session set container=CDB$ROOT;
Session altered.

SQL&gt; select * from v$version;

BANNER                                                                               CON_ID
-------------------------------------------------------------------------------- ----------
Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production              0
PL/SQL Release 12.2.0.1.0 - Production                                                    0
CORE    12.2.0.1.0      Production                                                                  0
TNS for Linux: Version 12.2.0.1.0 - Production                                            0
NLSRTL Version 12.2.0.1.0 - Production                                                    0</pre></p>
<p>Then, in a PDB you should see your PDB objects and the CON_ID=0 ones. Oracle needs a new mecanism for that. One way would be to switch to root, query the V$ and filter on CON_ID. We don&#8217;t need that. Context switch is there to access data from a different container tablespace, because tablepaces are not shared. But V$ views expose data from the instance, and the instance is shared. Any container can see all rows, and we just want to filter some rows.</p>
<p>Here is the execution plan when querying V$VERSION from a PDB:</p>
<p><pre>
SQL&gt; connect sys/oracle@//localhost/PDB1 as sysdba
Connected.
SQL&gt; explain plan for select * from v$version;
Explained.

SQL&gt; select * from table(dbms_xplan.display);
PLAN_TABLE_OUTPUT
Plan hash value: 1078166315

------------------------------------------------------------------------------
| Id  | Operation        | Name      | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------
|   0 | SELECT STATEMENT |           |     1 |    68 |     0   (0)| 00:00:01 |
|*  1 |  FIXED TABLE FULL| X$VERSION |     1 |    68 |     0   (0)| 00:00:01 |
------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------
   1 - filter(("CON_ID"=0 OR "CON_ID"=3) AND
              "INST_ID"=USERENV('INSTANCE'))
</pre></p>
<p>An additional predicate (&#8220;CON_ID&#8221;=0 OR &#8220;CON_ID&#8221;=3) is added to the view. How is it done? Oracle has a security feature for that: Virtual Private Database &#8211; aka Row Level Security &#8211;  which adds a where clause dynamically.</p>
<p>One way to get more information about virtual private databases is to have an error on its execution and I know that a user with only select privilege cannot EXPLAIN PLAN (see <a href="https://support.oracle.com/epmos/faces/DocContentDisplay?id=1029064.6" target="_blank">MOS Note 1029064.6</a>).</p>
<p>I connect to a PDB with a low privileged user:
<pre>SQL&gt; connect scott/tiger@//localhost/PDB1
Connected.</pre></p>
<p>I explain plan the V$VERSION fixed view.
<pre>SQL&gt; explain plan for select * from v$version;

Error starting at line : 10 File @ /media/sf_share/122/blogs/multitenant-vpd.sql
In command -
explain plan for select * from v$version
Error report -
ORA-28113: policy predicate has error
28113. 00000 -  "policy predicate has error"
*Cause:    Policy function generates invalid predicate.
*Action:   Review the trace file for detailed error information.
</pre></p>
<p>Interesting error which confirms the guess: this is a VPD error and it generates a trace:
<pre>*** 2017-06-26T22:45:17.838507+02:00 (PDB1(3))
*** SESSION ID:(141.17865) 2017-06-26T22:45:17.838537+02:00
*** CLIENT ID:() 2017-06-26T22:45:17.838541+02:00
*** SERVICE NAME:(pdb1) 2017-06-26T22:45:17.838545+02:00
*** MODULE NAME:(java@VM104 (TNS V1-V3)) 2017-06-26T22:45:17.838548+02:00
*** ACTION NAME:() 2017-06-26T22:45:17.838552+02:00
*** CLIENT DRIVER:(jdbcoci : 12.2.0.1.0) 2017-06-26T22:45:17.838555+02:00
*** CONTAINER ID:(3) 2017-06-26T22:45:17.838558+02:00

-------------------------------------------------------------
Error information for ORA-28113:
Logon user     : SCOTT
Table/View     : SYS.V_$VERSION
VPD Policy name    : CON_ID
Policy function: SYS.CON_ID
RLS view  :
SELECT  "BANNER","CON_ID" FROM "SYS"."V_$VERSION"   "V_$VERSION" WHERE (con_id IN (0, 3) )
ORA-01039: insufficient privileges on underlying objects of the view
-------------------------------------------------------------</pre></p>
<p>There&#8217;s no container switch here, all is running in PDB1 with CON_ID=3 and the internal VPD has added a where clause to filter rows with CON_ID=0 and CON_ID=3</p>
<p>Do not search for the VPD policy name &#8216;CON_ID&#8217; and function &#8216;CON_ID&#8217; in the dictionary views because this happens even when the dictionary is not accessible. This is an internal policy used when querying fixed views in multitenant and which probably use some of the VPD code only.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-172260"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
