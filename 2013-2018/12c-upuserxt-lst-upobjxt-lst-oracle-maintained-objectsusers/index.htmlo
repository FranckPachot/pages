This was first published on <a href=https://blog.dbi-services.com/12c-upuserxt-lst-upobjxt-lst-oracle-maintained-objectsusers>https://blog.dbi-services.com/12c-upuserxt-lst-upobjxt-lst-oracle-maintained-objectsusers</a> (2018-05-15)
								<h1 class="entry-title">12c upuserxt.lst, upobjxt.lst &amp; Oracle Maintained objects/users</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Mike Dietrich has blogged recently about <a href="https://mikedietrichde.com/upuserxt-lst-lists-oracle-supplied-user-schemas" target="_blank">upuserxt.lst</a> and <a href="https://mikedietrichde.com/upobjxt-lst-lists-oracle-supplied-objects-and-users" target="_blank">upobjxt.lst</a> and how to query them with external table. The first time I&#8217;ve seen those &#8216;.lst&#8217; files, the default extension for sqlplus spool files, I wondered whether they were provided in ?/rdbms/admin on purpose, or if they were just some leftovers from some tests Oracle did before packaging the Oracle Home. Finally, I realized that they were there on purpose and that those &#8216;.lst&#8217; are important files when upgrading to 12c.
<span id="more-23428"></span>
I&#8217;ll look at an 18c Oracle Home (/rdbms/admin) in the Oracle Cloud but that applies to all 12c (and 18c is a 12cR2 patchset). One of the most important little feature of 12c is the tagging of Oracle Supplied objects and users. Before 12c it was a nightmare to distinguish system users from application ones. I detailed that in a <a href="https://blog.dbi-services.com/oracle-system-schemas-vs-created-users/" target="_blank">previous post</a>.</p>
<h3>At database creation: _oracle_script</h3>
<p>In a newly created 12c database, all the objects and users belonging to the system are flagged with ORACLE_MAINTAINED=Y</p>
<p>Here is an example listing system users and roles:
<pre>
SQL&gt; select listagg(username,',' on overflow truncate) within group (order by username) from dba_users where oracle_maintained='Y';LISTAGG(USERNAME,','ONOVERFLOWTRUNCATE)WITHINGROUP(ORDERBYUSERNAME)

ANONYMOUS,APPQOSSYS,AUDSYS,CTXSYS,DBSFWUSER,DBSNMP,DIP,DVF,DVSYS,GGSYS,GSMADMIN_INTERNAL,GSMCATUSER,GSMUSER,LBACSYS,MDDATA,MDSYS,OJVMSYS,OLAPSYS,ORACLE_OCM,ORDDATA,ORDPLUGINS,ORDSYS,OUTLN,REMOTE_SCHEDULER_AGENT,SI_INFORMTN_SCHEMA,SYS,SYS$UMF,SYSBACKUP,SYSDG,SYSKM,SYSRAC,SYSTEM,WMSYS,XDB,XS$NULL

SQL&gt; select listagg(role,',' on overflow truncate) within group (order by role) from dba_roles where oracle_maintained='Y';
LISTAGG(ROLE,','ONOVERFLOWTRUNCATE)WITHINGROUP(ORDERBYROLE)

ADM_PARALLEL_EXECUTE_TASK,APPLICATION_TRACE_VIEWER,AQ_ADMINISTRATOR_ROLE,AQ_USER_ROLE,AUDIT_ADMIN,AUDIT_VIEWER,AUTHENTICATEDUSER,CAPTURE_ADMIN,CDB_DBA,CONNECT,CTXAPP,DATAPATCH_ROLE,DATAPUMP_EXP_FULL_DATABASE,DATAPUMP_IMP_FULL_DATABASE,DBA,DBFS_ROLE,DBJAVASCRIPT,DBMS_MDX_INTERNAL,DV_ACCTMGR,DV_ADMIN,DV_AUDIT_CLEANUP,DV_DATAPUMP_NETWORK_LINK,DV_GOLDENGATE_ADMIN,DV_GOLDENGATE_REDO_ACCESS,DV_MONITOR,DV_OWNER,DV_PATCH_ADMIN,DV_POLICY_OWNER,DV_PUBLIC,DV_REALM_OWNER,DV_REALM_RESOURCE,DV_SECANALYST,DV_STREAMS_ADMIN,DV_XSTREAM_ADMIN,EJBCLIENT,EM_EXPRESS_ALL,EM_EXPRESS_BASIC,EXECUTE_CATALOG_ROLE,EXP_FULL_DATABASE,GATHER_SYSTEM_STATISTICS,GDS_CATALOG_SELECT,GGSYS_ROLE,GLOBAL_AQ_USER_ROLE,GSMADMIN_ROLE,GSMUSER_ROLE,GSM_POOLADMIN_ROLE,HS_ADMIN_EXECUTE_ROLE,HS_ADMIN_ROLE,HS_ADMIN_SELECT_ROLE,IMP_FULL_DATABASE,JAVADEBUGPRIV,JAVAIDPRIV,JAVASYSPRIV,JAVAUSERPRIV,JAVA_ADMIN,JMXSERVER,LBAC_DBA,LOGSTDBY_ADMINISTRATOR,OEM_ADVISOR,OEM_MONITOR,OLAP_DBA,OLAP_USER,OLAP_XS_ADMIN,OPTIMIZER_PROCESSING_RATE,ORDADMIN,PDB_DBA,PROVISIONER,RDFCTX_ADMIN,RECOVERY_CATALOG_OWNER,RECOVERY_CATALOG_OWNER_VPD,RECOVERY_CATALOG_USER,RESOURCE,SCHEDULER_ADMIN,SELECT_CATALOG_ROLE,SODA_APP,SYSUMF_ROLE,WM_ADMIN_ROLE,XDBADMIN,XDB_SET_INVOKER,XDB_WEBSERVICES,XDB_WEBSERVICES_OVER_HTTP,XDB_WEBSERVICES_WITH_PUBLIC,XS_CACHE_ADMIN,XS_CONNECT,XS_NAMESPACE_ADMIN,XS_SESSION_ADMIN
</pre></p>
<p>And here is an exemple listing the owners of system objects flagged with ORACLE_MAINTAINED=Y
<pre>
SQL&gt; select listagg(num||' '||owner,',' on overflow truncate) within group (order by num) from (select owner,count(*) num from dba_objects where oracle_maintained='Y' group by owner);LISTAGG(NUM||''||OWNER,','ONOVERFLOWTRUNCATE)WITHINGROUP(ORDERBYNUM)

6 APPQOSSYS,8 DBSFWUSER,8 ORACLE_OCM,8 SI_INFORMTN_SCHEMA,10 ORDPLUGINS,10 OUTLN,13 REMOTE_SCHEDULER_AGENT,22 DVF,24 OJVMSYS,25 OLAPSYS,35 AUDSYS,55 DBSNMP,209 GSMADMIN_INTERNAL,239 LBACSYS,292 ORDDATA,398 DVSYS,399 WMSYS,412 CTXSYS,466 SYSTEM,1029 XDB,2574 MDSYS,3171 ORDSYS,12173 PUBLIC,51069 SYS
</pre></p>
<p>How this is done? That&#8217;s easy. All system objects are created by Oracle scripts, such as those called by catalog.sql and catproc.sql during database creation. Those scripts set &#8220;_oracle_script&#8221;=true before running the DDL and all object created while &#8220;_oracle_script&#8221;=true is flagged as Oracle Maintained.</p>
<p>If, in a lab (not in prod), you create your own object in the same way, they will also be flagged as Oracle Maintained:
<pre>
SQL&gt; connect / as sysdba
Connected.
SQL&gt; alter session set "_oracle_script"=true;
Session altered.

SQL&gt; create user FRANCK identified by myself;
User FRANCK created.
SQL&gt; alter user FRANCK quota unlimited on users;
User FRANCK altered.

SQL&gt; create table FRANCK.DEMO(n primary key) as select 1 from dual;
Table FRANCK.DEMO created.
SQL&gt; alter session set "_oracle_script"=false;
Session altered.

SQL&gt; select username,oracle_maintained from dba_users where username='FRANCK';

USERNAME   ORACLE_MAINTAINED
--------   -----------------
FRANCK     Y
SQL&gt; select owner,object_name,object_type,oracle_maintained from dba_objects where owner='FRANCK';

OWNER    OBJECT_NAME   OBJECT_TYPE   ORACLE_MAINTAINED
------   ----          -----         -
FRANCK   DEMO          TABLE         Y
FRANCK   SYS_C007409   INDEX         Y
</pre></p>
<p>So, this one is easy. Database creation runs with &#8220;_oracle_script&#8221;=true and objects and users created when this parameter is set to true are flagged as Oracle Supplied objects.</p>
<h3>And during upgrades?</h3>
<p>When you upgrade from 11g to 12c you don&#8217;t have this Oracle Maintained information. The catupgrd runs with &#8220;_oracle_script&#8221;=true but this script does not create all objects. However the upgraded database has all system objects flagged as Oracle Maintained. This is where upuserxt.lst upobjxt.lst are used.</p>
<p>When Oracle developers build a new Oracle Home to be shipped, they create a database (including all options I suppose) and then run the utlupox.sql script. This script will list all Oracle Maintained users and objects, just relying on the flag that has been set during creation, and spool to the upuserxt.lst upobjxt.lst files. And those files will be shipped in the Oracle Home (all that under /rdbms/admin).</p>
<p>These .lst files will be used when upgrading from pre-12c in order to set the flags for Oracle Maintained objects. The external tables SYS.USERXT on upuserxt.lst and SYS.OBJXT on upobjxt.lst are created by catupcox.sql and, finally, those tables are read by catuposb.sql to set Oracle Maintained in USER$ and OBJ$. The catuposb.sql is a bit more complex that that because there are objects that can have different name when a database is created. </p>
<p>Note that this information about Oracle Maintained objects, in addition to being very useful for us, is crucial when you further convert the non-CDB to a PDB because those will become metadata links.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-234290"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
