This was first published on <a href=https://blog.dbi-services.com/12cr2-auditing-all-users-with-a-role-granted>https://blog.dbi-services.com/12cr2-auditing-all-users-with-a-role-granted</a> (2017-06-04)
								<h1 class="entry-title">12cR2 auditing all users with a role granted</h1>
		<div class="content-inner">
			
						
						
		   
			<p>12.1 introduced Unified Auditing where you define policies and then enable them. As with the traditional audit, you enable them for all users or for specific users. The unified auditing adds a syntax to audit all users except some listed ones. 12.2 adds a syntax to audit a group of users, defined by the role granted. This is the best way to enable a policy for a group of users, including those created later.
<span id="more-16993"></span>
I create a simple policy, to audit logon and DBA role usage:
<pre>
SQL&gt; create audit policy DEMO_POLICY actions logon, roles DBA;
Audit POLICY created.
</pre>
I create a new DBA user, USER1
<pre>
SQL&gt; create user USER1 identified by covfefe quota unlimited on USERS;
User USER1 created.
SQL&gt; grant DBA to USER1;
Grant succeeded.
</pre>
I want to enable the policy for this user because I want to audit all DBAs
<pre>
SQL&gt; audit policy DEMO_POLICY by USER1;
Audit succeeded.
</pre>
I remove Audit records for this demo
<pre>
SQL&gt; exec dbms_audit_mgmt.clean_audit_trail(audit_trail_type=&gt;dbms_audit_mgmt.audit_trail_unified,use_last_arch_timestamp=&gt;false);
PL/SQL procedure successfully completed.
</pre>
Let&#8217;s connect with this user and see what is audited:
<pre>
SQL&gt; connect USER1/covfefe@//localhost/PDB1
Connected.

SQL&gt; select audit_type,os_username,userhost,terminal,dbusername,action_name,unified_audit_policies,system_privilege_used,event_timestamp
  2   from unified_audit_trail where unified_audit_policies='DEMO_POLICY' order by event_timestamp;

AUDIT_TYPE  OS_USERNAME  USERHOST  TERMINAL  DBUSERNAME  ACTION_NAME  UNIFIED_AUDIT_POLICIES  SYSTEM_PRIVILEGE_USED  EVENT_TIMESTAMP
----------  -----------  --------  --------  ----------  -----------  ----------------------  ---------------------  ---------------
Standard    oracle       VM104     pts/0     USER1       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.22.51.865094000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.22.51.948187000 PM
</pre>
The logon and the select on dictionary table (possible here thanks to the DBA role) has been audited because the policy is enabled for this user.</p>
<p>We have a new DBA and we create a new user for him:
<pre>
SQL&gt; create user USER2 identified by covfefe quota unlimited on USERS;
User USER2 created.
SQL&gt; grant DBA to USER2;
Grant succeeded.
</pre>
He connects and check what is audited:
<pre>
SQL&gt; connect USER2/covfefe@//localhost/PDB1
Connected.
SQL&gt; select audit_type,os_username,userhost,terminal,dbusername,action_name,unified_audit_policies,system_privilege_used,event_timestamp
  2   from unified_audit_trail where unified_audit_policies='DEMO_POLICY' order by event_timestamp;

AUDIT_TYPE  OS_USERNAME  USERHOST  TERMINAL  DBUSERNAME  ACTION_NAME  UNIFIED_AUDIT_POLICIES  SYSTEM_PRIVILEGE_USED  EVENT_TIMESTAMP
----------  -----------  --------  --------  ----------  -----------  ----------------------  ---------------------  ---------------
Standard    oracle       VM104     pts/0     USER1       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.22.51.865094000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.22.51.948187000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.22.52.132814000 PM
</pre></p>
<p>Nothing is audited for this user. The DBA role usage is audited, but only for USER1.</p>
<p>Of course, we can add an audit statement for each user created for a DBA:
<pre>
SQL&gt; audit policy DEMO_POLICY by USER2;
Audit succeeded.
</pre>
Then his new activity is audited:
<pre>
SQL&gt; connect USER2/covfefe@//localhost/PDB1
Connected.
SQL&gt; select audit_type,os_username,userhost,terminal,dbusername,action_name,unified_audit_policies,system_privilege_used,event_timestamp
  2   from unified_audit_trail where unified_audit_policies='DEMO_POLICY' order by event_timestamp;

AUDIT_TYPE  OS_USERNAME  USERHOST  TERMINAL  DBUSERNAME  ACTION_NAME  UNIFIED_AUDIT_POLICIES  SYSTEM_PRIVILEGE_USED  EVENT_TIMESTAMP
----------  -----------  --------  --------  ----------  -----------  ----------------------  ---------------------  ---------------
Standard    oracle       VM104     pts/0     USER1       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.22.51.865094000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.22.51.948187000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.22.52.132814000 PM
Standard    oracle       VM104     pts/0     USER2       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.22.52.338928000 PM
</pre>
But for security reason, we would like to be sure that any new user having the DBA role granted is audited.
Let&#8217;s try something else
<pre>
SQL&gt; noaudit policy DEMO_POLICY by USER1,USER2;
Noaudit succeeded.
</pre>
We can simply audit all users:
<pre>
SQL&gt; audit policy DEMO_POLICY;
Audit succeeded.
</pre>
But this is too much. Some applications constantly logon and logoff and we don&#8217;t want to have that in the audit trail.
<pre>
SQL&gt; noaudit policy DEMO_POLICY;
Noaudit succeeded.
</pre>
We can still enable the policy for all users, and exempt those users we don&#8217;t want:
<pre>
SQL&gt; audit policy DEMO_POLICY except DEMO;
Audit succeeded.
</pre>
Here is what is enabled, and this will audot all new users:
<pre>
SQL&gt; select * from audit_unified_enabled_policies;

USER_NAME  POLICY_NAME         ENABLED_OPT  ENABLED_OPTION  ENTITY_NAME  ENTITY_TYPE  SUCCESS  FAILURE
---------  -----------         -----------  --------------  -----------  -----------  -------  -------
DEMO       DEMO_POLICY         EXCEPT       EXCEPT USER     DEMO         USER         YES      YES
ALL USERS  ORA_SECURECONFIG    BY           BY USER         ALL USERS    USER         YES      YES
ALL USERS  ORA_LOGON_FAILURES  BY           BY USER         ALL USERS    USER         NO       YES
</pre>
But once again, this is not what we want.
<pre>
SQL&gt; noaudit policy DEMO_POLICY by DEMO;
Noaudit succeeded.

SQL&gt; select * from audit_unified_enabled_policies;

USER_NAME  POLICY_NAME         ENABLED_OPT  ENABLED_OPTION  ENTITY_NAME  ENTITY_TYPE  SUCCESS  FAILURE
---------  -----------         -----------  --------------  -----------  -----------  -------  -------
ALL USERS  ORA_SECURECONFIG    BY           BY USER         ALL USERS    USER         YES      YES
ALL USERS  ORA_LOGON_FAILURES  BY           BY USER         ALL USERS    USER         NO       YES
</pre></p>
<h3>Audit all users to whom roles are granted directly</h3>
<p>In 12<i>c</i>R2 we have the possibility to do exactly what we want: audit all users having the DBA role granted:
<pre>
SQL&gt; audit policy DEMO_POLICY by users with granted roles DBA;
Audit succeeded.
</pre>
This enables the audit for all users for whom the DBA role has been directly granted:
<pre>
SQL&gt; select * from audit_unified_enabled_policies;

USER_NAME  POLICY_NAME         ENABLED_OPT  ENABLED_OPTION   ENTITY_NAME  ENTITY_TYPE  SUCCESS  FAILURE
---------  -----------         -----------  --------------   -----------  -----------  -------  -------
           DEMO_POLICY         INVALID      BY GRANTED ROLE  DBA          ROLE         YES      YES
ALL USERS  ORA_SECURECONFIG    BY           BY USER          ALL USERS    USER         YES      YES
ALL USERS  ORA_LOGON_FAILURES  BY           BY USER          ALL USERS    USER         NO       YES
</pre>
The important thing is that a newly created user will be audited as long as he has the DBA role directly granted:
<pre>
SQL&gt; create user USER3 identified by covfefe quota unlimited on USERS;
User USER3 created.
SQL&gt; grant DBA to USER3;
Grant succeeded.

SQL&gt; connect USER3/covfefe@//localhost/PDB1
Connected.
SQL&gt; select audit_type,os_username,userhost,terminal,dbusername,action_name,unified_audit_policies,system_privilege_used,event_timestamp
  2   from unified_audit_trail where unified_audit_policies='DEMO_POLICY' order by event_timestamp;

AUDIT_TYPE  OS_USERNAME  USERHOST  TERMINAL  DBUSERNAME  ACTION_NAME  UNIFIED_AUDIT_POLICIES  SYSTEM_PRIVILEGE_USED  EVENT_TIMESTAMP
----------  -----------  --------  --------  ----------  -----------  ----------------------  ---------------------  ---------------
Standard    oracle       VM104     pts/0     USER1       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.29.17.915217000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.17.988151000 PM
Standard    oracle       VM104     pts/0     USER1       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.18.117258000 PM
Standard    oracle       VM104     pts/0     USER2       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.29.18.322716000 PM
Standard    oracle       VM104     pts/0     USER2       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.18.345351000 PM
Standard    oracle       VM104     pts/0     USER2       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.18.415117000 PM
Standard    oracle       VM104     pts/0     USER2       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.18.439656000 PM
Standard    oracle       VM104     pts/0     USER2       SELECT       DEMO_POLICY             SELECT ANY DICTIONARY  04-JUN-17 04.29.18.455274000 PM
Standard    oracle       VM104     pts/0     USER3       LOGON        DEMO_POLICY             CREATE SESSION         04-JUN-17 04.29.18.507496000 PM
</pre></p>
<p>This policy applies to all users having the DBA role, and gives the possibility to audit more than their DBA role usage: here I audit all login from users having the DBA role. </p>
<h3>So what?</h3>
<p>We don&#8217;t use roles only to group privileges to grant. A role is usually granted to define groups of users: DBAs, Application user, Read-only application users, etc. The Unified Auditing can define complex policies, combining the audit of actions, privileges, and roles. The 12.2 syntax allows enabling the policy to a specific group of users.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-169940"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 2 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1 parent" id="comment-7592">
				<div id="div-comment-7592" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/3821c1fab858ce5f7650d796b212eca5?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Mikhail Velikikh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7592">
			June 5, 2017 at 6 h 48 min</a>		</div>

		<p>Hi Franck,</p>
<p>Though 12.1 does not have such smooth syntax for this particular case, we can use the AUDIT CONDITION clause for that with some tiny restrictions.
Like:
<pre>
alter audit policy DEMO_POLICY condition 'sys_context( ''SYS_SESSION_ROLES'', ''DBA'')=''TRUE''' evaluate per session;
</pre>
Unfortunately, the SYS_SESSION_ROLES namespace defines whether a passed role is ENABLED in the session or not. It means that if a user has the DBA role granted but not ENABLED in the session, our policy does not fire. The 12.2 syntax works for both cases:
audit policy DEMO_POLICY by users with granted roles DBA;</p>
<p>The AUDIT CONDITION is also not so straightforward.</p>
<p>Yours faithfully,
Mikhail Velikikh.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-75931"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7592' onclick='return addComment.moveForm( "div-comment-7592", "7592", "respond", "16993" )' aria-label='Reply to Mikhail to Mikhail Velikikh'>Reply to Mikhail</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor odd alt depth-2" id="comment-7601">
				<div id="div-comment-7601" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7601">
			June 6, 2017 at 17 h 39 min</a>		</div>

		<p>Thanks Mikhail, good workaround in &lt; 12.2
Regards,
Franck.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-76021"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7601' onclick='return addComment.moveForm( "div-comment-7601", "7601", "respond", "16993" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
