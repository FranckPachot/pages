This was first published on <a href=https://blog.dbi-services.com/12cr2-create_file_dest-for-pdb-isolation>https://blog.dbi-services.com/12cr2-create_file_dest-for-pdb-isolation</a> (2016-11-16)
								<h1 class="entry-title">12cR2: CREATE_FILE_DEST for PDB isolation</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Two years ago I filled an <a href="https://community.oracle.com/ideas/2495" target="_blank">OTN idea</a> to &#8216;Constrain PDB datafiles into specific directory&#8217; and made it an enhancement request for 12<em>c</em> Release 2. When you provision a PDB, the PDB admin can create tablespaces and put datafiles anywhere in your system. Of course this is not acceptable in a cloud environment. 12.1 has a parameter for directories (PATH_PREFIX) and 12.2 brings CREATE_FILE_DEST for datafiles.
<span id="more-12677"></span></p>
<h3>create_file_dest</h3>
<p>Here is the new option when you create a pluggable database:</p>
<p><pre>
SQL&gt;  create pluggable database PDB1 admin user admin identified by password role=(DBA)
      create_file_dest='/u02/app/oracle/oradata/CDB2/PDB1';

Pluggable database created.
</pre></p>
<p>Let&#8217;s see where are my datafiles:</p>
<p><pre>
SQL&gt; alter pluggable database PDB1 open;
Pluggable database altered.
SQL&gt; alter session set container=PDB1;
Session altered.
SQL&gt; select name from v$datafile;

NAME
--------------------------------------------------------------------------------
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_system_d2od2o7b_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_sysaux_d2od2o7j_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_undotbs1_d2od2o7l_.dbf
</pre></p>
<p>My files have been created in the CREATE_FILE_DEST directory specified at PDB creation, and with an OMF structure.
So maybe I don&#8217;t want to include the CDB name and the PDB name but only a mount point.</p>
<p>If, as a local user, I try to create a datafile elsewhere I get an error:
<pre>
SQL&gt; connect admin/password@//localhost/pdb1.opcoct.oraclecloud.internal
Connected.
SQL&gt; create tablespace APPDATA datafile '/tmp/appdata.dbf' size 5M;
create tablespace APPDATA datafile '/tmp/appdata.dbf' size 5M
*
ERROR at line 1:
ORA-65250: invalid path specified for file - /tmp/appdata.dbf
</pre></p>
<p>This is exactly what I wanted.</p>
<p>Because I&#8217;m bound to this directory, I don&#8217;t need to give an absolute path:
<pre>
SQL&gt; create tablespace APPDATA datafile 'appdata.dbf' size 5M;

Tablespace created.

SQL&gt; select name from v$datafile;

NAME
-------------------------------------------------------------------------------------------------------------
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_system_d2od2o7b_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_sysaux_d2od2o7j_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_undotbs1_d2od2o7l_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/appdata.dbf
</pre></p>
<p>So you don&#8217;t need to use OMF there. If the PDB administrator wants to name the datafiles, he can, as long as they stays under the create_file_dest directory. You can create a datafile in a sub-directory of create_file_dest but it needs to exist of course.</p>
<h3>db_create_file_dest</h3>
<p>Here it just looks like OMF, so I check the db_create_file_dest parameter:</p>
<p><pre>
SQL&gt; show parameter file_dest

NAME                                 TYPE        VALUE
------------------------------------ ----------- ---------------------------------
db_create_file_dest                  string      /u02/app/oracle/oradata/CDB2/PDB1
</pre></p>
<p>and I try to change it (as local user):</p>
<p><pre>
SQL&gt; connect admin/password@//localhost/pdb1.opcoct.oraclecloud.internal;
Connected.
SQL&gt; alter system set db_create_file_dest='/tmp';
alter system set db_create_file_dest='/tmp'
*
ERROR at line 1:
ORA-32017: failure in updating SPFILE
ORA-01031: insufficient privileges

SQL&gt; alter session set db_create_file_dest='/tmp';
ERROR:
ORA-02097: parameter cannot be modified because specified value is invalid
ORA-01031: insufficient privileges
</pre></p>
<p>No need to use lockdown profile here, it is verified at runtime that a local user cannot change it.</p>
<p>If you are connected with a common user, here connected as sysdba, this is the way to change what has been specified at PDB creation time:</p>
<p><pre>
SQL&gt; show con_id

CON_ID
------------------------------
3

SQL&gt; alter system set db_create_file_dest='/tmp';
System altered.

SQL&gt; create tablespace APP1;
Tablespace created.

SQL&gt; select name from v$datafile;

NAME
--------------------------------------------------------------------------------
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_system_d2od2o7b_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_sysaux_d2od2o7j_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_undotbs1_d2od2o7l_.dbf
/u02/app/oracle/oradata/CDB2/PDB1/appdata.dbf
/tmp/CDB2/415260E5D27B5D4BE0534E186A0A4CB8/datafile/o1_mf_app1_d2ohx5sp_.dbf
</pre></p>
<h3>But&#8230;</h3>
<p>The behavior when you create the PDB with the CREATE_FILE_DEST clause is different than when you create it without, and set db_create_file_dest later. In the second case, the restriction does not occur and a local DBA can create a datafile wherever he wants. </p>
<p>So I wanted to check whether this attribute is shipped when plugging PDBs. When looking at the pdb_descr_file xml file I don&#8217;t see anything different except the parameter:
<pre>
   &lt;parameters&gt;
      &lt;parameter&gt;processes=300
      &lt;parameter&gt;nls_language='AMERICAN'
      &lt;parameter&gt;nls_territory='AMERICA'
      &lt;parameter&gt;filesystemio_options='setall'
      &lt;parameter&gt;db_block_size=8192
      &lt;parameter&gt;encrypt_new_tablespaces='CLOUD_ONLY'
      &lt;parameter&gt;compatible='12.2.0'
      &lt;parameter&gt;db_files=250
      &lt;parameter&gt;open_cursors=300
      &lt;parameter&gt;sql92_security=TRUE
      &lt;parameter&gt;pga_aggregate_target=1775294400
      &lt;parameter&gt;sec_protocol_error_trace_action='LOG'
      &lt;parameter&gt;enable_pluggable_database=TRUE
      &lt;spfile&gt;*.db_create_file_dest='/u02/app/oracle/oradata/CDB2/PDB1'
    &lt;/parameters&gt;
</pre>
So I tried to unplug/plug my PDB and the restriction is gone. So be careful.</p>
<p>I&#8217;ve not find a documented way to check if restriction is enabled or not (except trying to create a file outside of db_create_file_dest). Please comment if you know.
However, it seems that that a flag in CONTAINER$ is unset when restriction is there:
<pre>
SQL&gt; create pluggable database PDB1 admin user admin identified by password role=(DBA) create_file_dest='/u02/app/oracle/oradata/CDB2/PDB1';
Pluggable database created.

SQL&gt; select con_id#,flags,decode(bitand(flags, 2147483648), 2147483648, 'YES', 'NO') from container$;

   CON_ID#      FLAGS DEC
---------- ---------- ---
         1          0 NO
         2 3221487616 YES
         3 1610874880 NO
</pre>
Creating the same PDB but without the create_file_dest clause has the same flag as &#8216;NO&#8217;
<pre>
create pluggable database PDB1 admin user admin identified by password role=(DBA);
Pluggable database created.

SQL&gt; select con_id#,flags,decode(bitand(flags, 2147483648), 2147483648, 'YES', 'NO') from container$;

   CON_ID#      FLAGS DEC
---------- ---------- ---
         1          0 NO
         2 3221487616 YES
         3 1074003968 NO
</pre>
I suppose that it is stored elsewhere because those flags are set only once PDB is opened.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-126780"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
