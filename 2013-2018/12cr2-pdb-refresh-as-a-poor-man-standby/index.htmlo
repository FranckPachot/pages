This was first published on <a href=https://blog.dbi-services.com/12cr2-pdb-refresh-as-a-poor-man-standby>https://blog.dbi-services.com/12cr2-pdb-refresh-as-a-poor-man-standby</a> (2017-06-12)
								<h1 class="entry-title">12cR2 PDB refresh as a poor-man standby?</h1>
		<div class="content-inner">
			
						
						
		   
			<h3>Disclaimer</h3>
<p>My goal here is only to show that the Refreshable PDB feature works by shipping and applying redo, and then can synchronize a copy of the datafiles. I do not recommend to use it for disaster recovery in any production environment yet. Even if I&#8217;m using only supported features, those features were not designed for this usage, and are quite new and not stable yet. Disaster Recovery must use safe and proven technologies and this is why I&#8217;ll stick with Dbvisit standby for disaster recovery in Standard Edition.</p>
<p>This post explains what I had in my mind whith the following tweet:
<a href="https://twitter.com/FranckPachot/status/872868762327928832"><img src="../wp-insides/uploads/sites/2/2017/06/CapturePoorManSBY.png" alt="CapturePoorManSBY" width="592" height="286" class="alignnone size-full wp-image-17095" /></a>
<span id="more-17084"></span></p>
<h3>Primary PRDPDB</h3>
<p>On my primary server, I have a CDB1 container database in Standard Edition with one Pluggable Database: PDRDPDB:
<pre>
21:36:45 SQL&gt; connect sys/oracle@//192.168.78.105/CDB1 as sysdba
Connected.

21:36:46 SQL&gt; show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 PRDPDB                         READ WRITE NO
</pre>
I need a user there to be able to remote clone from it:
<pre>
21:36:46 SQL&gt; grant create session, sysoper, dba  to C##DBA identified by oracle container=all;
Grant succeeded.
</pre></p>
<h3>Standby server</h3>
<p>On my standby server, I have a CDB1 container database in Standard Edition, where I create a database link to the production CDB using the user created above to connect to it:
<pre>
21:36:46 SQL&gt; connect sys/oracle@//192.168.78.106:1522/CDB1 as sysdba
Connected.
21:36:46 SQL&gt; create database link CDB1A connect to C##DBA identified by oracle using '//192.168.78.105/CDB1A';
Database link created.
</pre></p>
<p>My standby server runs Grid Infrastructure and has the database created on /acfs which is an ACFS filesystem. We will see the reason later when we will need to create a PDB snapshot copy. Any filesystem where you can use PDB snapshot copy would be fine.</p>
<h3>Standby SBYPDB</h3>
<p>The creation of the &#8216;standby&#8217; pluggable database is done with a simple remote clone command and can be run in 12<i>c</i>R2 with the source PRDPDB still opened read write:</p>
<p><pre>
21:36:46 SQL&gt; create pluggable database SBYPDB from PRDPDB@CDB1A
21:36:46   2  file_name_convert=('/u01/oradata/CDB1A/PRDPDB','/acfs/oradata/CDB1/SBYPDB')
21:36:46   3  refresh mode every 1 minutes;

Pluggable database created.
</pre></p>
<p>The REFRESH MODE is a 12<i>c</i>R2 feature which primary goal is to maintain and refresh a master clone for further provisioning of thin clones. This clone is refreshed every 1 minute, which means that I expect to have at most a one minute gap between PRDPDB and SBYPDB data, with the additional time to apply the 1 minute redo, of course.</p>
<h3>Activity on the source</h3>
<p>I will simulate a crash of the primary server and a failover to the standby, when transactions are running. I&#8217;ll run this activity on the SCOTT.EMP table:
<pre>
21:39:03 SQL&gt; connect scott/tiger@//192.168.78.105/PRDPDB;
Connected.

21:39:04 SQL&gt; select * from emp where ename='KING';

     EMPNO ENAME      JOB              MGR HIREDATE                    SAL
---------- ---------- --------- ---------- -------------------- ----------
      7839 KING       PRESIDENT            17-nov-1981 00:00:00       5000
</pre></p>
<p>I&#8217;m now updating the date and incrementing the number each second.
<pre>
21:39:09 SQL&gt; exec for i in 1..150 loop update emp set hiredate=sysdate, sal=sal+1; dbms_lock.sleep(1); commit; end loop

PL/SQL procedure successfully completed.
</pre>
Here is the latest data on the primary server:
<pre>
21:41:39 SQL&gt; select * from emp where ename='KING';

     EMPNO ENAME      JOB              MGR HIREDATE                    SAL
---------- ---------- --------- ---------- -------------------- ----------
      7839 KING       PRESIDENT            11-jun-2017 21:41:38       5150
</pre></p>
<h3>Crash the primary</h3>
<p>The primary server is not supposed to be accessible in case of Disaster Recovery, so I&#8217;m crashing it:
<pre>
21:41:39 SQL&gt; disconnect
Disconnected from Oracle Database 12c Standard Edition Release 12.2.0.1.0 - 64bit Production
21:41:39 SQL&gt; connect / as sysdba
Connected.
21:41:39 SQL&gt; shutdown abort
ORACLE instance shut down.
</pre></p>
<h3>Activate the standby</h3>
<p>The datafiles are up to date, with a maximum 1 minute gap and all I want is open it and have the application re-connect to it. However a refreshable clone can be opened only read-only. This makes sense: you cannot apply more redo from source once opened read-write. So my first idea was to stop the refresh mode:
<pre>
21:41:45 SQL&gt; connect sys/oracle@//192.168.78.106:1522/CDB1 as sysdba
Connected.
21:41:45 SQL&gt; alter session set container=SBYPDB;
Session altered.

21:41:45 SQL&gt; alter pluggable database SBYPDB refresh mode none;
alter pluggable database SBYPDB refresh mode none
*
ERROR at line 1:
ORA-17627: ORA-12514: TNS:listener does not currently know of service requested
in connect descriptor
ORA-17629: Cannot connect to the remote database server
</pre></p>
<p>It seems that Oracle tries to do one last refresh when you stop the refresh mode, but this fails here because the source is not accessible. I think that it should be possible to open read-write without applying more redo. However, these refreshable clones were not designed for failover. </p>
<p>I hope that one day we will just be able to end refresh mode without connecting to source, accepting to lose the latest transactions. </p>
<h3>Open Read Only</h3>
<p>Without an access to the source, I stay in refresh mode and I can only open read only:
<pre>21:41:45 SQL&gt; alter pluggable database SBYPDB open read-only;
Pluggable database altered.

21:41:47 SQL&gt; alter session set container=SBYPDB;
Session altered.
&amp;nsbp;
21:41:47 SQL&gt; alter session set nls_date_format='dd-mon-yyyy hh24:mi:ss';
Session altered.

21:41:47 SQL&gt; select * from scott.emp where ename='KING';

     EMPNO ENAME      JOB              MGR HIREDATE                    SAL
---------- ---------- --------- ---------- -------------------- ----------
      7839 KING       PRESIDENT            11-jun-2017 21:41:01       5113
</pre></p>
<p>My data is there, with my less than one minute gap, but that&#8217;s not sufficient for me. I want to run my application on it.</p>
<h3>Snapshot Clone</h3>
<p>My first idea to get the PDB read write on the standby server is to clone it. Of course, the failover time should not depend on the size of the database, so my idea is to do a snapshot copy, and this is why I&#8217;ve setup my standby CDB on ACFS. Here I&#8217;m cloning the SBYPDB to the same name as the primary: PRDPDB
<pre>
21:41:47 SQL&gt; alter session set container=CDB$ROOT;
Session altered.

21:41:47 SQL&gt; create pluggable database PRDPDB from SBYPDB file_name_convert=('SBYPDB','PRDPDB') snapshot copy;
Pluggable database created.

21:42:03 SQL&gt; alter pluggable database PRDPDB open;
Pluggable database altered.
</pre></p>
<p>I have now my new PRDPDB opened read write with the latest data that was refreshed:
<pre>
21:42:26 SQL&gt; alter session set container=PRDPDB;
Session altered.

21:42:26 SQL&gt; alter session set nls_date_format='dd-mon-yyyy hh24:mi:ss';
Session altered.

21:42:26 SQL&gt; select * from scott.emp where ename='KING';

     EMPNO ENAME      JOB              MGR HIREDATE                    SAL
---------- ---------- --------- ---------- -------------------- ----------
      7839 KING       PRESIDENT            11-jun-2017 21:41:01       5113
</pre></p>
<p>I&#8217;m running on a snapshot here. I can stay like that, or plan to move it out of the snapshot in the future. There is no online datafile move in Standard Edition, but there is the online pluggable database relocate. Anyway, running the database in a snapshot is sufficient to run a production after a Disaster Recovery and I can remove the SBYPRD so that there is no need to copy the ACFS extents on future writes.</p>
<h3>Keep the snapshot</h3>
<p>At that point, you should tell me that I cannot snapshot copy a PDB within the same CDB here because I&#8217;m in Standard Edition. And that&#8217;s right: you can create only one PDB there and you are supposed to get a &#8216;feature not enabled&#8217;. But I was able to do it here in my lab, with a small trick to inverse the CON_ID sequence:
<pre>
Connected to:
Oracle Database 12c Standard Edition Release 12.2.0.1.0 - 64bit Production

SQL&gt; show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 PRDPDB                         READ WRITE NO
         4 SBYPDB                         MOUNTED
</pre></p>
<p>Remote snapshot clone should be possible as well. But there&#8217;s another licensing issue here. Using ACFS snapshots for the database is not allowed in Standard Edition. This means that this solution probably requires another snapshot solution than the one I&#8217;m using here in my lab.</p>
<p>If you don&#8217;t fear to violate the single-tenant rules, you may prefer to keep the SBYPRD for a while. Imagine that you are able to restart the crashed server for a few minutes, then you can do the last refresh of SBYPRD to have a look at the transactions that were lost in the 1 minute window.</p>
<p>I re-start the crashed CDB:
<pre>
21:42:26 SQL&gt; connect / as sysdba
Connected to an idle instance.
21:42:27 SQL&gt; startup
ORACLE instance started.

Total System Global Area  859832320 bytes
Fixed Size                  8798552 bytes
Variable Size             356519592 bytes
Database Buffers          486539264 bytes
Redo Buffers                7974912 bytes
Database mounted.
Database opened.
</pre></p>
<p>and now, on my standby server, I can finally stop the refresh mode:
<pre>
21:42:51 SQL&gt; connect sys/oracle@//192.168.78.106:1522/CDB1 as sysdba
Connected.
21:42:52 SQL&gt; alter pluggable database SBYPDB close;
Pluggable database altered.

21:42:52 SQL&gt; alter session set container=SBYPDB;
Session altered.

21:42:52 SQL&gt; alter pluggable database SBYPDB refresh mode none;
Pluggable database altered.
</pre></p>
<p>Be careful not to have jobs or services starting here because your production is now on the snapshot clone PRDPDB running on the same server. Let&#8217;s open it:
<pre>
21:43:02 SQL&gt; alter pluggable database SBYPDB open restricted;
Pluggable database altered.

21:43:24 SQL&gt; select * from scott.emp where ename='KING';

     EMPNO ENAME      JOB              MGR HIREDATE                    SAL
---------- ---------- --------- ---------- -------------------- ----------
      7839 KING       PRESIDENT            11-jun-2017 21:41:38       5150
</pre></p>
<p>And here we are with the data at the moment of the crash. Then, the application owner can manually check what was missed between the last refresh (which made its way to PRDPDB) and the crash (visible in SBYPDB).</p>
<h3>Unplug/Plug</h3>
<p>I was not very satisfied by the snapshot clone because of the limitations in Standard Edition, which is where this solution may be interesting. I have the datafiles but cannot open the SBYPDB read write. I tried to unplug them but cannot because of the refresh mode:
<pre>
SQL&gt; alter pluggable database SBYPDB unplug into '/tmp/tmp.xml';

Error starting at line : 1 in command -
alter pluggable database SBYPDB unplug into '/tmp/tmp.xml'
Error report -
ORA-01113: file 23 needs media recovery
ORA-01110: data file 23: '/acfs/oradata/CDB1/SBYPDB/undotbs01.dbf'
01113. 00000 -  "file %s needs media recovery"
*Cause:    An attempt was made to online or open a database with a file that
           is in need of media recovery.
*Action:   First apply media recovery to the file.
</pre></p>
<p>I know that I don&#8217;t need more recovery. So let&#8217;s unplug it in another way:
<pre>
SQL&gt; alter pluggable database SBYPDB open read only;
Pluggable database SBYPDB altered.

SQL&gt; exec dbms_pdb.describe('/tmp/tmp.xml','SBYPDB');
PL/SQL procedure successfully completed.
</pre>
Then drop it but keep the datafiles:
<pre>
SQL&gt; alter pluggable database SBYPDB close;
Pluggable database SBYPDB altered.

SQL&gt; drop pluggable database SBYPDB;
Pluggable database SBYPDB dropped.
</pre>
And plug it back:
<pre>
SQL&gt; create pluggable database SBYPDB using '/tmp/tmp.xml';
Pluggable database SBYPDB created.

SQL&gt; alter pluggable database SBYPDB open;
Pluggable database SBYPDB altered.
</pre></p>
<p>Here it is. This takes a bit longer than the snapshot solution but still ready to activate the &#8216;standby&#8217; PDB without copying datafiles.</p>
<h3>So what?</h3>
<p>All the new 12<i>c</i>R2 multitenant features are available in all Editions, which is very good. Here with ALTER PLUGGABLE DATABASE &#8230; REFRESH we have log shipping and apply, for free in Standard Edition, at PDB level. And I&#8217;ve tested two ways to open this standby PDB in case of disaster recovery. I&#8217;m using only supported features here, but be careful that those features were not designed for this goal. The normal operations on refreshable clone require that the remote CDB is accessible. But there are workarounds here because you can describe/drop/plug or snapshot clone from a PDB that you can open read only.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-170850" data-img="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2017/06/CapturePoorManSBY.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 5 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-7635">
				<div id="div-comment-7635" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/a2a19e1fb1fdd173d1a39b0e73390c09?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Foued</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7635">
			June 13, 2017 at 22 h 08 min</a>		</div>

		<p>Thanks Franck for sharing this post.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-76361"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7635' onclick='return addComment.moveForm( "div-comment-7635", "7635", "respond", "17084" )' aria-label='Reply to Foued to Foued'>Reply to Foued</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-10719">
				<div id="div-comment-10719" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/2f471a2cdb24f94b9484f5b657e3798f?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">VINAY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10719">
			March 15, 2018 at 6 h 44 min</a>		</div>

		<p>is 18c availlable for download to on-perm ?
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-107201"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10719' onclick='return addComment.moveForm( "div-comment-10719", "10719", "respond", "17084" )' aria-label='Reply to VINAY to VINAY'>Reply to VINAY</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor even depth-2" id="comment-10724">
				<div id="div-comment-10724" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10724">
			March 19, 2018 at 23 h 06 min</a>		</div>

		<p>Hi Vinay, yes, for the moment 18c is available only on Oracle platforms (Oracle Public Cloud, Engineered Systems) and PDB switchover works on those platforms.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-107251"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10724' onclick='return addComment.moveForm( "div-comment-10724", "10724", "respond", "17084" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-10751">
				<div id="div-comment-10751" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/f9e45d4ca4a33ae0fca931ac967c2f5c?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">mallikarjun Kapali</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10751">
			April 10, 2018 at 16 h 05 min</a>		</div>

		<p>Hi</p>
<p>Can  the refresh of the PDB be parallelised ?
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-107521"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10751' onclick='return addComment.moveForm( "div-comment-10751", "10751", "respond", "17084" )' aria-label='Reply to mallikarjun to mallikarjun Kapali'>Reply to mallikarjun</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor even depth-2" id="comment-10756">
				<div id="div-comment-10756" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10756">
			April 11, 2018 at 19 h 26 min</a>		</div>

		<p>Hi, I don&#8217;t think so. There&#8217;s no mention of a parallel clause in the syntax and documentation.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-107571"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10756' onclick='return addComment.moveForm( "div-comment-10756", "10756", "respond", "17084" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
