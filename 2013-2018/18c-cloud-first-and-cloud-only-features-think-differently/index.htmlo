This was first published on <a href=https://blog.dbi-services.com/18c-cloud-first-and-cloud-only-features-think-differently>https://blog.dbi-services.com/18c-cloud-first-and-cloud-only-features-think-differently</a> (2018-02-26)
								<h1 class="entry-title">18c, Cloud First and Cloud Only features: think differently</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Remember the times when the Oracle Software features were the same on all platforms? Where Oracle databases could be ported to any relevant platform? Where we were able to try any feature, freely, by downloading the latest release software? Now we need to think differently. Because:</p>
<ul>
<li>The new software is released on Cloud first</li>
<li>The major new features will never be available on-premises</li>
<li>The Cloud here means the Oracle Cloud &#8211; not AWS, not Azure, not Google, not you local IaaS providers</li>
<li>Some new features are extended to on-premises for Oracle hardware only (Exadata, ODA)</li>
<li>All trial environments are paid services (but you can get free credits) but this may change with Oracle XE 18c</li>
</ul>
<p>And you are concerned because if you start your new developments on the Oracle Cloud, or simply train yourself on new features, you may rely on features that you will never have on-premises. In my opinion, it makes sense for a startup, or a new project, to start development and early production on the Cloud. However, there will probably be a point where the cost optimization will involve on-premises servers, or IaaS, or different Cloud providers. Then the features you used may not be available.</p>
<p>Another concern is financial: when justifying to your CFO the cost of the 22% Support and Software Updates, you may list all the new features. But be careful. Most of the new features comes with additional options, or will not be available outside of the Oracle Cloud PaaS.
<span id="more-21478"></span></p>
<p>If you tried the Oracle 18c release on the Oracle Cloud, you may have seen some additional informations in the alert.log:
<pre>
Capability Type : Network
capabilities requested : 1 detected : 0 Simulated : 0
Capability Type : Runtime Environment
capabilities requested : 400000FF detected : 4 Simulated : 0
Capability Type : Engineered Systems
capabilities requested : 3 detected : 0 Simulated : 0
</pre>
So, it seems that Oracle is checking the capabilities of the platform to enable or not some features. When you are not on the right one, you may encounter this kind of error which is new in 18c:
<pre>
[oracle@DBaaS18c ~]$ oerr ORA 12754
12754, 00000, "Feature %s is disabled due to missing capability %s."
// *Document: NO
// *Cause: This feature requires specific capabilities that were not present in the current database instance.
// *Action: Contact Oracle Support Services to enable this feature.
</pre>
or maybe:
<pre>
12755, 00000, "Feature %s is disabled due to unsupported capability."
// *Document: NO
// *Cause: This feature requires specific capabilities that were not supported
//         in the current database instance.
// *Action: Contact Oracle Support Services to enable this feature.
</pre></p>
<p>For the moment, the on-premises binaries are available for Exadata only. But the <a href="https://docs.oracle.com/en/database/oracle/oracle-database/18/dblic/Licensing-Information.html#GUID-0F9EB85D-4610-4EDF-89C2-4916A0E7AC87" target="_blank">Licensing documentation</a> already gives you an idea. The following new features will not be available on-premises.</p>
<p>All the multitenant new features are for Oracle Cloud or Oracle Engineered systems only:</p>
<ul>
<li>CDB Fleet Management</li>
<li>PDB Snapshot Carousel</li>
<li>Refreshable PDB switchover</li>
<li>Keystore for Each Pluggable Database</li>
</ul>
<p>If you are on your own servers, or on one of the major cloud providers, you do not benefit from the latest software updates. Even if you pay each year 22% of your licenses cost, even on platforms where the core factor is maximum. You have support, and patches, but only a limited set of new features. </p>
<p>If you do not have the Active Data Guard option, you cannot benefit from most of the new features of the last releases. And buying this option can be expensive if you are on ULA (because you will buy it for all processors), or on non-Oracle Cloud (because of the core factor) and even there some features will not be available. The latest, Oracle Data Guardâ€”Automatic Correction of Non-logged Blocks, is available on Oracle Cloud only, or Exadata/ODA. It is not a big problem as you can include this recovery after your nologging load, but it is important to know it.</p>
<p>Note that with this new release, some features also disappear. Not only deprecated. Not only desupported. But also removed. Oracle Change Data Capture has been desupported in 12c and if you look at 18c you will see that it has been removed. And it is the last version with Oracle Streams. As mentioned in the documentation, you need to buy Golden Gate.</p>
<p>This looks like bad news in 18c, but consider it as a new patchset on 12cR2. Remember that 12cR2 brought amazing features to all platforms and all editions, such as the online clone or move of pluggable databases. The important thing is to be informed and think differently as we used to when Oracle Databases were portable to all platforms. Be careful with features that will not be available on all platforms. Consider the costs correctly. And also look at all those features that are available to everybody and are probably not used enough. The best way is to design the application to use the database efficiently (processing data in the database, lowering the roundtrips and context switches) on a limited number of CPU cores. Then, all those options or cloud credits will not be as expensive as you may think. Nobody likes vendor lock-in, but it may be the most cost-efficient solution.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-214790"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-10698">
				<div id="div-comment-10698" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/ba77413ffe0bb48d9da467d649464a6c?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='http://www.oracle.com' rel='external nofollow' class='url'>Thomas Teske</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10698">
			February 28, 2018 at 9 h 10 min</a>		</div>

		<p>Hello franck,</p>
<p>yes something has changed. With Engineered Systems and now with cloud we have two platforms having distinct features. If we take the discussion about Oracle XE then it is all improving a lot with the anticipated 18c XE. Cloud with BYOL is the commercial answer to many challenges like this. The newly announced autonomous services shall further increase productivity thus reduce cost. </p>
<p>Vendor lock-in? Well we have lots of software in the market being product-agnostic but equally at lower efficiency. If you have 100+ services/systems &#8211; how much work do you invest? That is a key challenge increasing in a microservices world we live in.</p>
<p>Kind regards
  Thomas
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-106991"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10698' onclick='return addComment.moveForm( "div-comment-10698", "10698", "respond", "21478" )' aria-label='Reply to Thomas to Thomas Teske'>Reply to Thomas</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
