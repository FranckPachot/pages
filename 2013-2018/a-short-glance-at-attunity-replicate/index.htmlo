This was first published on <a href=https://blog.dbi-services.com/a-short-glance-at-attunity-replicate>https://blog.dbi-services.com/a-short-glance-at-attunity-replicate</a> (2016-04-16)
								<h1 class="entry-title">A short glance at Attunity replicate</h1>
		<div class="content-inner">
			
						
						
		   
			<p>If you follow my blog, you should know that I really like Dbvisit replicate because it&#8217;s simple, robust, has good features and excellent support. But that&#8217;s not a reason to ignore other alternatives (and this is the reason of <a href="http://www.dbi-services.com/news-en/replication-event-2/" title="our replication event in May">http://www.dbi-services.com/news-en/replication-event-2/</a>). When you have heterogeneous sources (not only Oracle) there is Oracle Golden Gate with very powerful possibilities, but maybe not an easy learning curve because of lack of simple GUI and setup wizard. You may need something more simple but still able to connect to heterogeneous sources. In this post, I am testing another logical replication software, Attunity replicate which has a very easy GUI to start and has connectors (called &#8216;endpoints&#8217;) for lot all databases.
<span id="more-8116"></span>
I&#8217;m trying the free trial version, installed on my laptop (Windows 10) and accessed through web browser. Here is how the Attunity Replicate architecture looks like:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0000.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0000.png" alt="CaptureAttunity0000" width="770" height="438" class="alignnone size-full wp-image-8139" /></a>
Bulk reader/loader are for initialization, CDC is the redo mining process and Stream Loader the one that applies to destination. Those are connectors to RDBMS (and other source/destinations). A common engine does the filtering and transformation.</p>
<h3>Replication profile</h3>
<p>I define a new replication task where my goal is to replicate one simple table, EMP2, a copy of SCOTT.EMP:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0101.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0101.png" alt="CaptureAttunity0101" width="952" height="706" class="alignnone size-full wp-image-8130" /></a>
This task will do the first initialization and run real-time replication.</p>
<h3>Source database</h3>
<p>I need to define the databases. Interestingly, there is nothing to install on source and destination. The replication server connects only through SQL*Net:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0102.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0102.png" alt="CaptureAttunity0102" width="911" height="712" class="alignnone size-full wp-image-8129" /></a>
I use SYSTEM here for simplicity. You need a user that can access some system tables and views, be able to create a directory,read files, etc.</p>
<p>That&#8217;s probably defined in the documentation, but I like to do my first trial just by exploring. In case you missed one, don&#8217;t worry, the &#8216;test&#8217; button will check for everything. Here is an example when you try to use SCOTT:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0115.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0115.png" alt="CaptureAttunity0115" width="557" height="298" class="alignnone size-full wp-image-8135" /></a>
V$LOGMNR_LOGS&#8230; That&#8217;s interesting. LogMiner may not be the most efficient, and may not support all datatypes, but it&#8217;s the only Oracle supported way to read redo logs.</p>
<p>Advanced tab is very interesting about it as it shows that there are two possibilities to mine Oracle redo stream: use LogMiner or read binary files (archived + online from source, or only archived logs shipped to another location). It supports ASM (and RAC) and it supports encryption (TDE).
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0103.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0103.png" alt="CaptureAttunity0103" width="794" height="702" class="alignnone size-full wp-image-8128" /></a></p>
<p>I&#8217;ve unchecked &#8216;automatically add supplemental logging&#8217; here because it&#8217;s something I want to do manually because it requires an exclusive lock on the source tables. You can let it do automatically if you have no application running on the source when you will start, but that&#8217;s probably not the case. Doing it manually let me do this preparation off business hours.
The problem is that you have then to run it for all the tables:</p>
<ul>
<li>ADD SUPPLEMENTAL LOG DATA at database level</li>
<li>ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS for all tables that have primary keys</li>
<li>ADD SUPPLEMENTAL LOG DATA ADD SUPPLEMENTAL LOG DATA (&#8230;) COLUMNS naming unique columns as well as columns that are used to filter redo records</li>
<li>ADD SUPPLEMENTAL LOG DATA ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS for tables that have no unique columns</li>
</ul>
<p>Something is missing here for me: I would like to run the DDL manually, but have the script generated automatically.</p>
<h3>Target database</h3>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0104.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0104.png" alt="CaptureAttunity0104" width="905" height="707" class="alignnone size-full wp-image-8127" /></a></p>
<p>Direct-path insert is something that we want for the bulk load, except if we have tables or indexes that do not support OCI direct-path inserts. Then it will use conventional array insert. But it seems that this setting is per-task and not per-table.
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0105.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0105.png" alt="CaptureAttunity0105" width="901" height="709" class="alignnone size-full wp-image-8126" /></a></p>
<h3>Task design</h3>
<p>I&#8217;ve selected my table with the &#8216;Table Selection&#8217; wizard:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0106.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0106.png" alt="CaptureAttunity0106" width="1075" height="686" class="alignnone size-full wp-image-8125" /></a></p>
<p>With &#8216;Table Settings&#8217; you can customize columns, filter rows:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0107.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0107.png" alt="CaptureAttunity0107" width="1069" height="702" class="alignnone size-full wp-image-8124" /></a>
With &#8216;Global Transformation&#8217; you can add rules to transform tables or columns that follow a pattern.</p>
<h3>Bulk Load</h3>
<p>There is a &#8216;Run&#8217; button that will bulk load the tables and start real-time replication, but let&#8217;s look at the &#8216;advanced&#8217; options:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0108.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0108.png" alt="CaptureAttunity0108" width="381" height="309" class="alignnone size-full wp-image-8123" /></a>
You can managed the initial load yourself, which is good (for example to initialize with a RMAN duplicate or an activated standby) but I would like to set an SCN there instead of a timestamp.
Ability to reload is good, but that&#8217;s something we may want to do not for all tables but, for example, for one table that we reorganized at the source.</p>
<p>Those are the cases where simple GUI wizard have their limits. It&#8217;s good to start but you may quickly have to do things a little more complex.</p>
<p>If I click on the simple run button, everything is smooth: it will do the initial load and then run replication.</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0109.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0109.png" alt="CaptureAttunity0109" width="352" height="353" class="alignnone size-full wp-image-8122" /></a></p>
<p>I started a transaction on my table that I&#8217;ve not commited yet:
<pre>
03:15:50 SQL&gt; update emp2 set sal=sal+100;
14 rows updated.
</pre></p>
<p>And the behaviour looks ok: wait the end of current transactions:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0110.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0110.png" alt="CaptureAttunity0110" width="404" height="303" class="alignnone size-full wp-image-8121" /></a></p>
<p>My good surprise is that there is no lock waits, which would have blocked DML activity.</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0111.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0111.png" alt="CaptureAttunity0111" width="1491" height="645" class="alignnone size-full wp-image-8120" /></a></p>
<p>From trace files (yes this is my first trial and I&#8217;ve already set trace for all session coming from repctl.exe and anyway, I cannot post a blog with only screenshots&#8230;) it reads V$TRANSACTION every few seconds:
<pre>
=====================
PARSING IN CURSOR #140631075113120 len=49 dep=0 uid=5 oct=3 lid=5 tim=1460820357503567 hv=3003898522 ad='86236a30' sqlid='6ffgmn2thrqnu'
SELECT XIDUSN, XIDSLOT, XIDSQN FROM V$TRANSACTION
END OF STMT
PARSE #140631075113120:c=3999,e=4414,p=0,cr=2,cu=0,mis=1,r=0,dep=0,og=1,plh=3305425530,tim=1460820357503547
EXEC #140631075113120:c=0,e=62,p=0,cr=0,cu=0,mis=0,r=0,dep=0,og=1,plh=3305425530,tim=1460820357503922
WAIT #140631075113120: nam='SQL*Net message to client' ela= 22 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820357504052
FETCH #140631075113120:c=0,e=392,p=0,cr=0,cu=2,mis=0,r=2,dep=0,og=1,plh=3305425530,tim=1460820357504540
WAIT #140631075113120: nam='SQL*Net message from client' ela= 1033 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820357505766
...
*** 2016-04-17 03:26:52.265
WAIT #140631074940472: nam='SQL*Net message from client' ela= 5216008 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820412265018
EXEC #140631074940472:c=0,e=25,p=0,cr=0,cu=0,mis=0,r=0,dep=0,og=1,plh=735420252,tim=1460820412265099
WAIT #140631074940472: nam='control file sequential read' ela= 8 file#=0 block#=1 blocks=1 obj#=-1 tim=1460820412265137
WAIT #140631074940472: nam='control file sequential read' ela= 3 file#=0 block#=16 blocks=1 obj#=-1 tim=1460820412265152
WAIT #140631074940472: nam='control file sequential read' ela= 3 file#=0 block#=18 blocks=1 obj#=-1 tim=1460820412265163
WAIT #140631074940472: nam='control file sequential read' ela= 3 file#=0 block#=1 blocks=1 obj#=-1 tim=1460820412265205
WAIT #140631074940472: nam='control file sequential read' ela= 2 file#=0 block#=16 blocks=1 obj#=-1 tim=1460820412265215
WAIT #140631074940472: nam='control file sequential read' ela= 3 file#=0 block#=18 blocks=1 obj#=-1 tim=1460820412265225
WAIT #140631074940472: nam='control file sequential read' ela= 3 file#=0 block#=281 blocks=1 obj#=-1 tim=1460820412265235
WAIT #140631074940472: nam='SQL*Net message to client' ela= 2 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820412265257
FETCH #140631074940472:c=0,e=168,p=0,cr=0,cu=0,mis=0,r=1,dep=0,og=1,plh=735420252,tim=1460820412265278

*** 2016-04-17 03:26:57.498
WAIT #140631074940472: nam='SQL*Net message from client' ela= 5233510 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820417498816
EXEC #140631074940472:c=0,e=125,p=0,cr=0,cu=0,mis=0,r=0,dep=0,og=1,plh=735420252,tim=1460820417499357
WAIT #140631074940472: nam='control file sequential read' ela= 42 file#=0 block#=1 blocks=1 obj#=-1 tim=1460820417499592
WAIT #140631074940472: nam='control file sequential read' ela= 26 file#=0 block#=16 blocks=1 obj#=-1 tim=1460820417499819
WAIT #140631074940472: nam='control file sequential read' ela= 16 file#=0 block#=18 blocks=1 obj#=-1 tim=1460820417499890
WAIT #140631074940472: nam='control file sequential read' ela= 14 file#=0 block#=1 blocks=1 obj#=-1 tim=1460820417500081
WAIT #140631074940472: nam='control file sequential read' ela= 17 file#=0 block#=16 blocks=1 obj#=-1 tim=1460820417500177
WAIT #140631074940472: nam='control file sequential read' ela= 11 file#=0 block#=18 blocks=1 obj#=-1 tim=1460820417500237
WAIT #140631074940472: nam='control file sequential read' ela= 47 file#=0 block#=281 blocks=1 obj#=-1 tim=1460820417500324
WAIT #140631074940472: nam='SQL*Net message to client' ela= 7 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460820417500470
FETCH #140631074940472:c=2000,e=1109,p=0,cr=0,cu=0,mis=0,r=1,dep=0,og=1,plh=735420252,tim=1460820417500550
</pre></p>
<p>So it seems that it waits for a point where there is no current transaction, which is the right thing to do because it cannot replicate transactions that start before redo mining.
However, be careful, there is a &#8216;transaction consistency timeout&#8217; that defaults to 10 minutes and it seems that the load just starts after this &#8216;timeout&#8217;. The risk is that if those transactions finally change the tables you replicate, you will get a lot of replication conflicts.</p>
<p>So I commit my transaction and the bulk load starts.
<pre>
03:15:45 SQL&gt; commit;
</pre></p>
<p>Here is what we can see from the trace:
<pre>
PARSING IN CURSOR #139886395075952 len=206 dep=0 uid=5 oct=3 lid=5 tim=1460819745436746 hv=3641549327 ad='8624b838' sqlid='g2vhbszchv8hg'
select directory_name from all_directories where directory_path = '/u01/app/oracle/fast_recovery_area/XE/onlinelog' and (directory_name = 'ATTUREP_27C9EEFCEMP2' or 'ATTUREP_' != substr(directory_name,1,8) )
END OF STMT
</pre></p>
<p>This is a clue that Attunity Replicate creates a directory object (It&#8217;s actually created in SYS and I would prefer to be informed of that kind of things&#8230;)
And here is how redo is read &#8211; through SQL*Net:
<pre>
WAIT #0: nam='BFILE get length' ela= 18  =0  =0  =0 obj#=-1 tim=1460819745437732
LOBGETLEN: c=0,e=84,p=0,cr=0,cu=0,tim=1460819745437768
WAIT #0: nam='SQL*Net message to client' ela= 3 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745437787
WAIT #0: nam='SQL*Net message from client' ela= 225 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438025
WAIT #0: nam='BFILE open' ela= 53  =0  =0  =0 obj#=-1 tim=1460819745438113
LOBFILOPN: c=0,e=78,p=0,cr=0,cu=0,tim=1460819745438125
WAIT #0: nam='SQL*Net message to client' ela= 2 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438137
WAIT #0: nam='SQL*Net message from client' ela= 196 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438341
WAIT #0: nam='BFILE internal seek' ela= 15  =0  =0  =0 obj#=-1 tim=1460819745438379
WAIT #0: nam='BFILE read' ela= 13  =0  =0  =0 obj#=-1 tim=1460819745438401
WAIT #0: nam='SQL*Net message to client' ela= 2 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438410
LOBREAD: c=0,e=56,p=0,cr=0,cu=0,tim=1460819745438416
WAIT #0: nam='SQL*Net message from client' ela= 208 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438636
WAIT #0: nam='BFILE internal seek' ela= 4  =0  =0  =0 obj#=-1 tim=1460819745438672
WAIT #0: nam='BFILE read' ela= 14  =0  =0  =0 obj#=-1 tim=1460819745438695
WAIT #0: nam='SQL*Net message to client' ela= 1 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745438706
LOBREAD: c=0,e=48,p=0,cr=0,cu=0,tim=1460819745438713
WAIT #0: nam='SQL*Net message from client' ela= 361 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745439086
WAIT #0: nam='BFILE internal seek' ela= 4  =0  =0  =0 obj#=-1 tim=1460819745439124
WAIT #0: nam='BFILE read' ela= 4  =0  =0  =0 obj#=-1 tim=1460819745439135
WAIT #0: nam='SQL*Net message to client' ela= 2 driver id=1413697536 #bytes=1 p3=0 obj#=-1 tim=1460819745439144
WAIT #0: nam='BFILE internal seek' ela= 2  =0  =0  =0 obj#=-1 tim=1460819745439156
WAIT #0: nam='BFILE read' ela= 2  =0  =0  =0 obj#=-1 tim=1460819745439167
WAIT #0: nam='BFILE internal seek' ela= 2  =0  =0  =0 obj#=-1 tim=1460819745439178
WAIT #0: nam='BFILE read' ela= 2  =0  =0  =0 obj#=-1 tim=1460819745439188
</pre>
So it probably reads the redo through utl_file and transfer it as a BLOB. This is good for simplicity when we want to install nothing on the source, but on the other hand, this means that filtering cannot be done upstream.</p>
<h3>Change Data Capture</h3>
<p>The GUI show the overall monitoring. Here are my transactions that are captured and buffered until they are commited:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0112.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0112.png" alt="CaptureAttunity0112" width="1275" height="762" class="alignnone size-full wp-image-8119" /></a></p>
<p>and once they are commited they are applied:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0113.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0113.png" alt="CaptureAttunity0113" width="1352" height="563" class="alignnone size-full wp-image-8118" /></a></p>
<h3>Conflict resolution</h3>
<p>I did some DML to create some replication conflict, which is something we have to deal with logical replication (because of constraints, triggers, 2-way replication, etc) and the default management is a bit loose in my opinion: log it and continue:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0114.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0114.png" alt="CaptureAttunity0114" width="501" height="401" class="alignnone size-full wp-image-8117" /></a>
Ignoring a problem and continuing makes the target unreliable until the issue is manually solved.</p>
<p>This behavior can be customizable for the whole replication task. This is the default:
<a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0116.png" rel="lightbox[8116]"><img src="../wp-insides/uploads/sites/2/2016/04/CaptureAttunity0116.png" alt="CaptureAttunity0116" width="928" height="533" class="alignnone size-full wp-image-8147" /></a>
but we can customize it: either evict a table from the replication or stop the whole replication.
I prefer the latest because only the latest keeps full consistency on target. But then we have to be sure that no conflicts exists, or are resolved automatically.</p>
<p>I&#8217;ve not seen a table-level way to define automatic conflict resolution. I real life, it&#8217;s better to stop whenever any unexpected situation occurs (i.e when one redo record do not change exactly one row) but we may have to accept specific settings for few tables where the situation is expected (because of triggers, cascade constraints, etc).</p>
<h3>Conclusion</h3>
<p>Attunity Replicate buffers the transactions and apply them when commit is encountered, which is better in case of many rollbacks, but may lead to a replication gap in case of long transactions.
From the traces I&#8217;ve seen, the dictionary information is read from the source database each time it is needed. This is probably higher overhead on source when compared with solutions that get dictionary changes from the redo stream. And this probably raise more limitation on DDL (replication is not possible on changes occurring after ADD, DROP, EXCHANGE and TRUNCATE partition are not ). </p>
<p>Attunity GUI is very nice for simple setups and for graphical monitoring, and I understand why it is well known in SQL Server area for this reason.</p>
<p>The number of supported databases (or rather &#8216;endpoints&#8217; because it goes beyond databases) is huge:</p>
<ul>
<li>Source can be: Oracle Database, Microsoft SQL Server, Sybase ASE, MySQL, Hadoop, ODBC, Teradata, Salesforce Database, HP NonStop SQL/MX</li>
<li>Destination can be: Oracle Database, Microsoft SQL Server, Sybase, MySQL, Hadoop, ODBC, Teradata, Pivotal Greenplum, Actian Vector Database, Amazon Redshift, HP Vertica, Sybase IQ, Netezza, and text files</li>
</ul>
<p>There are several logical replication solutions, with different prices, different design, different philosophy. I always recommend a Proof of Concept in order to see which one fits your context. Test everything: the setup and configuration alternatives, the mining of production workload, with DDL, special datatypes, high redo rate, etc. Don&#8217;t give up on first issue, it&#8217;s also a good way to consider documentation quality and support efficiency. And think about all the cases where you will need it: real-time BI, auditing, load balancing, offloading, migrations, data movement to and from the Cloud.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-81170" data-img="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/CaptureAttunity0000.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 5 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1 parent" id="comment-3513">
				<div id="div-comment-3513" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/c4a0e3ea93762bc1ef97ad430a5fe3f5?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Avinash Kothare</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-3513">
			May 14, 2016 at 0 h 00 min</a>		</div>

		<p>Hi  Franck</p>
<p>Thanks for the detailed blog.  I will re-read it multiple times to fully absorb the details.</p>
<p>Recently we went for Attunity Replicate. I come from Sybase (now owned by SAP) replication background.   Sybase Replication Server is a very mature product and has been around for more than 20 years now. </p>
<p>I see Attunity with nice GUI. However the set up effort is more or less same in any Replication. GUI perhaps makes it less intimidating or more friendly !!  With command line interface and scripts we can achieve the same effect and know bit more about the nuts and bolts (which BTW GUI will hide from you !!)</p>
<p>Do you happen to what database Attunity itself uses to store all the metadata : endpoints, tasks, tables, etc. ?</p>
<p>I find a few features missing from Attunity :
&#8211; trends and counters (server, tables, rows, latency) to track patterns
&#8211; ability to at least query the system data in some way
&#8211; converting source DMLs into different target DMLs
  (e.g. all inserts/updates/deletes from source going as inserts at target for auditing/history) etc.
  or executing a custom logic like stored procedure at target
&#8211; sending system events (e.g. backups) as transaction which can trigger similar/other event on target</p>
<p>Overall I must say it is a good product out of the box but there is huge scope to add features.</p>
<p>Avinash
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-35141"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-3513' onclick='return addComment.moveForm( "div-comment-3513", "3513", "respond", "8116" )' aria-label='Reply to Avinash to Avinash Kothare'>Reply to Avinash</a></div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-6711">
				<div id="div-comment-6711" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/c31685f739a5111dd6e759d01a8f28ad?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Hein</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-6711">
			February 9, 2017 at 7 h 49 min</a>		</div>

		<p>Hi Avinash, fancy meeting you here!</p>
<p>I know you have since received answers and clarification to most if not all your observations, but for the benefit of other passer-by&#8217;s allow me to me a few quick comments.</p>
<p>This is not meant to be an exhaustive answer, just some directions.</p>
<p>&gt;&gt; Thanks for the detailed blog. I will re-read it multiple times to fully absorb the details.</p>
<p>Ditto! Nice job Franck.</p>
<p>&gt;&gt; Do you happen to what database Attunity itself uses to store all the metadata : endpoints, tasks, tables, etc. ?</p>
<p>SQLite.</p>
<p>&gt;&gt; – trends and counters (server, tables, rows, latency) to track patterns
&gt;&gt; – ability to at least query the system data in some way</p>
<p>There is some available through the GUI monitor, which in recent release can readily be saved in CSV files.
Some can be queried in the SQLite file, notably to see when a table was last loaded, how many rows and such,
There is a modest CLI tool REPCTL returning live stats in Json format.</p>
<p>Replicate is a relative young product, engineered first and foremost to get the core job done. Robust, Reliable, Fast, Easy to use, many &#8216;end points&#8217;. As the product matures we have added more endpoints (recent ones Kafka, Eventhub, Sap&#8230;),  and added more &#8216;enterprise&#8217; level features.  For that our strategic direction is an &#8216;Enterprise manager&#8217; giving a nice view of all replication tasks across all replicate servers. You&#8217;ll find that the enterprise manager will give a much more concise, dense, view of states, stats, notifications, audits.
It also offer a public RestAPI to get all those counters for reporting and trending. (This will replace REPCTL.)</p>
<p>&gt;&gt; – converting source DMLs into different target DMLs</p>
<p>Indirectly. There is an &#8216;advance run&#8217; feature &#8220;create missing table and stop&#8221;
This will allow you to create a template to be tweak to your hearts content before commencing data load/flow.
Hint : Enable VERBOSE logging for the TARGET_LOAD and/or TARGET_APPLY  category to &#8216;see&#8217; the SQL in the task logs, ready to be grabbed.</p>
<p>&gt;&gt; (e.g. all inserts/updates/deletes from source going as inserts at target for auditing/history) etc.</p>
<p>Replicate offers &#8216;STORE CHANGE&#8217; in addition to, or instead of, the traditional &#8216;APPLY CHANGE&#8217;. Always has.</p>
<p>&gt;&gt; or executing a custom logic like stored procedure at target
– sending system events (e.g. backups) as transaction which can trigger similar/other event on target</p>
<p>There are opportunities there, but nothing much in place today other than per-change event target lookups (procedure calls!?). Talk some more to use about specific needs, and if there is a general purpose application we will review and consider it. No promises, but if we hear it clearly enough&#8230;</p>
<p>&gt;&gt; Overall I must say it is a good product out of the box but there is huge scope to add features.</p>
<p>Thanks!
Best regards,
Hein van den Heuvel
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-67121"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-6711' onclick='return addComment.moveForm( "div-comment-6711", "6711", "respond", "8116" )' aria-label='Reply to Hein to Hein'>Reply to Hein</a></div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-7621">
				<div id="div-comment-7621" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/f222172df5da8429d327e4509d7544f5?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Kiran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7621">
			June 12, 2017 at 5 h 03 min</a>		</div>

		<p>Hein it is user friendly offcourse . My experience is lack of support or knowledge on the Tool. your insights are useful and will try to apply the learning . But does anyone have the knowledge on how it will work wit Oracle Data Guard
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-76221"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7621' onclick='return addComment.moveForm( "div-comment-7621", "7621", "respond", "8116" )' aria-label='Reply to Kiran to Kiran'>Reply to Kiran</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-7620">
				<div id="div-comment-7620" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/f222172df5da8429d327e4509d7544f5?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Kiran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7620">
			June 12, 2017 at 4 h 58 min</a>		</div>

		<p>We are using attinuity and are facing memory constraint issues any work around that you all have
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-76211"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7620' onclick='return addComment.moveForm( "div-comment-7620", "7620", "respond", "8116" )' aria-label='Reply to Kiran to Kiran'>Reply to Kiran</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-7069">
				<div id="div-comment-7069" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/d94ea7f46aa8b2dbaf380268af235c77?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Bernard LeTourneur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7069">
			March 6, 2017 at 9 h 48 min</a>		</div>

		<p>Hi.
Is it possible to replicate to 2 destinations points from a single source?
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-70701"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7069' onclick='return addComment.moveForm( "div-comment-7069", "7069", "respond", "8116" )' aria-label='Reply to Bernard to Bernard LeTourneur'>Reply to Bernard</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
