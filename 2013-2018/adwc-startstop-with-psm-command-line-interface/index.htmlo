This was first published on <a href=https://blog.dbi-services.com/adwc-startstop-with-psm-command-line-interface>https://blog.dbi-services.com/adwc-startstop-with-psm-command-line-interface</a> (2018-05-02)
								<h1 class="entry-title">ADWC:  start/stop with PSM Command Line Interface</h1>
		<div class="content-inner">
			
						
						
		   
			<p>In the <a href="https://blog.dbi-services.com/adwc-creation-of-autonomous-database-cloud-service" target="_blank">previous post</a>, I explained how to create an Autonomous Data Warehouse with PSM (PaaS Service Manager Command Line Interface). The most common operation you want to do with it is starting and stopping the service. This is the best way to save credits for hourly billed services. And PSM is the easiest: run from everywhere (it is Python 3) and no need to provide credentials each time. In the previous post, I explained how to setup PSM for the ADWC service.</p>
<p>Unfortunately, for starting and stopping the instance you may realize that:</p>
<ul>
<li>It is not in the documentation</li>
<li>Syntax exists but doesn&#8217;t work</li>
</ul>
<p><span id="more-22846"></span>
The documentation is there, but no mention of start-service, stop-service nor restart-service: <a href="https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/user/adwc-commands.html" target="_blank">https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/user/adwc-commands.html</a></p>
<p>The online help has start/stop/restart-service:
<pre>
$ psm adwc h

DESCRIPTION
  Oracle Autonomous Data Warehouse Cloud

SYNOPSIS
  psm ADWC  [parameters]

AVAILABLE COMMANDS
  o services
       List all Autonomous Data Warehouse Cloud instances
  o service
       List Autonomous Data Warehouse Cloud instance
  o create-service
       Provision Autonomous Data Warehouse
  o delete-service
       Unprovision Autonomous Data Warehouse
  o scale-service
       Scale Autonomous Data Warehouse
  o start-service
       This operation will set the operational state of service as started
  o stop-service
       This operation will set the operational state of service as stopped
  o restart-service
       This operation will set the operational state of service as after...
  o view-backups
       List all backups of Autonomous Data Warehouse Cloud instance
  o view-backup
       List a backup of Autonomous Data Warehouse Cloud instance
  o backup
       Backup Autonomous Data Warehouse
  o view-restores
       List all restore operations for Autonomous Data Warehouse Cloud instance
  o view-restore
       List a specified restore operation for Autonomous Data Warehouse Cloud...
  o restore
       Restore Autonomous Data Warehouse
  o check-health
       Health Check operation
  o operation-status
       View status of Autonomous Data Warehouse Cloud instance operation
  o activities
       View activities for Autonomous Data Warehouse Cloud instance
  o help
       Show help
</pre></p>
<p>All 3 take the same parameters, the service name, the REST API output format, and a boolean for wait of the completion of the job:
<pre>
$ psm adwc start-service h

DESCRIPTION
  This operation will set the operational state of service as started

SYNOPSIS
  psm ADWC start-service [parameters]
       -s, --service-name
       [-of, --output-format ]
       [-wc, --wait-until-complete ]

AVAILABLE PARAMETERS
  -s, --service-name    (string)
       Name of the Autonomous Data Warehouse Cloud instance

  -of, --output-format    (string)
       Desired output format. Valid values are [short, json, html]

  -wc, --wait-until-complete  (boolean)
       Wait until the command is complete. Valid values are [true, false]. Default is
       'false'.

EXAMPLES
  psm ADWC start-service -s ExampleInstance
</pre></p>
<h3>But&#8230;</h3>
<p>So, the online help show it and I try it:
<pre>
$ psm adwc start-service --service-name ADWC --output-format short -wc true

Error: Not Found. &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Draft//EN"&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Error 404--Not Found&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY bgcolor="white"&gt;
&lt;FONT FACE=Helvetica&gt;&lt;BR CLEAR=all&gt;
&lt;TABLE border=0 cellspacing=5&gt;&lt;TR&gt;&lt;TD&gt;&lt;BR CLEAR=all&gt;
&lt;FONT FACE="Helvetica" COLOR="black" SIZE="3"&gt;&lt;H2&gt;Error 404--Not Found&lt;/H2&gt;
&lt;/FONT&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;/TABLE&gt;
&lt;TABLE border=0 width=100% cellpadding=10&gt;&lt;TR&gt;&lt;TD VALIGN=top WIDTH=100% BGCOLOR=white&gt;&lt;FONT FACE="Courier New"&gt;&lt;FONT FACE="Helvetica" SIZE="3"&gt;&lt;H3&gt;From RFC 2068 &lt;i&gt;Hypertext Transfer Protocol -- HTTP/1.1&lt;/i&gt;:&lt;/H3&gt;
&lt;/FONT&gt;&lt;FONT FACE="Helvetica" SIZE="3"&gt;&lt;H4&gt;10.4.5 404 Not Found&lt;/H4&gt;
&lt;/FONT&gt;&lt;P&gt;&lt;FONT FACE="Courier New"&gt;The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent.&lt;/p&gt;&lt;p&gt;If the server does not wish to make this information available to the client, the status code 403 (Forbidden) can be used instead. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address.&lt;/FONT&gt;&lt;/P&gt;
&lt;/FONT&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;/TABLE&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</pre></p>
<p>Unfortunately, this doesn&#8217;t work. Is it that those commands are not supported yet, reason why we don&#8217;t find them in the documentation? Or maybe the opposite: they do not work and rather than fix them, they removed them from the documentation. One thing I&#8217;m 100% sure: start-service and stop-service are the most useful commands for a CLI giving easy access to an hourly billed and I want them to work. And it is Python, JSON and HTML &#8211; nothing hidden there.</p>
<h3><del>Hack</del> Fix</h3>
<p>The error message is about no matching URL. PSM metadata is stored in your user directory (~/.psm/data on Linux) with one JSON file for each Oracle platform service. Having a look at the URLs in ADWC.json the bug is obvious:
<pre>
$ jq . ~/.psm/data/ADWC.json | grep uri
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/scale",
        "uri": "/paas/core/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/start",
        "uri": "/paas/core/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/stop",
        "uri": "/paas/core/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/restart",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/backups",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/backups/{backupId}",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/backups",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/restoredbackups",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/restoredbackups/{jobId}",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/restoredbackups",
        "uri": "/paas/api/v1.1/instancemgmt/{identityDomainId}/services/{serviceType}/instances/{serviceName}/healthcheck",
        "uri": "/paas/api/v1.1/activitylog/{identityDomainId}/job/{jobId}",
        "uri": "/paas/api/v1.1/activitylog/{identityDomainId}/filter",
</pre></p>
<p>Let&#8217;s remove this &#8216;/core&#8217; from the uri:
<pre>
sed -ie 's/core\\[/]//g' ~/.psm/data/ADWC.json
</pre></p>
<p>And run again the start-service:
<pre>
$ psm adwc start-service -s ADWC -wc true

 Message:    Job submitted successfully for start of service/system
 Job ID:     25617877
Waiting for the job to complete... (it cannot be cancelled)
</pre></p>
<p>Here it is.</p>
<p>As my laptop is on Windows where I use Cygwin, I have setup two icons with:
<pre>C:\cygwin64\bin\mintty.exe -w min /usr/bin/psm adwc stop-service -s ADWC -wc true
C:\cygwin64\bin\mintty.exe -w min /usr/bin/psm adwc start-service -s ADWC -wc true</pre></p>
<h3>Start/Stop time</h3>
<p><a href="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/04/CaptureStartStop.png" rel="lightbox[22846]"><img src="../wp-insides/uploads/sites/2/2018/04/CaptureStartStop-300x150.png" alt="CaptureStartStop" width="300" height="150" class="alignright size-medium wp-image-22874" /></a>
This ADWC service is a PDBaaS. Starting and Stopping is as easy as opening and closing a pluggable database. Here are the timestamps after starting and stoppin in a loop (with graph on 24 loops).</p>
<p>The startup time is around 30 seconds. The stop time is about a minute. Really easy to use.</p>
<p><pre>
$ psm adwc activities -s ADWC -l 50
 Operation Type  Status   Start Time                    End Time
 START_SERVICE   SUCCEED  2018-04-29T14:30:36.888+0000  2018-04-29T14:31:21.563+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:27:26.551+0000  2018-04-29T14:27:35.610+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:25:22.172+0000  2018-04-29T14:25:51.586+0000
 START_SERVICE   SUCCEED  2018-04-29T14:20:47.957+0000  2018-04-29T14:21:38.131+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:08:09.409+0000  2018-04-29T14:08:48.125+0000
 START_SERVICE   SUCCEED  2018-04-29T14:07:24.892+0000  2018-04-29T14:08:08.244+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:04:57.566+0000  2018-04-29T14:05:27.458+0000
 START_SERVICE   SUCCEED  2018-04-29T14:03:51.035+0000  2018-04-29T14:04:34.108+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:03:17.701+0000  2018-04-29T14:03:47.262+0000
 START_SERVICE   SUCCEED  2018-04-29T14:02:00.944+0000  2018-04-29T14:02:50.978+0000
 STOP_SERVICE    SUCCEED  2018-04-29T14:00:56.990+0000  2018-04-29T14:01:29.567+0000
 START_SERVICE   SUCCEED  2018-04-29T13:59:52.898+0000  2018-04-29T14:00:39.373+0000
 STOP_SERVICE    SUCCEED  2018-04-29T13:59:19.380+0000  2018-04-29T13:59:49.011+0000
 START_SERVICE   SUCCEED  2018-04-29T13:58:15.594+0000  2018-04-29T13:58:58.937+0000
 STOP_SERVICE    SUCCEED  2018-04-29T13:57:42.355+0000  2018-04-29T13:58:11.845+0000
...
</pre></p>
<p>Easy command line without having to provide a password interactively, wait for completion, fast operation, this gives a great user experience for this service. The only problem is when you play with several cloud accounts. I&#8217;ll show an idea in the next post.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-228470" data-img="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/04/CaptureStartStop-300x150.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
