This was first published on <a href=https://blog.dbi-services.com/dataguard-broker-properties-part-i-imported-parameters>https://blog.dbi-services.com/dataguard-broker-properties-part-i-imported-parameters</a> (2015-08-23)
								<h1 class="entry-title">DataGuard broker properties &#8211; Part I: imported parameters</h1>
		<div class="content-inner">
			
						
						
		   
			<p>When you are using the DataGuard Broker, you should always use the broker (with DGMGRL or OEM) to change the parameters that are managed, rather than changing them with ALTER SYSTEM. But do you know which parameters are concerned?</p>
<p>I&#8217;ve divided the parameters in two parts. All are set by the broker, but only some of them are read when you add a new database to the configuration.</p>
<p><span id="more-3000"></span></p>
<h3>Parameters imported</h3>
<p>When you add a new database to the broker configuration, a few parameters are read from the instance in order to set the broker properties. </p>
<table style="width:50%">
<thead>
<tr>
<th>Broker property</th>
<th>Instance parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;background-color:white">ArchiveLagTarget</td>
<td style="text-align: left;background-color:white">ARCHIVE_LAG_TARGET</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">DbFileNameConvert</td>
<td style="text-align: left;background-color:white">DB_FILE_NAME_CONVERT</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">LogArchiveFormat</td>
<td style="text-align: left;background-color:white">LOG_ARCHIVE_FORMAT</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">LogArchiveMaxProcesses</td>
<td style="text-align: left;background-color:white">LOG_ARCHIVE_MAX_PROCESSES</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">LogArchiveMinSucceedDest</td>
<td style="text-align: left;background-color:white">LOG_ARCHIVE_MIN_SUCCEED_DEST</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">LogArchiveTrace</td>
<td style="text-align: left;background-color:white">LOG_ARCHIVE_TRACE</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">LogFileNameConvert</td>
<td style="text-align: left;background-color:white">LOG_FILE_NAME_CONVERT</td>
</tr>
<tr>
<td style="text-align: left;background-color:white">StandbyFileManagement</td>
<td style="text-align: left;background-color:white">STANDBY_FILE_MANAGEMENT</td>
</tr>
</tbody>
</table>
<p>I&#8217;ll take an example.
I&#8217;ve a database with all default settings. Only db_file_name_convert and log_file_name_convert are set in spfile.
Here is the content of the primary spfile (db_unique_name=&#8217;DEMO11&#8242;):
<pre>
*.db_file_name_convert='DEMO12','DEMO11'
*.log_file_name_convert='DEMO12','DEMO11'
</pre>
and the standby spfile (db_unique_name=&#8217;DEMO12&#8242;):
<pre>
*.db_file_name_convert='DEMO11','DEMO12'
*.log_file_name_convert='DEMO11','DEMO12'
</pre></p>
<p>Here is how I check the initialization parameters:
<pre>
select name,isdefault,display_value from v$parameter
 where translate(upper(name),'12','nnnnnnnnnn') in
 ('ARCHIVE_LAG_TARGET','DB_FILE_NAME_CONVERT','LOG_ARCHIVE_FORMAT','LOG_ARCHIVE_MAX_PROCESSES','LOG_ARCHIVE_MIN_SUCCEED_DEST',
 'LOG_ARCHIVE_TRACE','LOG_FILE_NAME_CONVERT','STANDBY_FILE_MANAGEMENT','INSTANCE_NAME','LOCAL_LISTENER','DB_UNIQUE_NAME',
 'LOG_ARCHIVE_DEST_n','LOG_ARCHIVE_DEST_STATE_n') order by name;
</pre>
Result in primary DEMO11:
<pre>
NAME                           ISDEFAULT DISPLAY_VALUE
------------------------------ --------- --------------------------------------------------------------------------------
archive_lag_target             TRUE      0
db_file_name_convert           FALSE     DEMO12, DEMO11
db_unique_name                 TRUE      DEMO11
instance_name                  TRUE      DEMO11
local_listener                 TRUE
log_archive_dest_1             TRUE
log_archive_dest_2             TRUE
log_archive_dest_state_1       TRUE      enable
log_archive_dest_state_2       TRUE      enable
log_archive_format             TRUE      %t_%s_%r.dbf
log_archive_max_processes      TRUE      4
log_archive_min_succeed_dest   TRUE      1
log_archive_trace              TRUE      0
log_file_name_convert          FALSE     DEMO12, DEMO11
standby_file_management        TRUE      MANUAL
</pre></p>
<p>Result in standby DEMO12:
<pre>
NAME                           ISDEFAULT DISPLAY_VALUE
------------------------------ --------- --------------------------------------------------------------------------------
archive_lag_target             TRUE      0
db_file_name_convert           FALSE     DEMO11, DEMO12
db_unique_name                 FALSE     DEMO12
instance_name                  TRUE      DEMO12
local_listener                 TRUE
log_archive_dest_1             TRUE
log_archive_dest_2             TRUE
log_archive_dest_state_1       TRUE      enable
log_archive_dest_state_2       TRUE      enable
log_archive_format             TRUE      %t_%s_%r.dbf
log_archive_max_processes      TRUE      4
log_archive_min_succeed_dest   TRUE      1
log_archive_trace              TRUE      0
log_file_name_convert          FALSE     DEMO11, DEMO12
standby_file_management        TRUE      MANUAL
</pre></p>
<p>Ok, now I&#8217;ll create my Data Guard Broker configuration and check the properties that have been imported from my instances configuration.</p>
<p><pre>
DGMGRL&gt; CREATE CONFIGURATION demo11 AS PRIMARY DATABASE IS demo11 CONNECT IDENTIFIER IS '//vm111/DEMO11';
Configuration "demo11" created with primary database "demo11"
DGMGRL&gt; ADD DATABASE demo12 AS CONNECT IDENTIFIER IS '//vm112/DEMO12';
Database "demo12" added
DGMGRL&gt; ENABLE CONFIGURATION demo11;
Enabled.
</pre></p>
<p>Note that I&#8217;m using Easy Connect connection strings only on labs. In production, having a tnsnames.ora alias is the best practice.</p>
<p>Let&#8217;s check the properties of the standby:
<pre>
DGMGRL&gt; SHOW DATABASE demo12;
Database - demo12
  Role:               PHYSICAL STANDBY
  Intended State:     APPLY-ON
  Transport Lag:      0 seconds (computed 1 second ago)
  Apply Lag:          36 minutes 13 seconds (computed 1 second ago)
  Average Apply Rate: (unknown)
  Active Apply Rate:  (unknown)
  Maximum Apply Rate: (unknown)
  Real Time Query:    OFF
  Instance(s):
    DEMO12
  Properties:
    DGConnectIdentifier             = '//vm112/DEMO12'
    ObserverConnectIdentifier       = ''
    LogXptMode                      = 'ASYNC'
    RedoRoutes                      = ''
    DelayMins                       = '0'
    Binding                         = 'optional'
    MaxFailure                      = '0'
    MaxConnections                  = '1'
    ReopenSecs                      = '300'
    NetTimeout                      = '30'
    RedoCompression                 = 'DISABLE'
    LogShipping                     = 'ON'
    PreferredApplyInstance          = ''
    ApplyInstanceTimeout            = '0'
    ApplyLagThreshold               = '0'
    TransportLagThreshold           = '0'
    TransportDisconnectedThreshold  = '30'
    ApplyParallel                   = 'AUTO'
    StandbyFileManagement           = 'MANUAL'
    ArchiveLagTarget                = '0'
    LogArchiveMaxProcesses          = '4'
    LogArchiveMinSucceedDest        = '1'
    DbFileNameConvert               = 'DEMO11, DEMO12'
    LogFileNameConvert              = 'DEMO11, DEMO12'
    FastStartFailoverTarget         = ''
    InconsistentProperties          = '(monitor)'
    InconsistentLogXptProps         = '(monitor)'
    SendQEntries                    = '(monitor)'
    LogXptStatus                    = '(monitor)'
    RecvQEntries                    = '(monitor)'
    StaticConnectIdentifier         = '(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=VM112)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=DEMO12_DGMGRL)(INSTANCE_NAME=DEMO12)(SERVER=DEDICATED)))'
    StandbyArchiveLocation          = 'USE_DB_RECOVERY_FILE_DEST'
    AlternateLocation               = ''
    LogArchiveTrace                 = '0'
    LogArchiveFormat                = '%t_%s_%r.dbf'
    TopWaitEvents                   = '(monitor)'
</pre></p>
<p>You can see that the properties from the table above have been set according to the initialization parameters (for example the file name converts that are not the defaults). </p>
<p>They have been imported and now they are managed by the broker: you must use the broker to change them. And you can see that the broker set all of them in the spfile even for those that were defaults. Here is what has been run on DEMO12 by the broker when enabling the configuration:
<pre>
ALTER SYSTEM SET log_archive_config='dg_config=(demo11)' SCOPE=BOTH;
ALTER SYSTEM SET log_archive_dest_1='location=USE_DB_RECOVERY_FILE_DEST','valid_for=(ALL_LOGFILES, ALL_ROLES)' SCOPE=BOTH;
ALTER SYSTEM SET log_archive_trace=0 SCOPE=BOTH SID='DEMO12';
ALTER SYSTEM SET log_archive_format='%t_%s_%r.dbf' SCOPE=SPFILE SID='DEMO12';
ALTER SYSTEM SET standby_file_management='MANUAL' SCOPE=BOTH SID='*';
ALTER SYSTEM SET archive_lag_target=0 SCOPE=BOTH SID='*';
ALTER SYSTEM SET log_archive_max_processes=4 SCOPE=BOTH SID='*';
ALTER SYSTEM SET log_archive_min_succeed_dest=1 SCOPE=BOTH SID='*';
ALTER SYSTEM SET db_file_name_convert='DEMO11','DEMO12' SCOPE=SPFILE;
ALTER SYSTEM SET log_file_name_convert='DEMO11','DEMO12' SCOPE=SPFILE;
ALTER SYSTEM SET fal_server='//vm111/DEMO11' SCOPE=BOTH;
</pre>
You can see them in alert.log</p>
<p>You see that LOG_ARCHIVE_DEST_1 has been set as well, but it has not been read to get the value. We will see it in Part II. Only the parameters I&#8217;ve listed in the table above are read when adding a database to the configuration. This is very important to know if you remove and re-create the broker configuration.</p>
<h3>Parameters read dynamically</h3>
<p>There are others parameter that have been read and are not changed by the broker. The instance name comes from INSTANCE_NAME. And the StaticConnectIdentifier is built from LOCAL_LISTENER and DB_UNIQUE_NAME. If the parameters are defaults (not set manually) then the broker properties will adapt when those defaults are changed (when instance is started on another node of the cluster for example).</p>
<h3>Parameters mismatch</h3>
<p>What happens if you change manually one of the parameters I&#8217;ve listed above? No error, but inconsistent properties.
For example, I change the archive lag target in DEMO12:
<pre>
SQL&gt; alter system set archive_lag_target=60 scope=memory;
System altered.
</pre>
The property is still at 0 for the broker:
<pre>
DGMGRL&gt; SHOW DATABASE VERBOSE demo12;
Database - demo12
...
  Instance(s):
    DEMO12
      Warning: ORA-16714: the value of property ArchiveLagTarget is inconsistent with the database setting
  Properties:
...
    ArchiveLagTarget                = '0'
    InconsistentProperties          = '(monitor)'
    InconsistentLogXptProps         = '(monitor)'
...
</pre>
But I have a warning and I can check those inconsistent properties:
<pre>
DGMGRL&gt; SHOW DATABASE demo12 InconsistentProperties;
INCONSISTENT PROPERTIES
   INSTANCE_NAME        PROPERTY_NAME         MEMORY_VALUE         SPFILE_VALUE         BROKER_VALUE
          DEMO12     ArchiveLagTarget                   60                    0                    0
</pre>
Here I can compare the instance parameters (memory and spfile) with broker property.</p>
<p>Have you noticed the InconsistentLogXptProps above? In next part we will see how LOG_ARCHIVE_DEST parameters are managed by Data guard Broker.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-30010"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-7540">
				<div id="div-comment-7540" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/84902cc2b0f7829a2f73a7af651d604a?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Sebastian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7540">
			May 18, 2017 at 9 h 17 min</a>		</div>

		<p>Hello
thank you for this very clear post, like all the others you provided. That&#8217;s right it&#8217;s important to understand this connection between dg broker and instance.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-75411"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7540' onclick='return addComment.moveForm( "div-comment-7540", "7540", "respond", "3000" )' aria-label='Reply to Sebastian to Sebastian'>Reply to Sebastian</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
