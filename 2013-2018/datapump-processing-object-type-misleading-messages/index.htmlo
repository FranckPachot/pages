This was first published on <a href=https://blog.dbi-services.com/datapump-processing-object-type-misleading-messages>https://blog.dbi-services.com/datapump-processing-object-type-misleading-messages</a> (2016-01-18)
								<h1 class="entry-title">DataPump &#8216;Processing object type&#8217; misleading messages</h1>
		<div class="content-inner">
			
						
						
		   
			<p>You&#8217;ve started a long DataPump and see it stuck on TABLE/STATISTICS/TABLE_STATISTICS, but you don&#8217;t expect that step to take a long time. Let&#8217;s see if we can rely on that message.
<span id="more-6678"></span>
I&#8217;ve a 500MB table and export it. I&#8217;ll use the 12c LOGTIME option to print a timestamp in front of each output line:
<pre>
18-JAN-16 21:35:44.038: Starting "SOE"."SYS_EXPORT_TABLE_01":  soe/********@//localhost/SWINGBENCH tables=soe.DEMO directory=tmp status=1 logtime=all reuse_dumpfiles=y
18-JAN-16 21:35:48.294: Processing object type TABLE_EXPORT/TABLE/TABLE
18-JAN-16 21:35:48.687: Processing object type TABLE_EXPORT/TABLE/TABLE_DATA
18-JAN-16 21:35:49.532: Processing object type TABLE_EXPORT/TABLE/INDEX/INDEX
18-JAN-16 21:35:49.849: Processing object type TABLE_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS
18-JAN-16 21:35:50.242: Processing object type TABLE_EXPORT/TABLE/STATISTICS/TABLE_STATISTICS
18-JAN-16 21:35:54.779: . . exported "SOE"."DEMO"                                542.6 MB 5051504 rows
18-JAN-16 21:35:55.257: Processing object type TABLE_EXPORT/TABLE/STATISTICS/MARKER
18-JAN-16 21:35:55.644: Master table "SOE"."SYS_EXPORT_TABLE_01" successfully loaded/unloaded
18-JAN-16 21:35:55.693: ******************************************************************************
18-JAN-16 21:35:55.694: Dump file set for SOE.SYS_EXPORT_TABLE_01 is:
18-JAN-16 21:35:55.697:   /tmp/expdat.dmp
18-JAN-16 21:35:55.738: Job "SOE"."SYS_EXPORT_TABLE_01" successfully completed at Mon Jan 18 21:35:55 2016 elapsed 0 00:00:13
</pre>
If you rely on the &#8216;Processing&#8217; messages, the export of table data takes 49.532 &#8211; 48.687 = 0.845 seconds. And exporting table statistics takes 55.257 &#8211; 50.242 = 5 seconds. Obviously, this is wrong.</p>
<p>When you look at the &#8216;exported &#8230; rows&#8217; it seems that the export of table data was still running at that time.</p>
<p>As you can see above, I&#8217;ve run the expdp with the STATUS=1 in order to display job status every 1 second.</p>
<p>After the TABLE_EXPORT/TABLE/TABLE_DATA the worker was not executing:
<pre>
Worker 1 Status:
  Instance ID: 1
  Instance name: CDB
  Host name: VM117
  Object start time: Monday, 18 January, 2016 21:35:48
  Object status at: Monday, 18 January, 2016 21:35:48
  Process Name: DW00
  State: WORK WAITING
</pre>
Then it changed to the state of EXECUTING for several seconds.</p>
<p>Only at 21:35:51 we can see a status showing that it&#8217;s working on the table export, which is more than 1 second after the related &#8216;Processing&#8217; message:
<pre>
Worker 1 Status:
  Instance ID: 1
  Instance name: CDB
  Host name: VM117
  Object start time: Monday, 18 January, 2016 21:35:51
  Object status at: Monday, 18 January, 2016 21:35:51
  Process Name: DW00
  State: EXECUTING
  Object Schema: SOE
  Object Name: DEMO
  Object Type: TABLE_EXPORT/TABLE/TABLE_DATA
  Completed Objects: 1
  Total Objects: 1
  Completed Rows: 1,398,529
  Worker Parallelism: 1
</pre></p>
<p>Then, the status displayed every seconds shows the same with an increasing number of rows until 21:35:54:
<pre>
Worker 1 Status:
  Instance ID: 1
  Instance name: CDB
  Host name: VM117
  Access method: direct_path
  Object start time: Monday, 18 January, 2016 21:35:51
  Object status at: Monday, 18 January, 2016 21:35:54
  Process Name: DW00
  State: EXECUTING
  Object Schema: SOE
  Object Name: DEMO
  Object Type: TABLE_EXPORT/TABLE/TABLE_DATA
  Completed Objects: 1
  Total Objects: 1
  Completed Rows: 5,051,504
  Completed Bytes: 569,032,224
  Percent Done: 100
  Worker Parallelism: 1
</pre>
and this is where we get the message:
<pre>
18-JAN-16 21:35:54.779: . . exported "SOE"."DEMO"                                542.6 MB 5051504 rows
</pre></p>
<p>Then we can see the following status which suggests that TABLE_EXPORT/TABLE/STATISTICS/MARKER has started:
<pre>
Worker 1 Status:
  Instance ID: 1
  Instance name: CDB
  Host name: VM117
  Object start time: Monday, 18 January, 2016 21:35:51
  Object status at: Monday, 18 January, 2016 21:35:55
  Process Name: DW00
  State: EXECUTING
  Object Schema: SYS
  Object Type: TABLE_EXPORT/TABLE/STATISTICS/MARKER
  Worker Parallelism: 1
</pre>
but we see the related &#8216;Processing&#8217; message only after it:
<pre>
18-JAN-16 21:35:55.257: Processing object type TABLE_EXPORT/TABLE/STATISTICS/MARKER
</pre>
Strange to take 4 seconds on that step, and anyway the &#8216;Processing&#8230;&#8217; message comes at the end here.</p>
<p>My first conclusion here is that you should not rely on the &#8216;Processing&#8230;&#8217; messages to know what is currently running.
If you&#8217;ve run expdp from your terminal, you can interrupt it with control-C and you have a CLI to control the worker processes. They are still running and you can see the status with STATUS and then continue to the previous mode with CONTINUE_CLIENT.
If expdp is running in background, you can attach to the job and do the same.
Remember that DataPump is running through background jobs, which explains that the &#8216;Processing&#8217; message may not be in sync with what is currently processed. </p>
<p>So, the &#8216;LOGTIME&#8217; option a bit useless when it puts the timestamp in front the &#8216;Processing&#8217; messages. However, it&#8217;s useful for the &#8216;exported&#8217; message as it is the end of the table export.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-66790"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
