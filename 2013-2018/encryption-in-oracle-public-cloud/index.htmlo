This was first published on <a href=https://blog.dbi-services.com/encryption-in-oracle-public-cloud>https://blog.dbi-services.com/encryption-in-oracle-public-cloud</a> (2016-11-29)
								<h1 class="entry-title">Encryption in Oracle Public Cloud</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Oracle Transparent Data Encryption is available without option on the Oracle Public Cloud: Standard Edition as well as Enterprise Edition (EE, EE-HP EE-EP, ECS). More than that, the DBaaS enforces TDE for any user tablespace even when not specifying in the CREATE TABLESPACE. It you are not familiar with TDE key management (wallets) then you have probably encountered <strong>ORA-28374: typed master key not found in wallet</strong>.
Rather than another tutorial on TDE I&#8217;ll try to explain it from the errors you may encounter when simply creating a tablespace.
<span id="more-13133"></span>
I have created a new pluggable database PDB2 from the command line:
<pre>
SQL&gt; create pluggable database PDB2 admin user admin identified by "admin";
Pluggable database PDB2 created.

SQL&gt; alter pluggable database PDB2 open read write;
Pluggable database PDB2 altered.

SQL&gt; show pdbs
CON_ID  CON_NAME  OPEN MODE   RESTRICTED
------- --------- ----------- ----------
2       PDB$SEED  READ ONLY   NO
3       PDB1      READ WRITE  NO
7       PDB2      READ WRITE  NO
</pre>
I go to the PDB2 container and try to create a tablespace:
<pre>
SQL&gt; alter session set container=PDB2;
Session altered.

SQL&gt; create tablespace mytablespace;

Error starting at line 1 in command -
create tablespace mytablespace
Error report -
ORA-28374: typed master key not found in wallet
28374. 0000 -  "typed master key not found in wallet"
*Cause:    You attempted to access encrypted tablespace or redo logs with
           a typed master key not existing in the wallet.
*Action:   Copy the correct Oracle Wallet from the instance where the tablespace
           was created.
</pre></p>
<p>So, this message is related with TDE wallet. </p>
<h3>encrypt_new_tablespaces</h3>
<p>I didn&#8217;t specify any encryption clause in the CREATE TABLESPACE command but it is activated by default by the following parameter:
<pre>
SQL&gt; show parameter encrypt_new_tablespaces

NAME                    TYPE   VALUE
----------------------- ------ ----------
encrypt_new_tablespaces string CLOUD_ONLY
</pre>
The values can be DDL (the old behavior where encryption must be defined in the CREATE TABLESPACE statement), ALWAYS (AES128 encryption by default), or CLOUD_ONLY which is the same as ALWAYS when the instance is on the Cloud, or as DDL if the instance is on-premises. The default is CLOUD_ONLY.
This parameter has been introduced in 12.2 and has been backported to 11.2.0.4 and 12.1.0.2 with bug 21281607 that is applied on any Oracle Public Cloud DBaaS instance.</p>
<p>So, one solution to create our tablespace is to set encrypt_new_tablespaces to DDL but as it is recommended to encrypt all user tablespaces, let&#8217;s continue with it.</p>
<h3>ORA-28374: typed master key not found in wallet</h3>
<p>So the error message means that I don&#8217;t have a master key in the wallet for my newly created PDB because in multitenant each PDB has it&#8217;s own master key (but there&#8217;s only one wallet for the CDB).
The wallet is opened:
<pre>
SQL&gt; select * from v$encryption_wallet;

WRL_TYPE  WRL_PARAMETER  STATUS              WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
-------- --------------- ------------------- ------------ ------------- ---------------- ------
FILE                     OPEN_NO_MASTER_KEY  AUTOLOGIN    SINGLE        UNDEFINED        7
</pre>
But empty (I&#8217;m still in the PDB2 container)
<pre>
SQL&gt; select * from v$encryption_keys order by creation_time;
no rows selected
</pre></p>
<h3>SET KEY</h3>
<p>So the idea is to set a key:
<pre>
SQL&gt; administer key management set key identified by "Ach1z0#d";
</pre>
but:
<pre>
Error starting at line 1 in command -
administer key management set key identified by "Ach1z0#d"
Error report -
ORA-28417: password-based keystore is not open
28417. 0000 -  "password-based keystore is not open"
*Cause:    Password-based keystore was not opened.
*Action:   Close the auto login keystore, if required, and open a
           password-based keystore.
</pre></p>
<p>Ok. An error because the wallet is not opened. Let&#8217;s try to open it:</p>
<p><pre>SQL&gt; administer key management set keystore open identified by "Ach1z0#d";

Error starting at line 1 in command -
administer key management set keystore open identified by "Ach1z0#d"
Error report -
ORA-28354: Encryption wallet, auto login wallet, or HSM is already open
28354. 0000 -  "Encryption wallet, auto login wallet, or HSM is already open"
*Cause:    Encryption wallet, auto login wallet, or HSM was already opened.
*Action:   None.</pre></p>
<p>Actually, the wallet is opened. We have seen that the opened wallet is AUTOLOGIN:
<pre>
SQL&gt; select * from v$encryption_wallet;

WRL_TYPE  WRL_PARAMETER  STATUS              WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
-------- --------------- ------------------- ------------ ------------- ---------------- ------
FILE                     OPEN_NO_MASTER_KEY  AUTOLOGIN    SINGLE        UNDEFINED        7
</pre></p>
<p>On DBaaS an AUTOLOGIN wallet is used to be able to have the database automatically restarted without manual intervention. Without AUTOLOGIN wallet you have to provide the password. </p>
<p>But AUTOLOGIN wallet is limited to use it to access the tablespaces.
When administering the wallet, we need to provide the password manually:</p>
<p>We need to close the AUTOLOGIN one:
<pre>
SQL&gt; administer key management set keystore close;
Key MANAGEMENT succeeded.
</pre>
Now that it is closed, we can try to open it and open it with the password:
<pre>
SQL&gt; administer key management set keystore open identified by "Ach1z0#d";

Error starting at line : 1 in command -
administer key management set keystore open identified by "Ach1z0#d"
Error report -
ORA-28417: password-based keystore is not open
28417. 0000 -  "password-based keystore is not open"
*Cause:    Password-based keystore was not opened.
*Action:   Close the auto login keystore, if required, and open a
           password-based keystore.
</pre>
Oh&#8230; it is opened AUTOLOGIN once again:
<pre>
SQL&gt; select * from v$encryption_wallet;

WRL_TYPE  WRL_PARAMETER  STATUS              WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
-------- --------------- ------------------- ------------ ------------- ---------------- ------
FILE                     OPEN_NO_MASTER_KEY  AUTOLOGIN    SINGLE        UNDEFINED        7
</pre>
</pre></p>
<h3>CDB$ROOT</h3>
<p>You need to open the wallet with password from CDB$ROOT:
<pre>
SQL&gt; alter session set container=CDB$ROOT;
Session altered.

SQL&gt; administer key management set keystore close;
Key MANAGEMENT succeeded.

SQL&gt; administer key management set keystore open identified by "Ach1z0#d";
Key MANAGEMENT succeeded.
</pre></p>
<p>So here is the right way to start: in CDB$ROOT close the AUTOLOGIN wallet and open it with the password.</p>
<h3>PDB</h3>
<p>Now ready to go further in the PDB2.</p>
<p><pre>
SQL&gt; alter session set container=PDB2;
Session altered.
</pre></p>
<p>The wallet is now closed for the PDB:
<pre>
SQL&gt; select * from v$encryption_wallet;
WRL_TYPE  WRL_PARAMETER  STATUS  WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
--------- -------------- ------- ------------ ------------- ---------------- ------
FILE                     CLOSED  UNKNOWN      SINGLE        UNDEFINED        7
</pre></p>
<p>Let&#8217;s open it manually:
<pre>
SQL&gt; administer key management set keystore open identified by "Ach1z0#d";
Key MANAGEMENT succeeded.
</pre></p>
<p>We have no encryption key:
<pre>
SQL&gt; select * from v$encryption_keys order by creation_time;
no rows selected
</pre></p>
<p>Let&#8217;s do what we want to do from the get-go: create an encryption key for our PDB:
<pre>
SQL&gt; administer key management set key identified by "Ach1z0#d";

Error starting at line 1 in command -
administer key management set key identified by "Ach1z0#d"
Error report -
ORA-46631: keystore needs to be backed up
46631. 00000 -  "keystore needs to be backed up"
*Cause:    The keystore was not backed up. For this operation to proceed, the
           keystore must be backed up.
*Action:   Backup the keystore and try again.
</pre></p>
<p>Oh yes. Any change must be backed up. That&#8217;s easy:</p>
<p><pre>
SQL&gt; administer key management set key identified by "Ach1z0#d" with backup;
Key MANAGEMENT succeeded.
</pre></p>
<p>Here we are. The key is there:</p>
<p><pre>
SQL&gt; select * from v$encryption_keys order by creation_time;

KEY_ID                                                TAG  CREATION_TIME                           ACTIVATION_TIME                         CREATOR  CREATOR_ID  USER  USER_ID  KEY_USE     KEYSTORE_TYPE      ORIGIN  BACKED_UP  CREATOR_DBNAME  CREATOR_DBID  CREATOR_INSTANCE_NAME  CREATOR_INSTANCE_NUMBER  CREATOR_INSTANCE_SERIAL  CREATOR_PDBNAME  CREATOR_PDBID  CREATOR_PDBUID  CREATOR_PDBGUID                   ACTIVATING_DBNAME  ACTIVATING_DBID  ACTIVATING_INSTANCE_NAME  ACTIVATING_INSTANCE_NUMBER  ACTIVATING_INSTANCE_SERIAL  ACTIVATING_PDBNAME  ACTIVATING_PDBID  ACTIVATING_PDBUID  ACTIVATING_PDBGUID                CON_ID

AXP3BIrVW0+Evwfx7okZtcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA       28-NOV-16 08.41.20.629496000 PM +00:00  28-NOV-16 08.41.20.629498000 PM +00:00  SYS      0           SYS   0        TDE IN PDB  SOFTWARE KEYSTORE  LOCAL   NO         CDB1            902797638     CDB1                   1                        4294967295               PDB2             7              96676154        42637D7C7F7A3315E053DA116A0A2666  CDB1               902797638        CDB1                      1                           4294967295                  PDB2                7                 96676154           42637D7C7F7A3315E053DA116A0A2666  7
</pre>
All is perfect but the wallet is still opened with the password:
<pre>
SQL&gt; select * from v$encryption_wallet;
WRL_TYPE  WRL_PARAMETER  STATUS  WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
-------- --------------- ------- ------------ ------------- --------------- -------
FILE                     OPEN    PASSWORD     SINGLE        NO               7
</pre></p>
<p>In order to get back to the initial state, it is sufficient to close it (from the CDB$ROOT):</p>
<p><pre>
SQL&gt; alter session set container=CDB$ROOT;
Session altered.

SQL&gt; administer key management set keystore close;

Error starting at line 1 in command -
administer key management set keystore close
Error report -
ORA-28389: cannot close auto login wallet
28389. 00000 -  "cannot close auto login wallet"
*Cause:    Auto login wallet could not be closed because it was opened with
           another wallet or HSM requiring a password.
*Action:   Close the wallet or HSM with a password.
</pre></p>
<p>Ok. The &#8216;close&#8217; command needs the password as it was not opened with AUTOLOGIN one.</p>
<p><pre>
SQL&gt; administer key management set keystore close identified by "Ach1z0#d";
Key MANAGEMENT succeeded.
</pre></p>
<p>It is immediately automatically re-opened with the AUTOLOGIN one:
<pre>
SQL&gt; select * from v$encryption_wallet;

WRL_TYPE  WRL_PARAMETER                           STATUS  WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
--------- --------------------------------------- ------- ------------ ------------- ---------------- ------
FILE      /u01/app/oracle/admin/CDB1/tde_wallet/  OPEN    AUTOLOGIN    SINGLE        NO               1
</pre></p>
<p>and from the CDB$ROOT I can see all of them:
<pre>
SQL&gt; select * from v$encryption_keys order by creation_time;

KEY_ID                                                TAG        CREATION_TIME                           ACTIVATION_TIME                         CREATOR  CREATOR_ID  USER  USER_ID  KEY_USE     KEYSTORE_TYPE      ORIGIN  BACKED_UP  CREATOR_DBNAME  CREATOR_DBID  CREATOR_INSTANCE_NAME  CREATOR_INSTANCE_NUMBER  CREATOR_INSTANCE_SERIAL  CREATOR_PDBNAME  CREATOR_PDBID  CREATOR_PDBUID  CREATOR_PDBGUID                   ACTIVATING_DBNAME  ACTIVATING_DBID  ACTIVATING_INSTANCE_NAME  ACTIVATING_INSTANCE_NUMBER  ACTIVATING_INSTANCE_SERIAL  ACTIVATING_PDBNAME  ACTIVATING_PDBID  ACTIVATING_PDBUID  ACTIVATING_PDBGUID                CON_ID

ATxUk1G7gU/0v3Ygk1MbZj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA             27-NOV-16 09.02.18.050676000 PM +00:00  27-NOV-16 09.02.18.130705000 PM +00:00  SYS      0           SYS   0        TDE IN PDB  SOFTWARE KEYSTORE  LOCAL   YES        CDB1            902797638     CDB1                   1                        4294967295               CDB$ROOT         1              1               3D94C45E41CA19A9E05391E5E50AB8D8  CDB1               902797638        CDB1                      1                           4294967295                  CDB$ROOT            1                 1                  3D94C45E41CA19A9E05391E5E50AB8D8  1
AWSs1Gr0WE86vyfWc123xccAAAAAAAAAAAAAAAAAAAAAAAAAAAAA             27-NOV-16 09.02.18.089346000 PM +00:00  27-NOV-16 09.02.18.722365000 PM +00:00  SYS      0           SYS   0        TDE IN PDB  SOFTWARE KEYSTORE  LOCAL   YES        CDB1            902797638     CDB1                   1                        4294967295               PDB1             3              2687567370      424FA3D9C61927FFE053DA116A0A85F7  CDB1               902797638        CDB1                      1                           4294967295                  PDB1                3                 2687567370         424FA3D9C61927FFE053DA116A0A85F7  3
AfwqzZP/Rk+5v5WqiNK5nl0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA             28-NOV-16 08.36.43.980717000 PM +00:00  28-NOV-16 08.36.43.980720000 PM +00:00  SYS      0           SYS   0        TDE IN PDB  SOFTWARE KEYSTORE  LOCAL   YES        CDB1            902797638     CDB1                   1                        4294967295               PDB2             5              2602763579      42636D1380072BE7E053DA116A0A8E2D  CDB1               902797638        CDB1                      1                           4294967295                  PDB2                5                 2602763579         42636D1380072BE7E053DA116A0A8E2D  5
AXP3BIrVW0+Evwfx7okZtcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA             28-NOV-16 08.41.20.629496000 PM +00:00  28-NOV-16 08.41.20.629498000 PM +00:00  SYS      0           SYS   0        TDE IN PDB  SOFTWARE KEYSTORE  LOCAL   NO         CDB1            902797638     CDB1                   1                        4294967295               PDB2             7              96676154        42637D7C7F7A3315E053DA116A0A2666  CDB1               902797638        CDB1                      1                           4294967295                  PDB2                7                 96676154           42637D7C7F7A3315E053DA116A0A2666  7
</pre></p>
<p>As you can see I did two attempts with the PDB2 to write this blog post. The previous keys are all in the wallet.</p>
<p>I check that the AUTOLOGIN is opened in PDB2:</p>
<p><pre>
SQL&gt; alter session set container=PDB2;
Session altered.
&nbsp;;
SQL&gt; select * from v$encryption_wallet;
WRL_TYPE  WRL_PARAMETER  STATUS  WALLET_TYPE  WALLET_ORDER  FULLY_BACKED_UP  CON_ID
--------- -------------- ------- ------------ ------------- ---------------- ------
FILE                     OPEN    AUTOLOGIN    SINGLE        NO               7
</pre></p>
<p>And finally I can create my tablespace</p>
<p><pre>
SQL&gt; create tablespace mytablespace;
Tablespace MYTABLESPACE created.
</pre></p>
<p>Easy, isn&#8217;t it? </p>
<p>If you create your PDB with the DBaaS monitor interface all is done automatically with the &#8216;create PDB&#8217; button:</p>
<ul>
<li>Close the AUTOLOGIN wallet (from CDB$ROOT)</li>
<li>Open the wallet with password</li>
<li>Create the pluggable database and open it</li>
<li>Open the wallet from the PDB, with password</li>
<li>Set the masterkey for the PDB</li>
<li>Close the wallet to get it opened with AUTOLOGIN</li>
</ul>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-131340"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 4 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-5601">
				<div id="div-comment-5601" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/ba77413ffe0bb48d9da467d649464a6c?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Thomas Teske</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-5601">
			November 29, 2016 at 22 h 50 min</a>		</div>

		<p>Thanks Franck &#8211; maybe it is easier with a decision tree i.e. query for status of something and go for the next step do be executed. That is probably straight forward (you are here in reverse gear.)
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-56021"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-5601' onclick='return addComment.moveForm( "div-comment-5601", "5601", "respond", "13133" )' aria-label='Reply to Thomas to Thomas Teske'>Reply to Thomas</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-5605">
				<div id="div-comment-5605" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/c10bb46429554ba6f3c6144ad8dbd555?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://hemantoracledba.blogspot.com' rel='external nofollow' class='url'>Hemant K Chitale</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-5605">
			November 30, 2016 at 8 h 05 min</a>		</div>

		<p>Thanks for the walkthrough.  I had the same error attempting to create a new tablespace in a new PDB.  I abandoned that effort then !  Will try again.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-56061"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-5605' onclick='return addComment.moveForm( "div-comment-5605", "5605", "respond", "13133" )' aria-label='Reply to Hemant to Hemant K Chitale'>Reply to Hemant</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-8699">
				<div id="div-comment-8699" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/09ed1ea2b4ce15de7bd5d9116652affd?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Lava Kumar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-8699">
			September 30, 2017 at 8 h 33 min</a>		</div>

		<p>Hi Franck,</p>
<p>Thanks a lot for the information.</p>
<p>I have one doubt, to open the wallet from the CDB$ROOT using below command, is the password provided is known already or can be given anything. Please let us know.</p>
<p>administer key management set keystore open identified by &#8220;Ach1z0#d&#8221;;
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-87001"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-8699' onclick='return addComment.moveForm( "div-comment-8699", "8699", "respond", "13133" )' aria-label='Reply to Lava to Lava Kumar'>Reply to Lava</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor odd alt depth-2" id="comment-9311">
				<div id="div-comment-9311" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-9311">
			November 12, 2017 at 23 h 33 min</a>		</div>

		<p>Hi Lava,
This is the keystore password, so you put the one you have created the keystore with (in the DBaaS is this the administration password you provided when created the service).
Regards,
Franck.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-93121"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-9311' onclick='return addComment.moveForm( "div-comment-9311", "9311", "respond", "13133" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
