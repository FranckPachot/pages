This was first published on <a href=https://blog.dbi-services.com/flame-graph-for-quick-identification-of-oracle-bug>https://blog.dbi-services.com/flame-graph-for-quick-identification-of-oracle-bug</a> (2015-06-12)
								<h1 class="entry-title">Flame Graph for quick identification of Oracle bug</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Most of my performance stores start with a screenshot of <a href="http://orachrome.com/en/index.html">Orachrome Lighty</a>Â my preferred tool to have a graphical view of the database performance, in Standard and Enterprise Edition without any options:</p>
<p><a class="easyblog-thumb-preview" title="CaptureHighParse.JPG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureHighParse.JPG" rel="lightbox[2369]"><img title="b2ap3_thumbnail_CaptureHighParse.JPG" src="../images/easyblog_images/139/b2ap3_thumbnail_CaptureHighParse.JPG" alt="b2ap3_thumbnail_CaptureHighParse.JPG" /></a></p>
<p>I&#8217;m investigating a long running query. That query obeys to the most important rule in Oracle performance: parce once (CPU) &#8211; execute many (IO+CPU) &#8230; except that the parse time is a bit too long here (2 hours)</p>
<p>How to know what happens ? ASH is there if you have Diagnostic Pack:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">MIN(SAMPLE_TIME)  MAX(SAMPLE_TIME)  COUNT(*) PLAN_LINE_ID SESSION_STATE IN_PARSE IN_SQL_EXECUTION
----------------- -------------------------- ------------ ------------- -------- ----------------
10.06.15 04:26:43 10.06.15 05:29:41     3773              ON CPU        Y        N
10.06.15 05:21:26 10.06.15 06:37:43     4078              ON CPU        Y        Y
10.06.15 06:37:44 10.06.15 10:14:54       34           26 WAITING       N        Y
10.06.15 06:37:53 10.06.15 10:15:38      707           32 WAITING       N        Y
10.06.15 06:38:49 10.06.15 10:15:46      106           33 WAITING       N        Y
10.06.15 06:38:57 10.06.15 10:15:42       18           28 ON CPU        N        Y
10.06.15 06:38:59 10.06.15 09:44:13        5           25 ON CPU        N        Y
</pre>
<p>and this is where I know that those 2 hours on CPU are for parsing. No SQL_PLAN_LINE_ID at parse phase. I&#8217;ve no explanation yet about the hour that is accounted both as parse and execution. Comments below are there for ideas <img src="../wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" /></p>
<p>Ok, it&#8217;s in CPU. Then let&#8217;s go to flame graphs:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1"> perf script -i /tmp/perf.out | ./FlameGraph-master/stackcollapse-perf.pl &gt; /tmp/perf.folded ; ./FlameGraph-master/flamegraph.pl /tmp/perf.folded &gt; /tmp/perf.folded.svg
perf record -e cpu-cycles -o /tmp/perf.out -g -p 3708
^C
[ perf record: Woken up 1207 times to write data ]
[ perf record: Captured and wrote 301.689 MB /tmp/perf.out (~13180986 samples) ]
</pre>
<p><a class="easyblog-thumb-preview" title="CaptureHighParseFlame.JPG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureHighParseFlame.JPG" rel="lightbox[2369]"><img title="b2ap3_thumbnail_CaptureHighParseFlame.JPG" src="../images/easyblog_images/139/b2ap3_thumbnail_CaptureHighParseFlame.JPG" alt="b2ap3_thumbnail_CaptureHighParseFlame.JPG" /></a></p>
<p>&nbsp;</p>
<p>When the parsing time is in hours, we are obvously encountering a bug. So let&#8217;s search on MOS for: kghalf kghalp kokqopdup and bingo &#8211; several bugs about high CPU usage. Workaround is to disable Simple View Merging.</p>
<p>I have a workaround now &#8211; disabling simple view merging. Parse time is short. But query is still running for one hour&#8230;</p>
<p>This blog post was about using perf and flame graphs to get the stack from several samples, rather than taking few stack dumps. Those are great tools.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-23700" data-img="http://blog.dbi-services.com/images/easyblog_images/139/b2ap3_thumbnail_CaptureHighParse.JPG"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
