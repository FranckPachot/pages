This was first published on <a href=https://blog.dbi-services.com/impdp-logtimeall-metricsy-and-12cr2-parallel-metadata>https://blog.dbi-services.com/impdp-logtimeall-metricsy-and-12cr2-parallel-metadata</a> (2017-11-28)
								<h1 class="entry-title">impdp logtime=all metrics=y and 12cR2 parallel metadata</h1>
		<div class="content-inner">
			
						
						
		   
			<p>A quick post to show why you should always use LOGTIME=ALL METRICS=Y when using Data Pump. Just look at an example showing the timestamp in front of each line and a message about each task completed by the worker:
<span id="more-19884"></span>
<pre>15-NOV-17 11:48:32.305: W-5 Processing object type DATABASE_EXPORT/SCHEMA/PROCACT_SCHEMA
15-NOV-17 11:48:34.439: W-13      Completed 28 PROCACT_SCHEMA objects in 1 seconds
15-NOV-17 11:48:34.439: W-13      Completed by worker 1 28 PROCACT_SCHEMA objects in 1 seconds
15-NOV-17 11:48:34.440: W-13 Processing object type DATABASE_EXPORT/SCHEMA/TABLE/TABLE
15-NOV-17 11:48:35.472: W-17 Startup took 70 seconds
15-NOV-17 11:48:35.596: W-18 Startup took 70 seconds
15-NOV-17 11:48:35.719: W-20 Startup took 70 seconds
15-NOV-17 11:48:35.841: W-19 Startup took 70 seconds
15-NOV-17 11:48:43.520: W-5      Completed 1714 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 1 39 TABLE objects in 2 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 2 113 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 3 85 TABLE objects in 6 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 4 111 TABLE objects in 6 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 5 25 TABLE objects in 1 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 6 113 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 7 113 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 8 111 TABLE objects in 6 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 9 89 TABLE objects in 5 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 10 74 TABLE objects in 4 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 11 113 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 12 113 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 13 34 TABLE objects in 2 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 14 111 TABLE objects in 6 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 15 108 TABLE objects in 7 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 16 90 TABLE objects in 4 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 17 82 TABLE objects in 4 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 18 40 TABLE objects in 3 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 19 97 TABLE objects in 6 seconds
15-NOV-17 11:48:43.520: W-5      Completed by worker 20 53 TABLE objects in 3 seconds
15-NOV-17 11:48:44.266: W-1 Processing object type DATABASE_EXPORT/SCHEMA/TABLE/TABLE_DATA</pre></p>
<p>Here, I was running an import with PARALLEL=20 and I can see exactly how many tables were processed by each worker. You see it is &#8216;TABLE&#8217; and not &#8216;TABLE_DATA&#8217; which is the proof that 12<i>c</i>R2 can import metadata in parallel.</p>
<p>I see no reason not to use LOGTIME=ALL METRICS=Y always and you will be happy to have this detail if something goes wrong.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-198850"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-10810">
				<div id="div-comment-10810" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/83723adbea64dcd0e8c2c4ba71269cf8?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">David Ridge</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10810">
			May 18, 2018 at 0 h 06 min</a>		</div>

		<p>Hi Franck,
Thanks for the article, it&#8217;s one of the few around explaining the Parallel Metadata creation and METRICS=Y.
I&#8217;ve found (and had accepted by Oracle Support) a serious bug in this area when large numbers of Sequences and/or Constraints exist. This bug means a schema with a large number of objects can no longer be exported/imported in parallel, it&#8217;s very frustrating.
It&#8217;s too involved to write-up here, please drop me email if you&#8217;re interested and I&#8217;ll send the re-producible Test Case.
Cheers
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-108111"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10810' onclick='return addComment.moveForm( "div-comment-10810", "10810", "respond", "19884" )' aria-label='Reply to David to David Ridge'>Reply to David</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
