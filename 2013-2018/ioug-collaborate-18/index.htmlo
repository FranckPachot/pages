This was first published on <a href=https://blog.dbi-services.com/ioug-collaborate-18>https://blog.dbi-services.com/ioug-collaborate-18</a> (2018-04-27)
								<h1 class="entry-title">IOUG Collaborate 18</h1>
		<div class="content-inner">
			
						
						
		   
			<p><a href="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/04/IMG_5325.jpg" rel="lightbox[22759]"><img src="../wp-insides/uploads/sites/2/2018/04/IMG_5325-300x225.jpg" alt="IMG_5325" width="300" height="225" class="alignleft size-medium wp-image-22762" /></a>
The IOUG Collaborate 18 is now done.
I presented 2 sessions there:
<span id="more-22759"></span></p>
<h3>From Transportable Tablespaces to Pluggable Databases</h3>
<p>The introduction comes from a 5 minutes talk at Oracle Open World 2016 in the &#8216;EOUC Database ACES Share Their Favorite Database Things&#8217;, on the history of having tablespaces self-contained (with a relative file number in 8.0 and locally managed tablespaces in 8.1). I&#8217;ve added a demo on a feature that is not well known &#8211; using RMAN to transport tablespaces without the need to have the source in read-only, available since 10g.  And I demoed all PDB movement features in 12cR2, 12cR2 and 18c: remote clone, refreshable clones, PDB switchover, Online relocation,&#8230;</p>
<p>A full article on the topic is available on Oracle Scene: <a href="http://viewer.zmags.com/publication/07098028#/07098028/8" target="_blank">http://viewer.zmags.com/publication/07098028#/07098028/8</a> and feel free to gove feedback here if you are using those features. Lot of interesting comments went after the session.</p>
<p><a href="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/04/IMG_5324.jpg" rel="lightbox[22759]"><img src="../wp-insides/uploads/sites/2/2018/04/IMG_5324-300x287.jpg" alt="IMG_5324" width="300" height="287" class="alignright size-medium wp-image-22767" /></a></p>
<h3>12.2 Multitenant New Security Features to Clarify DevOps and DBA role separation</h3>
<p>This session is basically a demo of lockdown profiles and resource manager settings at PDB level. With an introduction on DevOps because the goal of those features is to be able to lower the roundtrips between Dev and Ops by giving nearly full privileges on the PDB. Those features were developed by Oracle for their own managed cloud services: Exadata Express Cloud Service and Autonomous Data Warehouse. You are the administrator of your PDB there, but locked down to what cannot break the CDB, and limited to the resources you pay for.</p>
<p>I&#8217;ll give this session next Month in Dusseldorf at DOAG Datenbank: <a href="https://programm.doag.org/datenbank/2018/#/scheduledEvent/558645">https://programm.doag.org/datenbank/2018/#/scheduledEvent/558645</a>, so you still have the occasion to see how this Autonomous Data Warehouse Cloud service works from command line.</p>
<p>This is clearly an alternative to having Oracle Database on Docker, where containers have a clear separation between the user data and metadata (in the PDB) and the software distribution and data (in ORACLE_HOME, and in CDB$ROOT). But experience shows a slow adoption of multitenant, and developers are asking for Docker containers. But the separation is not so easy: it is clear that the user data must be in an external volume and the software (the Oracle Home &#8211; or at least the minimal part of it required to run the database and options). But a big part of the software (for example the dbms_&#8230; packages) is also in the database, in CDB$ROOT. Here again feel free to comment.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-227600" data-img="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/04/IMG_5325-300x225.jpg"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
