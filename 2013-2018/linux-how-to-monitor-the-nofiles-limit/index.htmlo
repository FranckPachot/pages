This was first published on <a href=https://blog.dbi-services.com/linux-how-to-monitor-the-nofiles-limit>https://blog.dbi-services.com/linux-how-to-monitor-the-nofiles-limit</a> (2014-06-18)
								<h1 class="entry-title">Linux: how to monitor the nofile limit</h1>
		<div class="content-inner">
			
						
						
		   
			<p>In a <a href="https://blog.dbi-services.com/linux-how-to-monitor-the-nproc-limit-1">previous post</a> I explained how to measure the number of processes that are generated when a fork() or clone() call checks the nproc limit. There is another limit in /etc/limits.conf &#8211; or in /etc/limits.d &#8211; that is displayed by &#8216;ulimit -n&#8217;. It&#8217;s the number of open files &#8211; &#8216;nofile&#8217; &#8211; and here again we need to know what kind of files are counted.</p>
<h3>nofile</h3>
<p>&#8216;nofile&#8217; is another limit that may not be easy to monitor, because if you just count the &#8216;lsof&#8217; output you will include a lot of lines which are not file descriptors. So how can we count the number of files descriptors in a process?</p>
<h3>lsof</h3>
<p>&#8216;lsof&#8217; is a utility that show all the open files. Let&#8217;s take an example:</p>
<p>I get the pid of my pmon process:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ ps -edf | grep pmon
oracle   10586     1  0 19:21 ?        00:00:02 ora_pmon_DEMO
oracle   15494 15290  0 22:12 pts/1    00:00:00 grep pmon
</pre>
<p>&nbsp;</p>
<p>And I list the open files for that process</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ lsof -p 10586
COMMAND     PID   USER   FD TYPE DEVICE  SIZE/OFF NAME
ora_pmon_ 10586 oracle  cwd  DIR  252,0      4096 /app/oracle/product/12.1/dbs
ora_pmon_ 10586 oracle  rtd  DIR  252,0      4096 /
ora_pmon_ 10586 oracle  txt  REG  252,0 322308753 /app/oracle/product/12.1/bin/oracle
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150175744_0
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_0
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_1
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_2
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_3
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_4
ora_pmon_ 10586 oracle  mem  REG   0,17   4194304 /dev/shm/ora_DEMO_150208513_5
...
ora_pmon_ 10586 oracle  mem  REG  252,0   1135194 /app/oracle/product/12.1/lib/libskgxp12.so
ora_pmon_ 10586 oracle  mem  REG  252,0   6776936 /app/oracle/product/12.1/lib/libcell12.so
ora_pmon_ 10586 oracle  mem  REG  252,0     14597 /app/oracle/product/12.1/lib/libodmd12.so
ora_pmon_ 10586 oracle    0r CHR    1,3       0t0 /dev/null
ora_pmon_ 10586 oracle    1w CHR    1,3       0t0 /dev/null
ora_pmon_ 10586 oracle    2w CHR    1,3       0t0 /dev/null
ora_pmon_ 10586 oracle    3r CHR    1,3       0t0 /dev/null
ora_pmon_ 10586 oracle    4r REG  252,0   1233408 /app/oracle/product/12.1/rdbms/mesg/oraus.msb
ora_pmon_ 10586 oracle    5r DIR    0,3         0 /proc/10586/fd
ora_pmon_ 10586 oracle    6u REG  252,0      1544 /app/oracle/product/12.1/dbs/hc_DEMO.dat
ora_pmon_ 10586 oracle    7u REG  252,0        24 /app/oracle/product/12.1/dbs/lkDEMO_SITE1
ora_pmon_ 10586 oracle    8r REG  252,0   1233408 /app/oracle/product/12.1/rdbms/mesg/oraus.msb

</pre>
<p>I&#8217;ve removed hundreds of lines with FD=mem and size=4M. I&#8217;m in AMM with memory_target=800M and SGA is implemented in /dev/shm granules. With lsof, we see all of them. And with a large memory_target we can have thousands of them (even if granule becomes 16M when memory_target is larger than 1GB). But don&#8217;t worry, they don&#8217;t count in the &#8216;nofile&#8217; limit. Only &#8216;real&#8217; file descriptors are counted &#8211; those with a numeric FD.</p>
<p>So, if you want to know the processes that are near the limit, you can use the following:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ lsof | awk '$4 ~ /[0-9]+[rwu -].*/{p[$1"t"$2"t"$3]=p[$1"t"$2"t"$3]+1}END{for (i in p) print p[i],i}' | sort -n | tail
15 ora_dmon_    10634   oracle
16 ora_dbw0_    10608   oracle
16 ora_mmon_    10626   oracle
16 ora_rsm0_    10722   oracle
16 tnslsnr      9785    oracle
17 automount    1482    root
17 dbus-daem    1363    dbus
20 rpc.mount    1525    root
21 ora_lgwr_    10610   oracle
89 master       1811    root
</pre>
<p>&nbsp;</p>
<p>The idea is to filter the output of lsof and use awk to keep only the numeric file descriptors, and aggregate per process. Then, we sort them and show the highest counts. Here the Postfix master process has 89 files open. Then log writer follows.</p>
<p>You can get the same information from /proc filesystem where files handles are in /proc//fd:</p>
<pre>for p in /proc/[0-9]* ; do echo $(ls $p/fd | wc -l) $(cat $p/cmdline) ; done | sort -n | tail
</pre>
<pre>15 ora_dmon_DEMO
16 ora_dbw0_DEMO
16 ora_mmon_DEMO
16 ora_rsm0_DEMO
16 /app/oracle/product/12.1/bin/tnslsnrLISTENER-inherit
17 automount--pid-file/var/run/autofs.pid
17 dbus-daemon--system
20 rpc.mountd
21 ora_lgwr_DEMO
89 /usr/libexec/postfix/master</pre>
<p>&nbsp;</p>
<p>Same result, much quicker and more information about the process. This is the way I prefer, but remember that if you want to see all processes, you should be logged as root.</p>
<h3>The proof</h3>
<p>As I did for nproc, I have written a small C program that open files (passed as arguments) for a few seconds, so that I&#8217;m sure I&#8217;m counting the right things.</p>
<p>And I encourage to do the same on a test system and let me know if your result differs. Here is the source:Â <a title="title" href="http://blog.dbi-services.com/images/easyblog_images/139/openfiles.zip" target="_self">openfiles.zip</a></p>
<p>First, I set my nofile limit to only 10</p>
<pre>ulimit -n 10</pre>
<p>&nbsp;</p>
<p>Then, let&#8217;s open 7 files. In addition with stdin, stdout and stderr we will have 10 file handles:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ ./openfiles myfile1.tmp myfile2.tmp myfile3.tmp myfile4.tmp myfile5.tmp myfile6.tmp myfile7.tmp &amp;
open file 1 of 7 getrlimit nofile: soft=10 hard=10 myfile1.tmp
open file 2 of 7 getrlimit nofile: soft=10 hard=10 myfile2.tmp
open file 3 of 7 getrlimit nofile: soft=10 hard=10 myfile3.tmp
open file 4 of 7 getrlimit nofile: soft=10 hard=10 myfile4.tmp
open file 5 of 7 getrlimit nofile: soft=10 hard=10 myfile5.tmp
open file 6 of 7 getrlimit nofile: soft=10 hard=10 myfile6.tmp
open file 7 of 7 getrlimit nofile: soft=10 hard=10 myfile7.tmp
</pre>
<p>&nbsp;</p>
<p>I was able to open those 7 files. Then I check lsof:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ lsof | grep openfiles
openfiles 21853    oracle  cwd       DIR  0,24    380928    9320 /tmp/ulimit
openfiles 21853    oracle  rtd       DIR 252,0      4096       2 /
openfiles 21853    oracle  txt       REG  0,24      7630    9494 /tmp/ulimit/openfiles
openfiles 21853    oracle  mem       REG 252,0    156928 1579400 /lib64/ld-2.12.so
openfiles 21853    oracle  mem       REG 252,0   1926800 1579401 /lib64/libc-2.12.so
openfiles 21853    oracle    0u      CHR 136,1       0t0       4 /dev/pts/1
openfiles 21853    oracle    1u      CHR 136,1       0t0       4 /dev/pts/1
openfiles 21853    oracle    2u      CHR 136,1       0t0       4 /dev/pts/1
openfiles 21853    oracle    3r      REG  0,24         0    9487 /tmp/myfile1.tmp
openfiles 21853    oracle    4r      REG  0,24         0    9488 /tmp/myfile2.tmp
openfiles 21853    oracle    5r      REG  0,24         0    9489 /tmp/myfile3.tmp
openfiles 21853    oracle    6r      REG  0,24         0    9490 /tmp/myfile4.tmp
openfiles 21853    oracle    7r      REG  0,24         0    9491 /tmp/myfile5.tmp
openfiles 21853    oracle    8r      REG  0,24         0    9492 /tmp/myfile6.tmp
openfiles 21853    oracle    9r      REG  0,24         0    9493 /tmp/myfile7.tmp
</pre>
<p>&nbsp;</p>
<p>We see our 10 file handles and this proves that only numeric FD are counted when checking the nofile limit of 10. You see stdin, stdout, stderr as FD 0,1,2 and then my 7 files opened in read only.</p>
<p>Let&#8217;s try to open one more file:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">[oracle@VM211 ulimit]$ ./openfiles myfile1.tmp myfile2.tmp myfile3.tmp myfile4.tmp myfile5.tmp myfile6.tmp myfile7.tmp myfile8.tmp
open file 1 of 8 getrlimit nofile: soft=10 hard=10 myfile1.tmp
open file 2 of 8 getrlimit nofile: soft=10 hard=10 myfile2.tmp
open file 3 of 8 getrlimit nofile: soft=10 hard=10 myfile3.tmp
open file 4 of 8 getrlimit nofile: soft=10 hard=10 myfile4.tmp
open file 5 of 8 getrlimit nofile: soft=10 hard=10 myfile5.tmp
open file 6 of 8 getrlimit nofile: soft=10 hard=10 myfile6.tmp
open file 7 of 8 getrlimit nofile: soft=10 hard=10 myfile7.tmp
open file 8 of 8 getrlimit nofile: soft=10 hard=10 myfile8.tmp
fopen() number 8 failed with errno=24
</pre>
<p>Here the limit is reached and the open() call returns error 24 (ENFILE) because we reached the nofile=10.</p>
<h3>Threads</h3>
<p>When counting the processes for the nproc limit, we have seen that threads must be counted as processes. For the nofile limit we don&#8217;t need to detail the threads because all threads share the file descriptor table.</p>
<h3>Recommended values</h3>
<p>Currently this is what is set on Oracle linux 6 for 11gR2 (in /etc/security/limits.conf):</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">oracle   soft   nofile    1024
oracle   hard   nofile    65536
</pre>
<p>&nbsp;</p>
<p>For 12c, these are set in /etc/security/limits.d/oracle-rdbms-server-12cR1-preinstall.conf which overrides /etc/security/limits.conf:</p>
<pre class="brush: actionscript3; gutter: true; first-line: 1">oracle soft nofile 1024
oracle hard nofile 65536
</pre>
<p>&nbsp;</p>
<p>Do you think it&#8217;s a bit low? Just for information, here is what is set in the ODA X4-2:</p>
<pre>oracle soft nofile 131072
</pre>
<p>In any case, it is a good idea to check if you are reaching the limit and the above scripts on lsof or /proc should help for that.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-4530"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-5782">
				<div id="div-comment-5782" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/66cfafd49be061b371407324375a6e3c?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Michael Kirchner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-5782">
			December 15, 2016 at 15 h 19 min</a>		</div>

		<p>Vielen Dank!
Diese ErkÃ¤rung hat mir sehr geholfen.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-57831"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-5782' onclick='return addComment.moveForm( "div-comment-5782", "5782", "respond", "452" )' aria-label='Reply to Michael to Michael Kirchner'>Reply to Michael</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
