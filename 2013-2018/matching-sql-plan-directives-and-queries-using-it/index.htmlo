This was first published on <a href=https://blog.dbi-services.com/matching-sql-plan-directives-and-queries-using-it>https://blog.dbi-services.com/matching-sql-plan-directives-and-queries-using-it</a> (2015-05-18)
								<h1 class="entry-title">Matching SQL Plan Directives and queries using it</h1>
		<div class="content-inner">
			
						
						
		   
			<p>This is another blog post I&#8217;m writing while reviewing the presentation I&#8217;m doing next week for<a href="http://www.dbi-services.com/index.php/blog/entry/matching-sql-plan-directives-and-extended-stats-">SOUG</a> and next month for <a href="http://www.doag.org/events/konferenzen/doag-2015-datenbank.html">DOAG</a>. You have SQL Plan Directives used by several queries that have same kind of predicates. And queries that can use several SPD. Can you match them?</p>
<p>When a query uses a SPD (meaning that the SPD in usable state &#8211; NEW, MISSING_STATS or PERMANENT internal state) the execution plan show it as:</p>
<pre class="brush: sql; gutter: true; first-line: 1">Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - 1 Sql Plan Directive used for this statement
</pre>
<p>but you don&#8217;t have information about which directive(s).</p>
<p>Unfortunately that information is not stored in V$SQL_PLAN information. There are two ways to get information:</p>
<ul>
<li>Parse it and trace it with set events &#8216;trace [SQL_Plan_Directive.*]&#8217; but that&#8217;s for another post.</li>
<li>Do an EXPLAIN PLAN and info is in PLAN_TABLE.OTHER_XML</li>
</ul>
<h3>example</h3>
<p>Here are the SQL Plan Directives I have:</p>
<pre class="brush: sql; gutter: true; first-line: 1">SQL&gt; select directive_id,type,state,reason,notes,created,last_modified,last_used from dba_sql_plan_d
irectives where directive_id in( select directive_id from dba_sql_plan_dir_objects where owner='DEMO
' ) order by created;

           DIRECTIVE_ID TYPE             STATE      REASON
----------------------- ---------------- ---------- ------------------------------------
NOTES                                                                                      CREATED
------------------------------------------------------------------------------------------ --------
LAST_MOD LAST_USE
-------- --------
   11092019653200552215 DYNAMIC_SAMPLING SUPERSEDED SINGLE TABLE CARDINALITY MISESTIMATE
.spd_note.                                                                                 21:21:58
  .internal_state.HAS_STATS./internal_state.
  .redundant.NO./redundant.
  .spd_text.{EC(DEMO.DEMO_TABLE)[A, B, C, D]}./spd_text.
./spd_note.
21:30:09 21:30:09

    9695481911885124390 DYNAMIC_SAMPLING USABLE     SINGLE TABLE CARDINALITY MISESTIMATE
.spd_note.                                                                                 21:35:45
  .internal_state.NEW./internal_state.
  .redundant.NO./redundant.
  .spd_text.{E(DEMO.DEMO_TABLE)[A, B, C, D]}./spd_text.
./spd_note.
</pre>
<p><i>(I changed the xml tag because our current blog platform is a bit creative with them&#8230; fortunately we are migrating soon to wordpress)</i></p>
<h3>+metrics</h3>
<p>So in order to have more information, you have to re-parse the statement with EXPLAIN PLAN FOR&#8230; and show it with DBMS_XPLAN.DISPLAY witht he format &#8216;+METRICS&#8217;</p>
<pre class="brush: sql; gutter: true; first-line: 1">SQL&gt; explain plan for select * from DEMO_TABLE where a+b=c+d;

Explained.
</pre>
<p>This query will use the {E(DEMO.DEMO_TABLE)[A, B, C, D]} directive but not the {EC(DEMO.DEMO_TABLE)[A, B, C, D]} one because it&#8217;s not simple columns predicates.
Let&#8217;s get the execution plan from PLAN_TABLE with the +METRICS format:</p>
<pre class="brush: sql; gutter: true; first-line: 1">SQL&gt; select * from table(dbms_xplan.display(null,null,'+metrics'));

PLAN_TABLE_OUTPUT
----------------------------------------------------------------------------------------------------
Plan hash value: 4063024151

--------------------------------------------------------------------------------
| Id  | Operation         | Name       | Rows  | Bytes | Cost (%CPU)| Time     |
--------------------------------------------------------------------------------
|   0 | SELECT STATEMENT  |            |  1000 | 12000 |     3   (0)| 00:00:01 |
|*  1 |  TABLE ACCESS FULL| DEMO_TABLE |  1000 | 12000 |     3   (0)| 00:00:01 |
--------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - filter("A"+"B"="C"+"D")

Sql Plan Directive information:
-------------------------------

  Used directive ids:
    9695481911885124390

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - 1 Sql Plan Directive used for this statement

</pre>
<p>As you can see, in addition to the number of SPD used you have the DIRECTIVE ID.</p>
<h3>Conclusion</h3>
<p>It&#8217;s not easy to match all queries that can use a SQL Plan Directive, but you can do it on the other way: do an explain plan for each query you suspect and check the notes. If you are ready to parse a lot of queries, you can also do it automatically.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-20680"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
