This was first published on <a href=https://blog.dbi-services.com/misleading-wait-event-names-clarified-in-vevent_name>https://blog.dbi-services.com/misleading-wait-event-names-clarified-in-vevent_name</a> (2017-03-06)
								<h1 class="entry-title">Misleading wait event names clarified in V$EVENT_NAME</h1>
		<div class="content-inner">
			
						
						
		   
			<p>The oracle wait event names were originally implemented for the oracle rdbms developers and are now use by the database users to troubleshoot performance issues. The consequence is that the name may be misleading because they have a meaning from the internal point of view. Here is some clarification about them.
<span id="more-13955"></span>
In 12<em>c</em> the clarification is easy because we have a new DISPLAY_NAME column in the V$EVENT_NAME view:</p>
<p><pre>
SQL&gt; select wait_class,name, display_name from v$event_name where display_name != name order by 1,2;
WAIT_CLASS      NAME                                 DISPLAY_NAME
--------------  -----------------------------------  ----------------------------------------------
Administrative  concurrent I/O completion            online move datafile IO completion
Administrative  datafile copy range completion       online move datafile copy range completion
Administrative  wait for possible quiesce finish     quiesce database completion
Commit          log file sync                        commit: log file sync
Configuration   log buffer space                     log buffer full - LGWR bottleneck
Idle            LGWR real time apply sync            standby apply advance notification
Other           DFS db file lock                     quiesce for datafile offline
Other           Image redo gen delay                 redo resource management
Other           datafile move cleanup during resize  online move datafile resize cleanup
System I/O      control file sequential read         control file read
System I/O      control file single write            control file write
System I/O      db file parallel write               db list of blocks write
System I/O      log file parallel write              log file redo write
System I/O      log file sequential read             log file multiblock read
System I/O      log file single write                log file header write
User I/O        db file parallel read                db list of blocks read
User I/O        db file scattered read               db multiblock read
User I/O        db file sequential read              db single block read
User I/O        db file single write                 db single block write                       </pre></p>
<p>For long we know the misleading &#8216;db file sequential read&#8217; which is what we call &#8216;random reads&#8217; from storage point of view and &#8216;db file scattered read&#8217; that is what we call &#8216;sequential reads&#8217; from storage point of view. The DISPLAY_NAME clarifies everything: single block reads vs. multiblock reads.</p>
<p>&#8216;db file parallel read&#8217; is a batch of random reads, used by prefetching for example, which reads multiple blocks but non contiguous.
&#8216;db file parallel write&#8217; is similar, for DBWR to write a batch of blocks. The DISPLAY_NAME clarifies everything: &#8216;db list of blocks&#8217;.</p>
<p>&#8216;log file parallel write&#8217; is &#8216;parallel&#8217; only because you can have multiplexed files. DISPLAY_NAME is less misleading with &#8216;log file redo write&#8217;.
The &#8216;log buffer space&#8217; has a DISPLAY_NAME that is more focused on the cause: &#8216;log buffer full &#8211; LGWR bottleneck&#8217;</p>
<p>You can look at the others where DISPLAY_NAME is very clear about the operation: &#8216;online move&#8217; for some operations on files, &#8216;commit&#8217; for the well know log file sync&#8230; </p>
<p>Of course they are also described in the Database Reference documentation.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-139560"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 2 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1 parent" id="comment-7236">
				<div id="div-comment-7236" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/93e1432e6c88032b3c661da30d669266?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='http://community.oracle.com/blogs/dearDBA/' rel='external nofollow' class='url'>Frank Dernoncourt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7236">
			March 30, 2017 at 14 h 39 min</a>		</div>

		<p>In your table I see
System I/O      log file sequential read             log file multiblock read
AND
User I/O        db file sequential read              db single block read
is it a mistake or do &#8220;log file sequential read &#8221; do multiblock read while &#8220;db file sequential read&#8221; do single-block reads?
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-72371"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7236' onclick='return addComment.moveForm( "div-comment-7236", "7236", "respond", "13955" )' aria-label='Reply to Frank to Frank Dernoncourt'>Reply to Frank</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor odd alt depth-2" id="comment-7237">
				<div id="div-comment-7237" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7237">
			March 30, 2017 at 15 h 36 min</a>		</div>

		<p>Hi Frank,
Good remark!  And misleading name&#8230;
Looking at the <a href="https://docs.oracle.com/database/121/REFRN/GUID-5A7EDA90-2585-4E0E-8F9E-1E8826CCDB5A.htm#REFRN00578" rel="nofollow">doc</a> this event is for reading from redo logs and it has a &#8216;blocks&#8217; parameter. So this is multi block read. Sequential here is from disk side point of view. For &#8216;db file sequential read&#8217; the sequential is from the database side point of view (read block one after the other).
Good that we have a display name, and thanks for the heads up.
Regards,
Franck.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-72381"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7237' onclick='return addComment.moveForm( "div-comment-7237", "7237", "respond", "13955" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
