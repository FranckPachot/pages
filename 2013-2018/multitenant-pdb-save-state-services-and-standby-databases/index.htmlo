This was first published on <a href=https://blog.dbi-services.com/multitenant-pdb-save-state-services-and-standby-databases>https://blog.dbi-services.com/multitenant-pdb-save-state-services-and-standby-databases</a> (2018-02-05)
								<h1 class="entry-title">Multitenant, PDB, &#8216;save state&#8217;, services and standby databases</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Creating &#8211; and using &#8211; your own services has always been the recommendation. You can connect to a database without a service name, though the instance SID, but this is not what you should do. Each database registers its db_unique_name as a service, and you can use it to connect, but it is always better to create your own application service(s). In multitenant, each PDB registers its name as a service, but the recommendation is still there: create your own services, and connect with your services.
I&#8217;ll show in this blog post what happens if you use the PDB name as a service and the standby database registers to the same listener as the primary database. Of course, you can workaround the non-unique service names by registering to different listeners. But this just hides the problem. The main reason to use services is to be independent from physical attributes, so being forced to assign a specific TCP/IP port is not better than using an instance SID.
<span id="more-20966"></span>
I have the primary (CDB1) and standby (CDB2) databases registered to the default local listener:
<pre>
LSNRCTL for Linux: Version 12.2.0.1.0 - Production on 03-FEB-2018 23:11:23

Copyright (c) 1991, 2016, Oracle.  All rights reserved.

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR for Linux: Version 12.2.0.1.0 - Production
Start Date                02-FEB-2018 09:32:30
Uptime                    1 days 13 hr. 38 min. 52 sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Listener Parameter File   /u01/app/oracle/product/12.2.0/dbhome_1/network/admin/listener.ora
Listener Log File         /u01/app/oracle/diag/tnslsnr/VM122/listener/alert/log.xml
Listening Endpoints Summary...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=VM122)(PORT=5501))(Presentation=HTTP)(Session=RAW))
Services Summary...
Service "627f7512a0452fd4e0537a38a8c055c0" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "CDB1" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
Service "CDB1XDB" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
Service "CDB1_CFG" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "CDB1_DGB" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
Service "CDB1_DGMGRL" has 1 instance(s).
  Instance "CDB1", status UNKNOWN, has 1 handler(s) for this service...
Service "CDB2" has 1 instance(s).
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "CDB2XDB" has 1 instance(s).
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "CDB2_DGB" has 1 instance(s).
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "CDB2_DGMGRL" has 1 instance(s).
  Instance "CDB2", status UNKNOWN, has 1 handler(s) for this service...
Service "pdb1" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
The command completed successfully
</pre></p>
<p>Look at service &#8216;pdb1&#8242;, which is the name for my PDB. Connecting to //localhost:1521/PDB1 can connect you randomly to CDB1 (the primary database) or CDB2 (the standby database). </p>
<p>Here is an example, connecting several times to the PDB1 service:
<pre>
[oracle@VM122 ~]$ for i in {1..5} ; do sqlplus -L -s sys/oracle@//localhost/pdb1 as sysdba &lt;&lt;&lt; &#039;select name,open_mode,instance_name from v$instance , v$database;&#039;; done

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ ONLY WITH APPLY CDB2

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ ONLY WITH APPLY CDB2

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1
</pre></p>
<p>I was connected at random to CDB1 or CDB2.</p>
<p>As an administrator, you know the instance names and you can connect to the one you want with: //localhost:1521/PDB1/CDB1 or //localhost:1521/PDB1/CDB2:
<pre>
[oracle@VM122 ~]$ for i in {1..3} ; do sqlplus -L -s sys/oracle@//localhost/pdb1/CDB1 as sysdba &lt;&lt;&lt; &#039;select name,open_mode,instance_name from v$instance , v$database;&#039;; done

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ WRITE           CDB1

[oracle@VM122 ~]$ for i in {1..3} ; do sqlplus -L -s sys/oracle@//localhost/pdb1/CDB2 as sysdba &lt;&lt;&lt; &#039;select name,open_mode,instance_name from v$instance , v$database;&#039;; done

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ ONLY WITH APPLY CDB2

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ ONLY WITH APPLY CDB2

NAME      OPEN_MODE            INSTANCE_NAME
--------- -------------------- ----------------
CDB1      READ ONLY WITH APPLY CDB2
</pre></p>
<p>Of course this is not what you want. And we must not start or stop the default services. For the application, the best you can do is to create your service. And if you want to be able to connect to the Active Data Guard standby, which is opened in read-only, then you can create a &#8216;read-write&#8217; service and a &#8216;read-only&#8217; service that you start depending on the role.</p>
<h3>Create and Start a read-write service on the primary</h3>
<p>This example supposes that you have only Oracle Database software installed. If you are in RAC, with the resources managed by Grid Infrastructure, or simply with Oracle Restart, creating a service is easy with srvctl, and you add it to a PDB with &#8216;-pdb&#8217; and also with a role to start it automatically in the primary or in the standby. But without it, you use dbms_service:
<pre>
SQL&gt; connect /@CDB1 as sysdba
Connected.

SQL&gt; alter session set container=pdb1;
Session altered.

SQL&gt; exec dbms_service.create_service(service_name=&gt;'pdb1_RW',network_name=&gt;'pdb1_RW');
PL/SQL procedure successfully completed.

SQL&gt; exec dbms_service.start_service(service_name=&gt;'pdb1_RW');
PL/SQL procedure successfully completed.

SQL&gt; alter session set container=cdb$root;
Session altered.
</pre></p>
<p>The service is created, stored in SERVICE$ visible with DBA_SERVICES:
<pre>
SQL&gt; select name,name_hash,network_name,creation_date,pdb from cdb_services order by con_id,service_id;
NAME         NAME_HASH NETWORK_NAME   CREATION_DATE   PDB
----         --------- ------------   -------------   ---
pdb1_RW     3128030313 pdb1_RW        03-FEB-18       PDB1
pdb1        1888881990 pdb1           11-JAN-18       PDB1
</pre></p>
<h3>Save state</h3>
<p>I have created and started the PDB1_RW service. However, if I restart the database, the service will not start automatically. How do you ensure that the PDB1 pluggable database starts automatically when you open the CDB? You &#8216;save state&#8217; when it is opened. It is the same for the services you create. You need to &#8216;save state&#8217; when they are opened.</p>
<p><pre>
SQL&gt; alter pluggable database all save state;
Pluggable database ALL altered.
</pre></p>
<p>The information is stored in PDB_SVC_STATE$, and I&#8217;m not aware of a dictionary view on it:
<pre>
SQL&gt; select name,name_hash,network_name,creation_date,con_id from v$active_services order by con_id,service_id;

NAME         NAME_HASH NETWORK_NAME   CREATION_DATE     CON_ID
----         --------- ------------   -------------     ------
pdb1_RW     3128030313 pdb1_RW        03-FEB-18              4
pdb1        1888881990 pdb1           11-JAN-18              4

SQL&gt; select * from containers(pdb_svc_state$);

  INST_ID INST_NAME   PDB_GUID                                PDB_UID     SVC_HASH   SPARE1   SPARE2   SPARE3   SPARE4 SPARE5   SPARE6     CON_ID
  ------- ---------   --------                                -------     --------   ------   ------   ------   ------ ------   ------     ------
        1 CDB1        627F7512A0452FD4E0537A38A8C055C0     2872139986   3128030313                                                              1
</pre></p>
<p>The name is not in this table, you have to join with v$services using(name_hash):
<pre>
SQL&gt; select name,name_hash,network_name,creation_date,con_id from v$active_services order by con_id,service_id;

NAME                NAME_HASH NETWORK_NAME   CREATION_DATE     CON_ID
----                --------- ------------   -------------     ------
SYS$BACKGROUND      165959219                26-JAN-17              1
SYS$USERS          3427055676                26-JAN-17              1
CDB1_CFG           1053205690 CDB1_CFG       24-JAN-18              1
CDB1_DGB            184049617 CDB1_DGB       24-JAN-18              1
CDB1XDB            1202503288 CDB1XDB        11-JAN-18              1
CDB1               1837598021 CDB1           11-JAN-18              1
pdb1               1888881990 pdb1           11-JAN-18              4
pdb1_RW            3128030313 pdb1_RW        03-FEB-18              4
</pre></p>
<p>So, in addition to storing the PDB state in PDBSTATE$, visible with dba_pdb_saved_states, the service state is also stored. Note that they are at different level. PDBSTATE$ is a data link: stored on CDB$ROOT only (because the data must be read before opening the PDB) but PDB_SVC_STATE$ is a local table in the PDB as the services can be started only when the PDB is opened.</p>
<p>This new service is immediately registered on CDB1:
<pre>
Service "pdb1" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "pdb1_RW" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
The command completed successfully
</pre></p>
<h3>Create and Start a read-only service for the standby</h3>
<p>If you try to do the same on the standby for a PDB1_RO service, you cannot because service information has to be stored in the dictionary:
<pre>
SQL&gt; exec dbms_service.create_service(service_name=&gt;'pdb1_RO',network_name=&gt;'pdb1_RO');

Error starting at line : 56 File @ /media/sf_share/122/blogs/pdb_svc_standby.sql
In command -
BEGIN dbms_service.create_service(service_name=&gt;'pdb1_RO',network_name=&gt;'pdb1_RO'); END;
Error report -
ORA-16000: database or pluggable database open for read-only access
</pre></p>
<p>So, the read-only service has to be created on the primary:
<pre>
SQL&gt; connect /@CDB1 as sysdba
Connected.
SQL&gt; alter session set container=pdb1;
Session altered.

SQL&gt; exec dbms_service.create_service(service_name=&gt;'pdb1_RO',network_name=&gt;'pdb1_RO');

SQL&gt; select name,name_hash,network_name,creation_date,pdb from cdb_services order by con_id,service_id;
NAME         NAME_HASH NETWORK_NAME   CREATION_DATE   PDB
----         --------- ------------   -------------   ---
pdb1_RW     3128030313 pdb1_RW        03-FEB-18       PDB1
pdb1_RO     1562179816 pdb1_RO        03-FEB-18       PDB1
pdb1        1888881990 pdb1           11-JAN-18       PDB1
</pre></p>
<p>The SERVICE$ dictionary table is replicated to the standby, so I can I can start it on the standby:
<pre>
SQL&gt; connect /@CDB2 as sysdba
Connected.
SQL&gt; alter session set container=pdb1;
Session altered.

SQL&gt; exec dbms_service.start_service(service_name=&gt;'pdb1_RO');
PL/SQL procedure successfully completed.
</pre></p>
<p>Here is what is registered to the listener:
<pre>
Service "pdb1" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "pdb1_RO" has 1 instance(s).
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "pdb1_RW" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
The command completed successfully
</pre></p>
<p>Now, the PDB_RO connects to the standby and PDB_RW to the primary. Perfect.</p>
<h3>No &#8216;save state&#8217; on the standby</h3>
<p>At this point, you would like to have the PDB_RO started when PDB1 is opened on the standby, but &#8216;save state&#8217; is impossible on a read-only database:
<pre>
SQL&gt; alter session set container=cdb$root;
Session altered.

SQL&gt; alter pluggable database all save state;

Error starting at line : 84 File @ /media/sf_share/122/blogs/pdb_svc_standby.sql
In command -
alter pluggable database all save state
Error report -
ORA-16000: database or pluggable database open for read-only access
</pre></p>
<p>You can&#8217;t manage the state (open the PDB, start the services) in the standby database.</p>
<h3>The primary &#8216;save state&#8217; is replicated in standby</h3>
<p>For the moment, everything is ok with my services:
<pre>
Service "pdb1_RO" has 1 instance(s).
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "pdb1_RW" has 1 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
</pre></p>
<p>If I restart the primary CDB1, everything is ok again because I saved the state of the PDB and the service. But what happens when the standby CDB2 restarts?</p>
<p><pre>
SQL&gt; connect /@CDB2 as sysdba
Connected.
SQL&gt; startup force;
...
SQL&gt; show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         4 PDB1                           MOUNTED
</pre></p>
<p>The PDB is not opened: the &#8216;saved state&#8217; for PDB is not read in the standby.
However, when I open the PDB, it seems that the &#8216;saved state&#8217; for service is applied, and this one is replicated from the primary:
<pre>
SQL&gt; alter pluggable database PDB1 open;
Pluggable database altered.
SQL&gt; host lsnrctl status
...
Service "pdb1" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
Service "pdb1_RW" has 2 instance(s).
  Instance "CDB1", status READY, has 1 handler(s) for this service...
  Instance "CDB2", status READY, has 1 handler(s) for this service...
The command completed successfully
</pre></p>
<p>My PDB1_RW is registered for both, connections will connect at random to the primary or the standby, and then the transactions will fail half of the times. It will be the same in case of switchover. This is not correct. </p>
<h3>Save state instances=()</h3>
<p>What I would like is the possibility to save state for a specific DB_UNIQUE_NAME, like with pluggable &#8216;spfile&#8217; parameters. But this is not possible. What is possible is to mention an instance but you can use it only for the primary instance where you save the state (or you get ORA-65110: Invalid instance name specified) and anyway, this will not be correct after a switchover.</p>
<h3>So what?</h3>
<p>Be careful, with services and ensure that the services used by the application are registered only for the correct instance. Be sure that this persists when the instances are restarted. For this you must link a service name to a database role. This cannot be done correctly with &#8216;save state&#8217;. You can use startup triggers, or better, Grid Infrastructure service resources.</p>
<p>Do not connect to the default service with the PDB name, you cannot remove it and cannot stop it, so you may have the same name for different instances in a Data Guard configuration. You can register the standby instances to different local listeners, to avoid the confusion, but you may still register to the same SCAN listener. </p>
<p>Create your own services, start them depending on the database role, and do not use &#8216;save state&#8217; in a physical standby configuration.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-209670"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
