This was first published on <a href=https://blog.dbi-services.com/observing-dml-restarts-caused-by-invalidations>https://blog.dbi-services.com/observing-dml-restarts-caused-by-invalidations</a> (2016-11-24)
								<h1 class="entry-title">Observing DML restarts caused by invalidations</h1>
		<div class="content-inner">
			
						
						
		   
			<p>Usually, cursor invalidations do not interrupt the current execution of the cursor. You can even drop a table while a query on it is running and the query may end successfully. However some invalidations will throw internal errors that are catch and the cursor execution restarts transparently. I&#8217;ve reproduced one here to show the symptoms: it&#8217;s a different EXEC_SQL_ID so the restarts are not accounted within the same SQL Monitoring.
<span id="more-13028"></span>
I had that question because I encountered a SQL Monitoring report where the &#8216;executions&#8217; count of the INSERT operation was more than one. I wondered if it can be a case of DML restart or if DML restart should be accounted in different EXEC_SQL_ID. I got the quick answer from a very reliable source:</p>
<blockquote class="twitter-tweet" data-width="550"><p lang="und" dir="ltr"><a href="https://twitter.com/FranckPachot">@FranckPachot</a> Yep!</p>
<p>&mdash; Stefan Koehler (@OracleSK) <a href="https://twitter.com/OracleSK/status/800693437876027392">November 21, 2016</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>However for my better understanding, I&#8217;m now reproducing a case of DML restart to show the symptoms on V$SQL and SQL Monitor.</p>
<p>I need a table with some rows:
<pre>
SQL&gt; create table DEMO as select rownum n from xmltable('1 to 3');
Table created.
</pre>
Initially my problem was with an insert into a GTT but now I&#8217;m reproducing the case with a partitioned table:
<pre>
SQL&gt; create table DEMOGTT (n number) partition by hash(n);
Table created.
</pre>
For internal reasons, when a cursor is invalidated after it has acquired a lock on a partition, a DML restart occurs. If you have a doubt, &#8220;oerr ora 14403&#8243; explains that.</p>
<p>The easiest way to invalidate while the cursor is running is to call a function that does it for each row. And as you will see that it can be restarted to infinity I set a timeout timestamp after 30 seconds.</p>
<p><pre>
SQL&gt; column limit new_value limit
SQL&gt; select to_char(sysdate+30/24/60/60,'yyyymmddhh24miss') limit from dual;

LIMIT
--------------
20161124212154

SQL&gt; create function DEMOSLOW(n number) return number as
  2    pragma autonomous_transaction;
  3  begin
  4   if sysdate &gt; to_date('&amp;limit','yyyymmddhh24miss')
  5   then
  6    dbms_stats.gather_table_stats(user,'DEMOGTT',no_invalidate=&gt;false);
  7   end if;
  8   return n;
  9  end;
 10  /
old   4:  if sysdate &lt; to_date(&#039;&amp;limit&#039;,&#039;yyyymmddhh24miss&#039;)
new   4:  if sysdate &lt; to_date(&#039;20161124212154&#039;,&#039;yyyymmddhh24miss&#039;)

Function created.
</pre></p>
<p>Time to run the insert, calling the function for each row:
<pre>
SQL&gt; alter session set statistics_level=all;
Session altered.

SQL&gt; set timing on time on
21:21:24 SQL&gt; insert /*+ monitor */ into DEMOGTT select n from DEMO where n=DEMOSLOW(n);
3 rows created.

Elapsed: 00:00:29.30
21:21:54 SQL&gt;
</pre></p>
<p>This has taken 30 seconds. Without the timeout, it never stops.</p>
<p>Execution plan for last run shows only one &#8216;Start':
<pre>
21:21:54 SQL&gt; select * from table(dbms_xplan.display_cursor('','','allstats last'));

PLAN_TABLE_OUTPUT
------------------------------------------------------------------------------------------------------------------------
SQL_ID  3fk1hyq9vnuzx, child number 0
-------------------------------------
insert /*+ monitor */ into DEMOGTT select n from DEMO where
n=DEMOSLOW(n)

Plan hash value: 4000794843

----------------------------------------------------------------------------------------------
| Id  | Operation                | Name    | Starts | E-Rows | A-Rows |   A-Time   | Buffers |
----------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT         |         |      1 |        |      0 |00:00:00.01 |     138 |
|   1 |  LOAD TABLE CONVENTIONAL | DEMOGTT |      1 |        |      0 |00:00:00.01 |     138 |
|*  2 |   TABLE ACCESS FULL      | DEMO    |      1 |      1 |      3 |00:00:00.01 |       9 |
----------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - filter("N"="DEMOSLOW"("N"))
</pre></p>
<p>This is a proof that DML restarts are not accounted within the same execution. the &#8216;last&#8217; statistics are only from the last restart.</p>
<p>V$SQL accounts only one execution but thousands of invalidations:
<pre>
21:21:54 SQL&gt; select executions,invalidations from v$sql where sql_id='3fk1hyq9vnuzx';

EXECUTIONS INVALIDATIONS
---------- -------------
         1          1571
</pre></p>
<p>ASH shows the different SQL_EXEC_ID:
<pre>
21:21:54 SQL&gt; select sample_time,sql_id,sql_exec_id from v$active_session_history where sql_id='3fk1hyq9vnuzx' and sample_time&gt;sysdate-10/24/60/60 order by sample_time desc;

SAMPLE_TIME                                                                 SQL_ID        SQL_EXEC_ID
--------------------------------------------------------------------------- ------------- -----------
24-NOV-16 09.21.53.773 PM                                                   3fk1hyq9vnuzx    16778774
24-NOV-16 09.21.51.773 PM                                                   3fk1hyq9vnuzx
24-NOV-16 09.21.48.773 PM                                                   3fk1hyq9vnuzx    16778501
24-NOV-16 09.21.46.773 PM                                                   3fk1hyq9vnuzx    16778396
24-NOV-16 09.21.45.773 PM                                                   3fk1hyq9vnuzx    16778341
</pre></p>
<p>and SQL Monitoring see different executions:
<pre>
21:21:54 SQL&gt; select sql_id,sql_exec_id,status,last_refresh_time,plan_operation,starts from v$sql_plan_monitor where sql_id='3fk1hyq9vnuzx' and plan_line_id=0 order by last_refresh_time desc fetch first 10 rows only;

SQL_ID        SQL_EXEC_ID STATUS              LAST_REFRESH_TI PLAN_OPERATION                     STARTS
------------- ----------- ------------------- --------------- ------------------------------ ----------
3fk1hyq9vnuzx    16778762 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778765 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778767 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778766 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778771 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778769 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778764 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778770 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778763 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
3fk1hyq9vnuzx    16778768 DONE                24-nov 21:21:53 INSERT STATEMENT                        1
</pre></p>
<p>So those are the symptoms of DML restart. And my initial problem is still there:</p>
<ul>
<li>This test case does not reproduce the issue on a GTT</li>
<li>My issue on the GTT had only one SQL_EXEC_ID with multiple &#8216;starts&#8217; of the plan operations.</li>
</ul>
<blockquote class="twitter-tweet" data-width="550"><p lang="en" dir="ltr"><a href="https://twitter.com/hashtag/sqlmon?src=hash">#sqlmon</a> <a href="https://twitter.com/hashtag/puzzled?src=hash">#puzzled</a>I expected to see &#39;1&#39; as &#39;executions for the first line of a plan,Here I have executions with 1,12,19,64&#8230; ?!? <a href="https://t.co/yHPZXDprgX">pic.twitter.com/yHPZXDprgX</a></p>
<p>&mdash; Franck Pachot (@FranckPachot) <a href="https://twitter.com/FranckPachot/status/800678031908110336">November 21, 2016</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>Any comments greatly appreciated <img src="../wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-130290"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
