This was first published on <a href=https://blog.dbi-services.com/oda-lite-what-is-this-odacli-repository>https://blog.dbi-services.com/oda-lite-what-is-this-odacli-repository</a> (2018-02-23)
								<h1 class="entry-title">ODA Lite: What is this &#8216;odacli&#8217; repository?</h1>
		<div class="content-inner">
			
						
						
		   
			<p>When ODA Lite was introduced, with ODA X6-2 S/M/L, and now with ODA x7-2 S/M, a new &#8216;odacli&#8217; was there to manage it. It will probably replace the oakcli for ODA HA as well in the future. One big difference: it uses a repository to record the configuration and the operations. I don&#8217;t really like it because when something fails you are blocked. Oracle Support can modify the directory, but they ask for an access to the machine for that and this is not easy in secured environments. Anyway, I really don&#8217;t understand why another repository has been introduced. We already have the Oracle Inventory, the Grid Infrastructure resources, the Linux /etc files,&#8230; And now we have a closed repository which controls everything, accessible only with the very limited odacli commands which are not the best example of automation code and error handling.</p>
<p>This post is about viewing what is inside. You may also want to update it in case you have a problem. I can&#8217;t tell you not to do it: this blog has readers who fixed critical issues by editing the binary data in system files, so changing some metadata in an embedded SQL database is not so dangerous. On the other hand, you take the risk to mess up everything. So better contact Oracle Support of you are not 142% sure about what you do. But when the support is long to answer, asks a remote access, or has no other solution than re-image the ODA, you may have to find other alternatives. Just limit yourseld to what you know you can do without risk.
<span id="more-21219"></span></p>
<p>So, this repository is stored in an embedded JavaDB which is, as far as I understand it, An Apache Derby database recolored in red by Oracle. There&#8217;s a jdbc driver to access it.</p>
<p>You find the repository on your ODA in the following directory:
<pre>/opt/oracle/dcs/repo</pre></p>
<p>You will probably copy the directory elsewhere to look at it. And you may do that with the DCS agent stopped.</p>
<h3>SQuirreL SQL Client</h3>
<p>I used SQuirreL SQL Client to read this database:</p>
<p>Download SQuirreL SQL Client: squirrel-sql-snapshot-20180206_2232-standard.jar from <a href="https://sourceforge.net/projects/squirrel-sql/files/latest/download" target="_blank">https://sourceforge.net/projects/squirrel-sql/files/latest/download</a> and install it.</p>
<p>Download derby.jar from <a href="https://db.apache.org/derby/derby_downloads.html" target="_blank">https://db.apache.org/derby/derby_downloads.html</a></p>
<p>Run SQuirreL SQL Client, and add the derby.jar: <a href="../wp-insides/uploads/sites/2/2018/02/CaptureDerby001.png" rel="lightbox[21219]"><img src="../wp-insides/uploads/sites/2/2018/02/CaptureDerby001.png" alt="CaptureDerby001" width="847" height="582" class="aligncenter size-full wp-image-21220" /></a></p>
<p>Connect to it. If you still have the repo at the original place, the URL is jdbc:derby:/opt/oracle/dcs/repo/node_0. There is no user and no password.</p>
<p>Then, in the &#8216;APP&#8217; catalog, you can browse the tables:</p>
<p><a href="../wp-insides/uploads/sites/2/2018/02/CaptureDerby002.png" rel="lightbox[21219]"><img src="../wp-insides/uploads/sites/2/2018/02/CaptureDerby002.png" alt="CaptureDerby002" width="1912" height="498" class="aligncenter size-full wp-image-21222" /></a></p>
<h3>SchemaSpy</h3>
<p>You probably want to see the data model for those few tables. I did it on a 12.1.2.11.0 repository. I used SchemaSpy (<a href="http://schemaspy.org/" target="_blank">http://schemaspy.org/</a>) which is awesome because it uses the awesome Graphviz (<a href="https://www.graphviz.org/" target="_blank">https://www.graphviz.org/</a>) for the visual representation. If you want to do the same, here is how I did it:</p>
<p><pre>
export PATH=$PATH:"/cygdrive/c/Program Files (x86)/Graphviz2.38/bin"
java -jar schemaspy*.jar -t derby -db ./repo/node_0 -dp ./derby.jar -o ODAviz -u "" -cat "APP"
</pre></p>
<p>Here are some of the schemas generated if you want to have a look at what is stored in the ODA repository: <a href="https://www.dropbox.com/s/6ymvsq4douufsm4/ODAviz.pub.zip?dl=0">ODAviz.pub.zip</a></p>
<p>The schema is very simple. Only a few referential integrity constraints and very simple information.</p>
<p>One additional warning: modifications here are not supported by Oracle, and that may even be forbidden as the Capacity On Demand core count is also stored there.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-212200" data-img="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2018/02/CaptureDerby001.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-10661">
				<div id="div-comment-10661" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/030b2b6567260b4b686182a79aa94de0?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Jigar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-10661">
			February 24, 2018 at 16 h 22 min</a>		</div>

		<p>To debug metadata inconsistencies in derby db, gather TFA logs, it will zipped above node 0 dir to debug further by support.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-106621"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-10661' onclick='return addComment.moveForm( "div-comment-10661", "10661", "respond", "21219" )' aria-label='Reply to Jigar to Jigar'>Reply to Jigar</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
