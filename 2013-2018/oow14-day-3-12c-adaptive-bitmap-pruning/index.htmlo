This was first published on <a href=https://blog.dbi-services.com/oow14-day-3-12c-adaptive-bitmap-pruning>https://blog.dbi-services.com/oow14-day-3-12c-adaptive-bitmap-pruning</a> (2014-10-01)
								<h1 class="entry-title">OOW14 Day 3 &#8211; 12c Adaptive Bitmap Pruning</h1>
		<div class="content-inner">
			
						
						
		   
			<p>I&#8217;m currently following the session &#8216;Real-World Performance of Star and Snowflake Schemas&#8217; with Michael Hallas, Andrew Holdsworth, John Clarke. It&#8217;s really a good presentation. the Real Performance team tries to spread messages about how to design for performance. But today I&#8217;ll not blog about what I&#8217;ve seen but about what I&#8217;ve not seen. Everybody talks about those nice 12c features that are useful in BI workloads, such as adaptive joins, adaptive parallel distribution, vector &#8216;in-memory&#8217; aggregation, etc. Nobody talks about Adaptive Bitmap Pruning.</p>
<p>If you <a href="https://www.google.ch/search?q=%22adaptive+bitmap+pruning%22">google</a> for for it there is only one result (at least before my blog is published) which is the patent about all all those new CBO features that came in 12.1.0.1</p>
<p>And when I assist to a session that shows star transformation and execution plans with and without temporary table, I&#8217;m frustrated that I don&#8217;t see anything about that great feature that stabilizes our BI reports on star schemas. I&#8217;m preparing our tuning workshop (dates <a title="Oracle training" href="http://www.dbi-services.com/trainings/type/oracle-en/">here</a> &#8211; 10% discount if you book before the end of the year) and it&#8217;s something I can&#8217;t skip when talking about star transformation and bitmap indexes.</p>
<p>So let&#8217;s have a look to it. It you want a refresh about star transformation, please just wait about the next SOUG newsletter. But if you&#8217;re already familiar with it, this is for you.</p>
<p>Let&#8217;s have a look at an execution plan in 12c after running a query on a star schema. You have the same as in 11g except that we have that grayed ‘STATISTICS COLLECTOR’. Star transformation is good when the predicate is selective enough to filter few rows. Imagine that the cardinality estimation was wrong and most of FACT rows have the required value. This is what happened here, and the optimizer has chosen to stop iterating in that bitmap branch. It just ignores the predicate at that step and the join back to the dimension Cartesian join will filter it anyway.</p>
<p>If you check the execution plan with predicates you will see the predicate on dimension in the two table access.</p>
<p><a class="easyblog-thumb-preview" title="12cAdaptiveBitmapPruning.png" href="http://blog.dbi-services.com/images/easyblog_images/139/12cAdaptiveBitmapPruning.png" rel="lightbox[500]"><img title="12cAdaptiveBitmapPruning.png" src="../images/easyblog_images/139/12cAdaptiveBitmapPruning.png" alt="12cAdaptiveBitmapPruning.png" /></a></p>
<p>Look at the end. When the statistics collector has seen that the threshold has been passed over, it has decided to skip that bitmap branch. This is Adaptive Bitmap Pruning. The bitmap branch is good only if it helps to filter a lot of rows. If it’s not the case, then it’s just an overhead and it is skipped, coming back &#8211; for that branch only &#8211; to the behavior we have when star transformation was disabled.</p>
<p>As with the other adaptive plans, the threshold is calculated at parse time.</p>
<p>See more details about the inflection point in a previous blog about <a title="Oracle adaptative joins" href="http://blog.dbi-services.com/oracle-12c-adaptive-plan-inflexion-point/">Adaptive Joins</a></p>
<p>&nbsp;</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-5010" data-img="http://blog.dbi-services.com/images/easyblog_images/139/12cAdaptiveBitmapPruning.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
