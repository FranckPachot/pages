This was first published on <a href=https://blog.dbi-services.com/oracle-sql-monitoring-reports-in-flash-html-text>https://blog.dbi-services.com/oracle-sql-monitoring-reports-in-flash-html-text</a> (2014-05-15)
								<h1 class="entry-title">Oracle SQL Monitoring reports in flash, html, text</h1>
		<div class="content-inner">
			
						
						
		   
			<p>I have recently posted on the way I like to extract execution plans. When we have Tuning pack, I suggest to get them with SQL Real-Time Monitoring as an active report. However, Martin Preiss said in a <a href="https://blog.dbi-services.com/best-practice-to-send-an-oracle-execution-plan#comment-212">comment</a> that he prefers the text format &#8211; easier to search, copy, and paste. And that&#8217;s a very good remark. We still need plain text.</p>
<p>My point is that if you send me the active report, then I can extract the text version from it. The opposite is not possible. It&#8217;s a bit tricky, I&#8217;ll show how to do.</p>
<p>The active report is very nice: it is an html file with an embedded xml data in it. When you open it, it loads a flash application from the oracle site and displays that nice report:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon001.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon001.PNG" rel="lightbox[440]"><img title="CaptureSQLMon001.PNG" src="../images/easyblog_images/139/CaptureSQLMon001.PNG" alt="CaptureSQLMon001.PNG" /></a></p>
<p>Its easy to navigate, drill dow, etc. I often get to the html source in order to see some information that is hidden in the xml but which is not displayed, such as the optimizer parameters used by the query. Here is an extract from the html source:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon002.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon002.PNG" rel="lightbox[440]"><img title="CaptureSQLMon002.PNG" src="../images/easyblog_images/139/CaptureSQLMon002.PNG" alt="CaptureSQLMon002.PNG" /></a></p>
<p>Yes. I used to do that in 11g. And once, I asked someone to send me his 12c report and I had a bad surprise. The xml is compressed and I can&#8217;t see anything:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon005.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon005.PNG" rel="lightbox[440]"><img title="CaptureSQLMon005.PNG" src="../images/easyblog_images/139/CaptureSQLMon005.PNG" alt="CaptureSQLMon005.PNG" /></a></p>
<p>Oracle 12c introduced that nice optimization in order to have smaller files, but I prefered the previous one. But look at the attributes: it&#8217;s base 64 encoded and compressed with zlib.</p>
<p>So don&#8217;t worry, you have linux utilities to uncompress that:</p>
<p><samp><a class="easyblog-thumb-preview" title="CaptureSQLMon007.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon007.PNG" rel="lightbox[440]"><img title="CaptureSQLMon007.PNG" src="../images/easyblog_images/139/CaptureSQLMon007.PNG" alt="CaptureSQLMon007.PNG" /></a></samp></p>
<p>From the sqlmon12c.html, I have extracted to sqlmon12c_decoded.html the report with xml data as I&#8217;ve shown above. Good. I got my xml back <img src="../wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
<p>Then back to Martin&#8217;s comment. The active report is good to navigate on it. The xml is good to find some hidden information. But If I want to paste a plan to the report I deliver to my customer, I prefer text. A table in text is ok for a Word document.</p>
<p>First I extract only the xml and include it within &#8216;report&#8217; tags:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon008.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon008.PNG" rel="lightbox[440]"><img title="CaptureSQLMon008.PNG" src="../images/easyblog_images/139/CaptureSQLMon008.PNG" alt="CaptureSQLMon008.PNG" /></a></p>
[sorry for the code as screenshot, but the html tags in the awk script are hard to display here]
<p>From that xml, I apply the sqlmonitorText.xsl XSLT template which is found in ORACLE_HOME:</p>
<p><samp>xsltproc $ORACLE_HOME/rdbms/xml/orarep/sqlmonitor/sqlmonitorText.xsl sqlmon12c_extracted.xml &gt; sqlmon12c_text.html</samp></p>
<p>And here is the result, a nice HTML table that perfectly fits in my .doc document:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon003.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon003.PNG" rel="lightbox[440]"><img title="CaptureSQLMon003.PNG" src="../images/easyblog_images/139/CaptureSQLMon003.PNG" alt="CaptureSQLMon003.PNG" /></a></p>
<p>But there is something else that we cannot do with that. On large execution plans, I often have to bring the cursor up and down in order to go from a child operation to its parent (example: from a high &#8216;execs&#8217; number within a nested loop I go to the rowsource that provided that number of rows). So I need text. Plain text.</p>
<p>No need to call the DBMS_REPORT functions for that. Linux has text web browsers. For example:</p>
<p><samp><strong>elinks -dump -dump-width 150 sqlmon12c_text.html | grep -v &#8220;^ |&#8211;&#8221; &gt; sqlmon12c_text.txt</strong></samp></p>
<p>&#8230;which gives me something useful for notepad.exe or vim:</p>
<p><a class="easyblog-thumb-preview" title="CaptureSQLMon006.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon006.PNG" rel="lightbox[440]"><img title="CaptureSQLMon006.PNG" src="../images/easyblog_images/139/CaptureSQLMon006.PNG" alt="CaptureSQLMon006.PNG" /></a></p>
<p>So this is why I prefer to have the SQL Monitoring report in the active html format: I can read it immediately, and convert it to what I want later. I have a script for that. A very dirty script. I&#8217;ll share it anyway. Just call it with the name of the active html report file. here it is: <a title="title" href="http://blog.dbi-services.com/images/easyblog_images/139/decode-sqlmon.zip" target="_self">decode-sqlmon.zip</a></p>
<p>But if someone wants to make a clean script for that, don&#8217;t hesitate to share <img src="../wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
<h3>Update 25-JUL-2014</h3>
<p>Tyler Muth (<a href="https://twitter.com/tmuth">@tmuth</a>) has a very nice way to get uncompressed unencoded xml in: <a href="https://github.com/tmuth/Query-Test-Framework/blob/master/source/query-capture.sql#L78">this project</a></p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-4410" data-img="http://blog.dbi-services.com/images/easyblog_images/139/CaptureSQLMon001.PNG"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
