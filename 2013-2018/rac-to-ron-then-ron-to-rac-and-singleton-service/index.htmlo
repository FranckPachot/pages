This was first published on <a href=https://blog.dbi-services.com/rac-to-ron-then-ron-to-rac-and-singleton-service>https://blog.dbi-services.com/rac-to-ron-then-ron-to-rac-and-singleton-service</a> (2016-03-20)
								<h1 class="entry-title">RAC to RON then RON to RAC and singleton service</h1>
		<div class="content-inner">
			
						
						
		   
			<p>You will probably never do it, but let&#8217;s imagine you have a RAC database, policy managed, with singleton service. Then you convert it to RAC One Node and you change you mind and convert it back to RAC. Be careful, the singleton services are converted to uniform ones when converting to RAC
<span id="more-7660"></span>
My RACDB database is running on two nodes:
<pre>[oracle@racp1vm1 ~]$ srvctl status database -db racdb
Instance RACDB_1 is running on node racp1vm1
Instance RACDB_2 is running on node racp1vm2</pre>
it is policy managed and in a server pool of two servers:
<pre>
[oracle@racp1vm1 ~]$ srvctl config database -db racdb | grep pool
Server pools: pool1
[oracle@racp1vm1 ~]$ srvctl status srvpool -serverpool pool1
Server pool name: pool1
Active servers count: 2
</pre>
I&#8217;m in RAC and have the singleton service &#8216;S&#8217; running on first node
<pre>
[oracle@racp1vm1 ~]$ srvctl config service -db racdb -service S
Service name: s
Server pool: pool1
Cardinality: UNIFORM
Disconnect: false
Service role: PRIMARY
Management policy: AUTOMATIC
...
</pre>
I want to go to RAC One Node so I need to have only one instance running
<pre>
[oracle@racp1vm1 ~]$ srvctl stop instance -db racdb -instance RACDB_2 -f
</pre>
and then convert
<pre>
[oracle@racp1vm1 ~]$ srvctl convert database -db racdb -dbtype RACONENODE
</pre>
Then I check the service:
<pre>
[oracle@racp1vm1 ~]$ srvctl status service -db racdb -service s
Service s is running on nodes: racp1vm1
</pre>
still running on one node of course, and still defined as SINGLETON
<pre>
[oracle@racp1vm1 ~]$ srvctl  config service -db racdb -service s
Service name: s
Server pool: pool1
Cardinality: SINGLETON
Disconnect: false
Service role: PRIMARY
Management policy: AUTOMATIC
</pre>
Let&#8217;s now convert back to RAC
<pre>
[oracle@racp1vm1 ~]$ srvctl convert database -db racdb -dbtype RAC
</pre>
and check the service:
<pre>
[oracle@racp1vm1 ~]$ srvctl status service -db racdb -service s
Service s is running on nodes: racp1vm1,racp1vm2
</pre>
Ouch. My service that was a singleton is now running on all nodes.
<pre>
[oracle@racp1vm1 ~]$ srvctl config service -db racdb -service s
Service name: s
Server pool: pool1
Cardinality: UNIFORM
Disconnect: false
Service role: PRIMARY
Management policy: AUTOMATIC
</pre>
It seems that the conversion from RAC One Node to RAC has modified all service cardinality to be UNIFORM.</p>
<p>You have to set it back to SINGLETON:
<pre>
[oracle@racp1vm1 ~]$ srvctl modify service -db racdb -cardinality singleton -service s -f
</pre></p>
<p>Be careful with that.
A service for which the application has not be designed to be load balanced across several nodes may have horrible performance. It&#8217;s always a good idea to check the service config and where they are running.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-76610"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
