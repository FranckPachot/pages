This was first published on <a href=https://blog.dbi-services.com/resource-manager-plan-from-oem-vs-command-line>https://blog.dbi-services.com/resource-manager-plan-from-oem-vs-command-line</a> (2016-03-10)
								<h1 class="entry-title">Resource Manager plan from OEM vs. command line</h1>
		<div class="content-inner">
			
						
						
		   
			<p>You are rather GUI or command line? Let&#8217;s compare what you can do with them when you want to create a Resource Manager plan, and what is missing in the GUI.
<span id="more-7376"></span>
I&#8217;m using EM13<em>c</em> here on a 12<em>c</em> database. Doc for command line API is <a href="https://docs.oracle.com/database/121/ARPLS/d_resmgr.htm#ARPLS67609" target="_blank">here</a>.</p>
<p>I&#8217;ll explain what you can set in the GUI and the matching arguments generated by OEM:</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.36.19.png" rel="lightbox[7376]"><img src="../wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.36.19.png" alt="Screenshot 2016-03-10 13.36.19" width="1920" height="1080" class="alignnone size-full wp-image-7385" /></a></p>
<p>Here we have the name and description (comment):
<pre>DBMS_RESOURCE_MANAGER.CREATE_PLAN_DIRECTIVE (
   plan                      IN VARCHAR2,
   comment                   IN VARCHAR2 DEFAULT NULL, </pre></p>
<p>When the &#8216;Activate this plan&#8217; is checked, it calls the dbms_resource_manager.switch_plan, with the allow_scheduler_plan_switches=&gt;false if you uncheck &#8216;Automatic Plan Switching Enabled&#8217;</p>
<p>The CREATE_PLAN_DIRECTIVE is called for each group or sub plan:
<pre>   group_or_subplan          IN VARCHAR2,
</pre>
The &#8216;Utilization limit %&#8217; defines the max_utilization_limit wich is now utilization_limit:
<pre>   max_utilization_limit        IN NUMBER   DEFAULT NULL,  -- deprecated
   utilization_limit            IN NUMBER   DEFAULT NULL,</pre></p>
<p>The number or shares that we set are converted to percentage of total shares in order to define the cpu_p1 which is now mgmt_p1.
<pre>
   cpu_p1                    IN NUMBER   DEFAULT NULL, -- deprecated
   mgmt_p1                   IN NUMBER   DEFAULT NULL,</pre></p>
<p>Actually, OEM put the share number and not the percentage when generating the SQL, but that&#8217;s ok.</p>
<h3>Parallel Query DOP and queuing</h3>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.36.56.png" rel="lightbox[7376]"><img src="../wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.36.56.png" alt="Screenshot 2016-03-10 13.36.56" width="1920" height="1080" class="alignnone size-full wp-image-7384" /></a></p>
<p>Here are the parallel settings. &#8216;bypass queue&#8217; sets parallel_stmt_critical to &#8216;bypass_queue&#8217; to avoid statement queuing for this consumer group.
<pre>   parallel_stmt_critical       IN VARCHAR2 DEFAULT NULL);
</pre>
and the settings (using the deprecated parallel_target_percentage instead of parallel_sever_limit )
<pre>   parallel_degree_limit_p1  IN NUMBER   DEFAULT NULL,
   parallel_target_percentage   IN NUMBER   DEFAULT NULL,  -- deprecated
   parallel_queue_timeout       IN NUMBER   DEFAULT NULL,</pre></p>
<p>The timeout is the number of seconds the statement can remain queued.</p>
<h3>Per session or per-call limits</h3>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.37.03.png" rel="lightbox[7376]"><img src="../wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.37.03.png" alt="Screenshot 2016-03-10 13.37.03" width="1920" height="1080" class="alignnone size-full wp-image-7383" /></a></p>
<p>The limits set the following arguments (in respective order):
<pre>   switch_elapsed_time          IN NUMBER   DEFAULT NULL,
   switch_time                  IN NUMBER   DEFAULT NULL,
   switch_io_megabytes          IN NUMBER   DEFAULT NULL,
   switch_io_logical            IN NUMBER   DEFAULT NULL,
   switch_io_reqs               IN NUMBER   DEFAULT NULL,</pre></p>
<p>The actions sets a consumer group to switch to, or KILL_SESSION or CANCEL_SQL:
<pre>   switch_group              IN VARCHAR2 DEFAULT NULL,
</pre></p>
<p>The &#8216;track by statement&#8217; sets to true the switch_for_call (it switches to group only until the end of the call) and the &#8216;use estimate&#8217; sets switch_estimate to true:
<pre>   switch_for_call           IN BOOLEAN  DEFAULT NULL,
   switch_estimate           IN BOOLEAN  DEFAULT FALSE,</pre></p>
<h3>Idle time limits</h3>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.37.11.png" rel="lightbox[7376]"><img src="../wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.37.11.png" alt="Screenshot 2016-03-10 13.37.11" width="1920" height="1080" class="alignnone size-full wp-image-7382" /></a></p>
<p>This sets the following time in seconds:
<pre>   max_idle_time                IN NUMBER   DEFAULT NULL,
   max_idle_blocker_time        IN NUMBER   DEFAULT NULL,</pre></p>
<h3>What is missing?</h3>
<p>It seems that we cannot set here the limit based on CBO estimation:
<pre>   max_est_exec_time         IN NUMBER   DEFAULT NULL,</pre>
Same for the maximum number of active sessions limit
<pre>   active_sess_pool_p1       IN NUMBER   DEFAULT NULL,
</pre>And the transaction undo size limit:
<pre>   undo_pool                 IN NUMBER   DEFAULT NULL,
</pre></p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-73770" data-img="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/03/Screenshot-2016-03-10-13.36.19.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">


			<!-- If comments are open, but there are no comments. -->

	 

								<div id="respond" class="comment-respond">
