This was first published on <a href=https://blog.dbi-services.com/stay-with-non-cdb-or-go-to-cdb>https://blog.dbi-services.com/stay-with-non-cdb-or-go-to-cdb</a> (2015-01-28)
								<h1 class="entry-title">Stay with non-CDB or go to CDB?</h1>
		<div class="content-inner">
			
						
						
		   
			<p>This is a question that starts to be raised quite frequently. Oracle released the multitenant architecture 1.5 year ago. And now says that the previous architecture &#8211; known as non-CDB &#8211; is deprecated. What does it mean? Do we have to go to the CDB architecture even if we don&#8217;t want to use/pay multi-tenant?</p>
<p>It started like that on twitter:</p>
<blockquote class="twitter-tweet" width="550"><p lang="en" dir="ltr">Non-CDB architecture of Oracle databases is DEPRECATED since Oracle Database 12.1.0.2 <a href="https://t.co/7mDO93lGee">https://t.co/7mDO93lGee</a> via Mike Dietrich <a href="https://twitter.com/hashtag/oracledb?src=hash">#oracledb</a></p>
<p>&mdash; Andreas Buckenhofer (@ABuckenhofer) <a href="https://twitter.com/ABuckenhofer/status/558150734244757504">January 22, 2015</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>The link shows the official statement. The blog post is from Mike Dietrich who is the &#8216;Mr upgrade&#8217; at Oracle and the statement is also in the documentation.</p>
<p>What is the non-CDB architecture? I don&#8217;t like negative names. Most of Oracle customers have non-CDB on a non-Exadata machine&#8230;
I&#8217;ve explained the CDB architecture internals in several blog posts: <a href="https://blog.dbi-services.com/oracle-12c-cdb-metadata-a-object-links-internals">1</a>, <a href="https://blog.dbi-services.com/oracle-multitenant-dictionary-object-links">2</a>, <a href="https://blog.dbi-services.com/oracle-multitenant-dictionary-upgrade">3</a>, <a href="https://blog.dbi-services.com/oracle-multitenant-dictionary-upgrade">4</a>Â and there is also the OOW14 <a href="https://oracleus.activeevents.com/2014/connect/fileDownload/session/B3808948259EDC6A6DF1BFC69CB6D4AD/CON2282_Spinka-CON2282%20Internals%20of%20the%20Oracle%20Database%2012c%20Multitenant%20Architecture.pdf">presentation</a> from Vit Spinka about it.</p>
<p>Basically:</p>
<ul>
<li>A non-CDB stores all metadata (system ones and user ones) in the same dictionary.</li>
<li>A CDB stores user metadata only in the database dictionary, which have links to a common dictionary that contains the system metadata. The common container is called &#8216;root&#8217; and the database is called &#8216;pluggable database&#8217;.</li>
</ul>
<p>The first one &#8211; the non-cdb &#8211; exists for years. You can see both SCOTT and system objects are in OBJ$</p>
<p><a class="easyblog-thumb-preview" title="Capture7.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/Capture7.PNG" rel="lightbox[567]"><img style="margin-left: auto;margin-right: auto" title="Capture7.PNG" src="../images/easyblog_images/139/Capture7.PNG" alt="Capture7.PNG" /></a></p>
<h3>multi-tenant</h3>
<p>But through the releases a lot of oracle code was not only added to the binaries, but also in the databases in stored procedures. All those dbms_xxx packages for example. And if you have several databases of the same release, even if you share the ORACLE_HOME, you duplicate all this system dictionary.</p>
<p>Then in 12c came the multitenant architecture. It&#8217;s called multi-tenant because you can have several pluggable databases linked to the same root container. You need to have Enterprise Edition and the Multitenant option for that. Oracle has made a lot of changes for that and maintaining different code path for the non-CDB and the CDB architecture cannot be efficient. This is why the non-CDB is deprecated: we can expect that only the mutitenant code will evolve in the future.</p>
<h3>single-tenant</h3>
<p>So what if you are in Standard Edition? Or in Enterprise Edition without the multitenant option? You can still use the CDB architecture. The only limitation is that you can&#8217;t have more than one pluggable database (well more than two because SEED counts as a pluggable database). It&#8217;s called &#8216;single-tenant&#8217;</p>
<p>Let&#8217;s put it clearly. Without the need for additional license you can have a CDB database as long as:
<pre>select count(*) into aux_count from v$pdbs where con_id &gt; 2;</pre>
returns no rows.
So, this is not a licensing issue&#8230; as long as you are sure that nobody creates additional PDBs</p>
<h3>stablility</h3>
<p>The first point to consider is the stability. The CDB architecture is new: less than 2 years. There are bugs. And there are fixes. That does not mean that we can&#8217;t use it but we need to test it a lot. And it&#8217;s not only testing the application, but also all our operations, monitoring, etc. Are you ready to always connect to your database though a service? Are you sure your recovery procedure works in multitenant? Do you know if you need to install Statspack in the ROOT or in the PDB?</p>
<h3>overhead</h3>
<p>If you are going to multitenant to consolidate several databases, then you will have an architecture that need less storage and less memory.
But if you are going to single-tenant, then all your databases will be bigger. And there are two reasons about that.
The first reason is here:</p>
<p><a class="easyblog-thumb-preview" title="CaptureCDBComponents.PNG" href="http://blog.dbi-services.com/images/easyblog_images/139/CaptureCDBComponents.PNG" rel="lightbox[567]"><img style="margin-left: auto;margin-right: auto" title="CaptureCDBComponents.PNG" src="../images/easyblog_images/139/CaptureCDBComponents.PNG" alt="CaptureCDBComponents.PNG" /></a></p>
<p>When you create a CDB you have to install all components. It&#8217;s grayed. You cannot uncheck.
Components that you don&#8217;t use takes space and will take time when you will need to upgrade.
That will probably be addressed in future releases, but for the moment if you have small databases that do not use all those components, the you will probably prefer to stay in non-CDB.
The second reason is here. I have migrated the following database to single-tenant
<pre>List of Permanent Datafiles
===========================
File Size(MB) Tablespace           RB segs Datafile Name
---- -------- -------------------- ------- ------------------------
1    914      SYSTEM               YES     /u02/data/u01/oradata/DB1/system01.dbf
2    1094     SOE                  NO      /u02/data/u01/oradata/DB1/SOE.dbf
3    840      SYSAUX               NO      /u02/data/u01/oradata/DB1/sysaux01.dbf
4    96       UNDOTBS1             YES     /u02/data/u01/oradata/DB1/undotbs01.dbf
5    1220     EXAMPLE              NO      /u02/data/u01/oradata/DB1/example01.dbf
6    141      USERS                NO      /u02/data/u01/oradata/DB1/users01.dbf
</pre>
And here is the result:
<pre>List of Permanent Datafiles
===========================
File Size(MB) Tablespace           RB segs Datafile Name
---- -------- -------------------- ------- ------------------------
1    785      SYSTEM               YES     /u02/oradata/STCDB/datafile/o1_mf_system_bd1nsjms_.dbf
2    263      PDB$SEED:SYSTEM      NO      /u02/oradata/STCDB/SEED/datafile/o1_mf_system_bd1nsoc8_.dbf
3    702      SYSAUX               NO      /u02/oradata/STCDB/datafile/o1_mf_sysaux_bd1nsyt8_.dbf
4    581      PDB$SEED:SYSAUX      NO      /u02/oradata/STCDB/SEED/datafile/o1_mf_sysaux_bd1nt428_.dbf
5    908      UNDOTBS1             YES     /u02/oradata/STCDB/datafile/o1_mf_undotbs1_bd1nt7h1_.dbf
8    2        USERS                NO      /u02/oradata/STCDB/datafile/o1_mf_users_bd1nvwoc_.dbf
23   383      STDB1:SYSTEM         NO      /u02/oradata/STCDB/DB1/datafile/o1_mf_system_bdkzkjyg_.dbf
24   611      STDB1:SYSAUX         NO      /u02/oradata/STCDB/DB1/datafile/o1_mf_sysaux_bdkzkjym_.dbf
25   1220     STDB1:EXAMPLE        NO      /u01/oradata/STCDB/DB1/EXAMPLE.dbf
26   1094     STDB1:SOE            NO      /u01/oradata/STCDB/DB1/SOE.dbf
27   141      STDB1:USERS          NO      /u01/oradata/STCDB/DB1/USERS.dbf
</pre>
I&#8217;ve done it with transportable database, so that I&#8217;ve not the problem I&#8217;ve described in previous posts about the noncdb_to_cdb.sql that drops system metadata but leaves the empty space in the SYSTEM tablespace.</p>
<p>My user tablespaces have the same size. The SYSTEM is bigger when we add the ROOT and the PDB ones. And it&#8217;s even worse with SYSAUX. My 4.2 gigabyte database has become a 5.7 gigabytes one. Note that in order to be fair I didn&#8217;t want to count the same overhead twice and I&#8217;ve done the test with a database that had all components installed.
In addition to the space, I&#8217;ve more datafiles, larger memory structures, etc.
For a large database, that overhead doesn&#8217;t matter. But for small databases, going to single-tenant is definitely a bad idea for the moment.
My advise: if you have small databases, either you consolidate in multi-tenant or you stay in non-CDB at least until 12.2</p>
<p>And don&#8217;t forget: at the exception of conventional export/import the non-CDB to CDB migration is a one way operation.</p>
<h3>better?</h3>
<p>But is there anything better in single-tenant? Currently, I don&#8217;t see anything. It&#8217;s not faster to plug a database into an higher version CDB when we compare it to conventional upgrade. It&#8217;s not easier to manage. Cloning PDB is not easier that transportable database. And several features are not yet compatible with CDB architecture.</p>
<p>I&#8217;ll probably change my mind if in future version a &#8216;flashback pluggable database&#8217; is possible. Why? Because flashback can be a very good solution for continuous integration in order to quickly get the database to the same state during the automated tests. But currently, what is long is that we have to close the database, and closing the database means restarting the instance later. Because a pluggable database can be closed and re-opened very quickly we can expect that a flashback pluggable database would be a quick operation. But that&#8217;s probably for 2016.</p>
<h3>deprecated?</h3>
<p>Yes it&#8217;s deprecated, but not yet desupported. Don&#8217;t worry! The non-CDB will still be supported for several years. And when we don&#8217;t buy all the options, we are used to use deprecated features anyway: Statspack because we don&#8217;t have Diagnostic pack, Outlines because we cannot use SPM in Standard Edition, partitioned views because we don&#8217;t have the partitioning option, etc.</p>
<p>What we expect from a software is stability (no big changes that may come with bugs, regressions, and changes in our code or procedures) and support (bug corrections, new features, etc). Staying in 11g will make any new SR difficult even in 11.2.0.4. Going into multitenant or single-tenant will a lot of change.</p>
<p>For 2015 &#8211; going to the latest patchset of 12c, which is the 12.1.0.2 for Enterprise Edition, with the latest PSU, and in the non-CDB architecture, is probably the best compromise we can do for stability and support. I hope that this patchset will be available soon for Standard Edition as well.</p>
<h3>Update April 2016</h3>
<p>One year later after this post I feel the need to refine the scope of this post. First, it&#8217;s clear that I&#8217;m talking about small databases here. The overhead of having multiple SYSTEM tablespace, become insignificant when the database is in hundred of GB. Second, Multitenant was new in 12.1, but it&#8217;s nearly 3 years old now. The first patchset 12.1.0.2 has stabilized lot of problems. And the plug-to-upgrade will improve at each release. And finally, with experience, I realized that I was wrong when saying that unplug/plug has no big benefit over transportable tablespaces. Actually it&#8217;s the opposite. Because metadata comes physically with the SYSTEM tablespace, the time to transport a pluggable database is more predictable. And it&#8217;s available in Standard Edition.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-5680" data-img="http://blog.dbi-services.com/images/easyblog_images/139/Capture7.PNG"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> 5 Comments</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment byuser comment-author-nicolas-jardot even thread-even depth-1" id="comment-1372">
				<div id="div-comment-1372" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/44aaa4979e6e6d88085c5337b3c385c5?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='http://www.dbi-services.com/blog' rel='external nofollow' class='url'>Nicolas Jardot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-1372">
			January 28, 2015 at 20 h 39 min</a>		</div>

		<p>Hi Franck,
I don&#8217;t know if the options will be addressed in the future.
There are two note in M.O.S stating that removing options in CDB environments is not supported because the database needs to be able to host any plugggable databases.</p>
<p>References:
Removal of Database Options in a Multitenant Setup (Doc ID 1616554.1)
Is it possible to remove database components in Oracle 12c using DBCA (Doc ID 1915780.1)
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-13731"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-1372' onclick='return addComment.moveForm( "div-comment-1372", "1372", "respond", "567" )' aria-label='Reply to Nicolas to Nicolas Jardot'>Reply to Nicolas</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-191">
				<div id="div-comment-191" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/8a9315fa4e07a707a2b9273f87878da2?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Sayam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-191">
			August 22, 2015 at 6 h 54 min</a>		</div>

		<p>Nice Explanation.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-1921"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-191' onclick='return addComment.moveForm( "div-comment-191", "191", "respond", "567" )' aria-label='Reply to Sayam to Sayam'>Reply to Sayam</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-4398">
				<div id="div-comment-4398" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/1088bc6aef89c1290aa526d2a2877377?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Gavin Wang</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-4398">
			September 7, 2016 at 12 h 25 min</a>		</div>

		<p>thanks a lot
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-43991"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-4398' onclick='return addComment.moveForm( "div-comment-4398", "4398", "respond", "567" )' aria-label='Reply to Gavin to Gavin Wang'>Reply to Gavin</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-4904">
				<div id="div-comment-4904" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/e3b3ecdc305dea6bb460ad4e34c3144a?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Erin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-4904">
			October 18, 2016 at 22 h 28 min</a>		</div>

		<p>Nice post.  One thing I found inconvenient is on 13c Cloud control I could not see the  Top activities in a PDB,  when I click that on the top menu, it immediately switched to the CDB.   With this I am now thinking to use non-CDB instead of CDB.
BUT before I go that way, does anyone know of this problem?   Can you see activities in PDB through the later cloud control just like you would see that in a non-cdb?   </p>
<p>Thanks!</p>
<p>Erin
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-49051"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-4904' onclick='return addComment.moveForm( "div-comment-4904", "4904", "respond", "567" )' aria-label='Reply to Erin to Erin'>Reply to Erin</a></div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-franck-pachot bypostauthor even depth-2" id="comment-4912">
				<div id="div-comment-4912" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/9c04a89267afa42e63eeb3d620f4b873?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='https://www.linkedin.com/in/franckpachot' rel='external nofollow' class='url'>Franck Pachot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-4912">
			October 19, 2016 at 11 h 13 min</a>		</div>

		<p>Hi Erin,
I have to check whether it&#8217;s possible in Cloud Control 13c, but I&#8217;ve customers that use Orachrome Lighty (<a href="http://www.dbi-services.com/orachrome-lighty/" rel="nofollow">http://www.dbi-services.com/orachrome-lighty/</a>) where it&#8217;s easy to choose one PDB.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-49131"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-4912' onclick='return addComment.moveForm( "div-comment-4912", "4912", "respond", "567" )' aria-label='Reply to Franck to Franck Pachot'>Reply to Franck</a></div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
