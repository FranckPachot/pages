This was first published on <a href=https://blog.dbi-services.com/testing-oracle-on-exoscale-ch>https://blog.dbi-services.com/testing-oracle-on-exoscale-ch</a> (2016-04-28)
								<h1 class="entry-title">Testing Oracle on exoscale.ch</h1>
		<div class="content-inner">
			
						
						
		   
			<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXO_IMG_2802.jpg" rel="lightbox[8397]"><img style="float:left;margin-right:10px" src="../wp-insides/uploads/sites/2/2016/04/EXO_IMG_2802-300x225.jpg" alt="EXO_IMG_2802" width="300" height="225" class="alignnone size-medium wp-image-8399" /></a>
My <a href="http://blog.dbi-services.com/can-you-become-a-paas-provider-for-an-oracle-database-service/" target="_blank">last post</a> came from a discussion at <a href="http://www.salon-sitb.ch/exposants/fiche/686/dbi-services.html" target="_blank">SITB</a> with <a href="https://www.exoscale.ch/" target="_blank">exoscale</a>. They are doing Cloud hosting with datacenters in Switzerland. In Switzerland a lot of companies cannot host their data outside of the country, which is a no-go for the big Cloud providers.</p>
<p>After the discussion they gave me a coupon for a trial IaaS instance.
And if you follow my blog you should know that when I have a trial access, there are good chances that I try it&#8230;
<span id="more-8397"></span>
The provisioning interface is really simple: You choose the datacenter (I choose the one near Zurich, in a disused military bunker) and a VM with 2 vCPU and 2GB RAM.
I want to install Oracle Database. I choose Linux CentOS. I&#8217;ll probably try CoreOS later if I&#8217;ve some credits remaining.</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE003.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE003.png" alt="EXOSCALE003" width="1010" height="492" class="alignnone size-full wp-image-8408" /></a></p>
<p>I&#8217;ll have to connect to it so I open the ssh port, which is done with a simple clic, and I add the listener port as my goal is to run SLOB on an Oracle Database and monitor performance with Orachrome Lighty &#8211; all components of my favorite ecosystem&#8230;</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE005.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE005.png" alt="EXOSCALE005" width="1053" height="349" class="alignnone size-full wp-image-8410" /></a></p>
<p>I don&#8217;t like passwords so I import my ssh public key:</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE002.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE002.png" alt="EXOSCALE002" width="999" height="518" class="alignnone size-full wp-image-8412" /></a></p>
<p>and the system is ready in few seconds:</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE004.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE004.png" alt="EXOSCALE004" width="1006" height="258" class="alignnone size-full wp-image-8413" /></a></p>
<p>Now I can connect with ssh on the ip address provided, as root, and set the system for Oracle Database: </p>
<p><pre>
[root@franck ~]# groupadd oinstall
[root@franck ~]# groupadd dba
[root@franck ~]# useradd -g oinstall -G dba oracle
[root@franck ~]# passwd oracle
</pre></p>
<p>I put my public ssh key into oracle authorized_keys. I set the kernel settings. I upload the 12<i>c</i> binaries and ready to install.</p>
<p>I install SLOB (<a href="https://kevinclosson.net/slob/" target="_blank">https://kevinclosson.net/slob/</a>), useing the create database kit and run the default PIO workload:
<pre>
UPDATE_PCT: 25
RUN_TIME: 3600000
WORK_LOOP: 10000000
SCALE: 100M (12800 blocks)
WORK_UNIT: 64
REDO_STRESS: LITE
HOT_SCHEMA_FREQUENCY: 0
DO_HOTSPOT: FALSE
HOTSPOT_MB: 8
HOTSPOT_OFFSET_MB: 16
HOTSPOT_FREQUENCY: 3
THINK_TM_FREQUENCY: 0
THINK_TM_MIN: .1
THINK_TM_MAX: .5
</pre></p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE006.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE006.png" alt="EXOSCALE006" width="1367" height="855" class="alignnone size-full wp-image-8415" /></a></p>
<p>Result: 1500 IOPS with latency in few milliseconds for 8k reads.</p>
<p><pre>
Load Profile                    Per Second   Per Transaction  Per Exec  Per Call
~~~~~~~~~~~~~~~            ---------------   --------------- --------- ---------
             DB Time(s):               1.0               0.2      0.05      3.89
              DB CPU(s):               0.1               0.0      0.00      0.39
      Background CPU(s):               0.0               0.0      0.00      0.00
      Redo size (bytes):         255,885.4          51,476.9
  Logical read (blocks):           1,375.2             276.7
          Block changes:             652.0             131.2
 Physical read (blocks):           1,261.9             253.9
Physical write (blocks):             324.1              65.2
       Read IO requests:           1,261.7             253.8
      Write IO requests:             310.8              62.5
           Read IO (MB):               9.9               2.0
          Write IO (MB):               2.5               0.5
</pre></p>
<p>Wait events (I don&#8217;t know why the sum is above 100%&#8230;)
<pre>
Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                           Total Wait       Wait   % DB Wait
Event                                Waits Time (sec)    Avg(ms)   time Class
------------------------------ ----------- ---------- ---------- ------ --------
db file sequential read          1,826,324     2442.5       1.34   48.2 User I/O
db file parallel read               74,983     2285.2      30.48   45.1 User I/O
DB CPU                                          509.2              10.0
</pre></p>
<p>And wait event histogram in microseconds for single block reads:</p>
<p><pre>
EVENT                          WAIT_TIME_MICRO WAIT_COUNT WAIT_TIME_FORMAT
------------------------------ --------------- ---------- ------------------------------
db file sequential read                      1          0 1 microsecond
db file sequential read                      2          0 2 microseconds
db file sequential read                      4          0 4 microseconds
db file sequential read                      8          0 8 microseconds
db file sequential read                     16          0 16 microseconds
db file sequential read                     32          0 32 microseconds
db file sequential read                     64          0 64 microseconds
db file sequential read                    128        191 128 microseconds
db file sequential read                    256       3639 256 microseconds
db file sequential read                    512      71489 512 microseconds
db file sequential read                   1024     838371 1 millisecond
db file sequential read                   2048     887138 2 milliseconds
db file sequential read                   4096      21358 4 milliseconds
db file sequential read                   8192       3625 8 milliseconds
db file sequential read                  16384       1659 16 milliseconds
db file sequential read                  32768       1863 32 milliseconds
db file sequential read                  65536       4817 65 milliseconds
db file sequential read                 131072       3721 131 milliseconds
db file sequential read                 262144          5 262 milliseconds
</pre></p>
<p>Now time to look at CPU. The processors are not the latest Intel generation:
<pre>
Model name:            Intel Xeon E312xx (Sandy Bridge)
CPU MHz:               2593.748
</pre></p>
<p>I&#8217;ve run same slob.conf except that I reduce the scal to fit in buffer cache and do no updates</p>
<p><pre>
Load Profile                    Per Second   Per Transaction  Per Exec  Per Call
~~~~~~~~~~~~~~~            ---------------   --------------- --------- ---------
             DB Time(s):               0.8               2.1      0.00      0.66
              DB CPU(s):               0.8               2.0      0.00      0.65
      Background CPU(s):               0.0               0.0      0.00      0.00
      Redo size (bytes):           8,257.2          20,944.9
  Logical read (blocks):         411,781.5       1,044,502.5
          Block changes:              41.8             106.1
 Physical read (blocks):              10.9              27.7
Physical write (blocks):               3.5               8.9
       Read IO requests:               9.9              25.2
      Write IO requests:               2.7               6.7
</pre></p>
<p>That&#8217;s 412000 logical reads per seconds per CPU. However I&#8217;ve only 0.8 CPU here. </p>
<p>I nearly forgot the great feature of 12<i>c</i> AWR report: the active-html with it&#8217;s &#8216;tetris&#8217; view. Here it is:</p>
<p><a href="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXOSCALE008.png" rel="lightbox[8397]"><img src="../wp-insides/uploads/sites/2/2016/04/EXOSCALE008.png" alt="EXOSCALE008" width="1886" height="844" class="alignnone size-full wp-image-8419" /></a></p>
<p>Ok it seems I had a little delay at the beginning of the run before it was 100% in CPU. Knowing that, I run a report on a shorter period:</p>
<p><pre>
Load Profile                    Per Second   Per Transaction  Per Exec  Per Call
~~~~~~~~~~~~~~~            ---------------   --------------- --------- ---------
             DB Time(s):               1.0               2.1      0.00      2.81
              DB CPU(s):               1.0               2.1      0.00      2.79
      Background CPU(s):               0.0               0.0      0.00      0.00
      Redo size (bytes):           8,518.5          18,255.4
  Logical read (blocks):         518,770.0       1,111,743.4
          Block changes:              41.0              87.9
 Physical read (blocks):              11.8              25.3
Physical write (blocks):               1.2               2.6
       Read IO requests:              11.5              24.7
</pre></p>
<p>Here are the numbers then. Up to 520000 logical reads per second per CPU.</p>
<p>That&#8217;s not extreme performance, but it&#8217;s an acceptable alternative to on-premises physical server. Provisioning is really easy.</p>
<h3>Update April 29th, 2016</h3>
<p>I realize that the last sentence may be misleading. Actually the performance is not bad at all. I was just comparing with the same tests I did on Oracle Cloud Services where I hit the storage head cache most of the time. The IOPS may need further tests. However the following workload with intensive updates (large buffer cache, PCT_UPDATE=25%) is not bad at all:
<pre>
Load Profile                    Per Second   Per Transaction  Per Exec  Per Call
~~~~~~~~~~~~~~~            ---------------   --------------- --------- ---------
             DB Time(s):               1.0               0.0      0.00      4.17
              DB CPU(s):               0.9               0.0      0.00      3.88
      Background CPU(s):               0.1               0.0      0.00      0.00
      Redo size (bytes):      38,568,625.6          51,953.1
  Logical read (blocks):         202,771.0             273.1
          Block changes:          97,125.0             130.8
 Physical read (blocks):               4.5               0.0
Physical write (blocks):           2,316.2               3.1
         Executes (SQL):           2,971.5               4.0
              Rollbacks:               0.0               0.0
           Transactions:             742.4
</pre></p>
<p>The CPU (according to Kevin Closson) is ok:</p>
<blockquote class="twitter-tweet" data-width="550"><p lang="en" dir="ltr">. <a href="https://twitter.com/dbiservices">@dbiservices</a> 518K LIOPS for SNP-EP E3 is good!  Nice post. *awesome* use of SLOB as a science tool <a href="https://t.co/S0X13gx9xT">https://t.co/S0X13gx9xT</a></p>
<p>&mdash; Kevin (@kevinclosson) <a href="https://twitter.com/kevinclosson/status/725798295239561219">April 28, 2016</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-83980" data-img="http://blog.dbi-services.com/wp-insides/uploads/sites/2/2016/04/EXO_IMG_2802-300x225.jpg"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-3422">
				<div id="div-comment-3422" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/6d1d4cedacd3203995be6ed5c40df23a?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn"><a href='http://www.exoscale.ch' rel='external nofollow' class='url'>Atbaoui Karim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-3422">
			April 29, 2016 at 17 h 35 min</a>		</div>

		<p>Hey Franck,</p>
<p>It was nice to meet you at SITB Geneva.</p>
<p>Thanks for this awesome blog post! You&#8217;ve done that great, explaining very clearly all the steps that allow anyone to build it&#8217;s own Oracle database on a Swiss Datacenter(s).</p>
<p>We&#8217;re glad to see that Oracle database works perfectly with Exoscale Open Cloud <img src="../wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /></p>
<p>You&#8217;re right this is not the latest CPU gen but new hardware will come very soon so we&#8217;ll keep you posted thus you&#8217;ll able to perform another test.</p>
<p>Hope to see you soon
Cheers
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-34231"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-3422' onclick='return addComment.moveForm( "div-comment-3422", "3422", "respond", "8397" )' aria-label='Reply to Atbaoui to Atbaoui Karim'>Reply to Atbaoui</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
