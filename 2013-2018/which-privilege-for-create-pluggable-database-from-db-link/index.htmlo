This was first published on <a href=https://blog.dbi-services.com/which-privilege-for-create-pluggable-database-from-db-link>https://blog.dbi-services.com/which-privilege-for-create-pluggable-database-from-db-link</a> (2017-05-29)
								<h1 class="entry-title">Which privilege for CREATE PLUGGABLE DATABASE from DB LINK?</h1>
		<div class="content-inner">
			
						
						
		   
			<p>When cloning a PDB from a remote CDB you need to define a database link to be used in the CREATE PLUGGABLE DATABASE &#8230; FROM &#8230;@&#8230; command. The documentation is not completely clear about the privileges required on the source for the user defined in the database link, so here are the different possibilities.</p>
<h3>Remote clone</h3>
<p>Here is what the documentation says:<a href="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2017/05/CapturePDBPrivsClone.png" rel="lightbox[16884]"><img src="../wp-insides/uploads/sites/2/2017/05/CapturePDBPrivsClone-1024x156.png" alt="CapturePDBPrivsClone" width="1024" height="156" class="alignnone size-large wp-image-16886" /></a></p>
<p>So you can connect to the CDB or to the PDB.</p>
<p>In order to connect to the CDB you need a common user with the CREATE SESSION system privilege:
<pre>
SQL&gt; create user C##DBA identified by oracle;
User C##DBA created.
SQL&gt; grant create session to C##DBA container=current;
Grant succeeded.
</pre></p>
<p>No need for CONTAINER=ALL here because you connect only to the CDB$ROOT.</p>
<p>Then you need the CREATE PLUGGABLE DATABASE system privilege on the PDB. You can grant it from the CDB$ROOT with the CONTAINER=ALL but it is sufficient to grant it locally on the source PDB:
<pre>
SQL&gt; alter session set container=PDB1;
Session altered.
SQL&gt; grant create pluggable database to C##DBA container=current;
Grant succeeded.
</pre></p>
<p>Note that, not documented, but the SYSOPER administrative privilege can replace the CREATE PLUGGABLE DATABASE so we can run the following instead of the previous one:
<pre>
SQL&gt; alter session set container=PDB1;
Session altered.
grant sysoper to C##DBA container=current;
Grant succeeded.
</pre></p>
<p>Both ways are usable for cloning, you create a database link to this common user, on the destination, and run the CLONE PLUGGABLE DATABASE:
<pre>
SQL&gt; create database link CDB1A connect to C##DBA identified by oracle using '//localhost/CDB1A';
Database link CDB1A created.
SQL&gt; create pluggable database PDB1CLONE from PDB1@CDB1A file_name_convert=('CDB1A/PDB1','CDB2A/PDB1CLONE');
Pluggable database PDB1CLONE created.
SQL&gt; alter  pluggable database PDB1CLONE open;
Pluggable database PDB1CLONE altered.
</pre></p>
<p>This was using a common user but you can also define the user locally on the source PDB:
<pre>
SQL&gt; alter session set container=PDB1;
Session altered.
SQL&gt; create user PDBDBA identified by oracle;
User PDBDBA created.
SQL&gt; grant create session to PDBDBA container=current;
Grant succeeded.
SQL&gt; grant create pluggable database to PDBDBA container=current;
Grant succeeded.
</pre></p>
<p>There again you have the alternative to use SYSOPER instead of CREATE PLUGGABLE DATABASE:
<pre>
SQL&gt; alter session set container=PDB1;
Session altered.
SQL&gt; create user PDBDBA identified by oracle;
User PDBDBA created.
SQL&gt; grant create session to PDBDBA container=current;
Grant succeeded.
SQL&gt; grant sysoper to PDBDBA container=current;
Grant succeeded.
</pre></p>
<p>With one of those, you can clone from the target with a database link connecting to the local user only:
<pre>
SQL&gt; create database link CDB1A connect to PDBDBA identified by oracle using '//localhost/PDB1';
Database link CDB1A created.
SQL&gt; create pluggable database PDB1CLONE from PDB1@CDB1A file_name_convert=('CDB1A/PDB1','CDB2A/PDB1CLONE');
Pluggable database PDB1CLONE created.
SQL&gt; alter  pluggable database PDB1CLONE open;
Pluggable database PDB1CLONE altered.
</pre></p>
<p>Then which alternative to use? The choice of the common or local user is up to you. I probably use a common user to do system administration, and cloning is one of them. But if you are in a PDBaaS environment where you are the PDB administrator, then you can clone your PDB to another CDB that you manage. This can mean cloning a PDB from the Cloud to a CDB on your laptop.</p>
<h3> PDB Relocate</h3>
<p>Things are different with the RELOCATE option where you drop the source PDB and redirect the connection to the new one. This is definitely a system administration task to do at CDB level and requires a common user. Trying it from a database link connecting to a local user will raise the following error:
<pre>
ORA-17628: Oracle error 65338 returned by remote Oracle server

65338, 00000, "unable to create pluggable database"
// *Cause:  An attempt was made to relocate a pluggable database using a
//          database link to the source pluggable database.
// *Action: Use a database link that points to the source multitenant container
//          database root and retry the operation.
</pre></p>
<p>Here is what the documentation says:<a href="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2017/05/CapturePDBPrivsRelocate.png" rel="lightbox[16884]"><img src="../wp-insides/uploads/sites/2/2017/05/CapturePDBPrivsRelocate-1024x185.png" alt="CapturePDBPrivsRelocate" width="1024" height="185" class="alignnone size-large wp-image-16888" /></a></p>
<p>So, we need to have a common user on the source CDB, with CREATE SESSION privilege, and it makes sense to use an administrative privilege:
<pre>
SQL&gt; create user C##DBA identified by oracle;
User C##DBA created.
SQL&gt; grant create session to C##DBA container=current;
Grant succeeded.
SQL&gt; alter session set container=PDB1;
Session altered.
grant sysoper to C##DBA container=current;
Grant succeeded.
</pre></p>
<p>The documentation mentions that you can use either SYSDBA or SYSOPER, but from my tests (and <a href="https://www.toadworld.com/platforms/oracle/w/wiki/11750.near-zero-downtime-pdb-relocation-in-oracle-database-12cr2" target="_blank">Deiby GÃ³mez ones</a>) only SYSOPER works without raising an &#8216;insufficient privileges&#8217;. The documentation mentions that CREATE PLUGGABLE DATABASE is also necessary. Actually, it is not. And, with a relocate, it cannot be an alternative to SYSOPER. The user must be a common user, the CREATE SESSION must be granted commonly, but the SYSOPER can be locally for the PDB we relocate.</p>
<h3>In summary</h3>
<p>To clone a remote PDB you can use a common or local user, with SYSOPER or CREATE PLUGGABLE DATABASE privilege. To relocate a PDB you need a common user with SYSOPER.</p>
<table class="rw-rating-table rw-ltr rw-left rw-no-labels"><tr><td><nobr>&nbsp;</nobr></td><td><div class="rw-left"><div class="rw-ui-container rw-class-blog-post rw-urid-168850" data-img="https://blog.dbi-services.com/wp-insides/uploads/sites/2/2017/05/CapturePDBPrivsClone-1024x156.png"></div></div></td></tr></table>							
		</div><!--/content-inner-->
<div class="comment-wrap ">

	<h3 id="comments"> One Comment</h3>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

	<ul class="comment-list ">
				<li class="comment even thread-even depth-1" id="comment-7572">
				<div id="div-comment-7572" class="comment-body">
				<div class="comment-author vcard">
			<img alt='' src='https://secure.gravatar.com/avatar/a2a19e1fb1fdd173d1a39b0e73390c09?s=60&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />			<cite class="fn">Foued</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="index.html#comment-7572">
			May 30, 2017 at 11 h 04 min</a>		</div>

		<p>Thanks Franck for this post.
<table class="rw-rating-table rw-ltr rw-left rw-no-labels">
<tr>
<td><nobr>&nbsp;</nobr></td>
<td>
<div class="rw-left">
<div class="rw-ui-container rw-class-comment rw-urid-75731"></div>
</div>
</td>
</tr>
</table>

		<div class="reply"><a class='comment-reply-link' href='index.html#comment-7572' onclick='return addComment.moveForm( "div-comment-7572", "7572", "respond", "16884" )' aria-label='Reply to Foued to Foued'>Reply to Foued</a></div>
				</div>
		</li><!-- #comment-## -->
	</ul>

 

								<div id="respond" class="comment-respond">
